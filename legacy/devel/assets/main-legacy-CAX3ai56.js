System.register([],function(e,t){"use strict";return{execute:function(){var e=document.createElement("style");e.textContent='*,:before,:after{--tw-border-spacing-x: 0;--tw-border-spacing-y: 0;--tw-translate-x: 0;--tw-translate-y: 0;--tw-rotate: 0;--tw-skew-x: 0;--tw-skew-y: 0;--tw-scale-x: 1;--tw-scale-y: 1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness: proximity;--tw-gradient-from-position: ;--tw-gradient-via-position: ;--tw-gradient-to-position: ;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width: 0px;--tw-ring-offset-color: #fff;--tw-ring-color: rgb(59 130 246 / .5);--tw-ring-offset-shadow: 0 0 #0000;--tw-ring-shadow: 0 0 #0000;--tw-shadow: 0 0 #0000;--tw-shadow-colored: 0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: ;--tw-contain-size: ;--tw-contain-layout: ;--tw-contain-paint: ;--tw-contain-style: }::backdrop{--tw-border-spacing-x: 0;--tw-border-spacing-y: 0;--tw-translate-x: 0;--tw-translate-y: 0;--tw-rotate: 0;--tw-skew-x: 0;--tw-skew-y: 0;--tw-scale-x: 1;--tw-scale-y: 1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness: proximity;--tw-gradient-from-position: ;--tw-gradient-via-position: ;--tw-gradient-to-position: ;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width: 0px;--tw-ring-offset-color: #fff;--tw-ring-color: rgb(59 130 246 / .5);--tw-ring-offset-shadow: 0 0 #0000;--tw-ring-shadow: 0 0 #0000;--tw-shadow: 0 0 #0000;--tw-shadow-colored: 0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: ;--tw-contain-size: ;--tw-contain-layout: ;--tw-contain-paint: ;--tw-contain-style: }*,:before,:after{box-sizing:border-box;border-width:0;border-style:solid;border-color:#e5e7eb}:before,:after{--tw-content: ""}html,:host{line-height:1.5;-webkit-text-size-adjust:100%;-moz-tab-size:4;-o-tab-size:4;tab-size:4;font-family:ui-sans-serif,system-ui,sans-serif,"Apple Color Emoji","Segoe UI Emoji",Segoe UI Symbol,"Noto Color Emoji";font-feature-settings:normal;font-variation-settings:normal;-webkit-tap-highlight-color:transparent}body{margin:0;line-height:inherit}hr{height:0;color:inherit;border-top-width:1px}abbr:where([title]){-webkit-text-decoration:underline dotted;text-decoration:underline dotted}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}a{color:inherit;text-decoration:inherit}b,strong{font-weight:bolder}code,kbd,samp,pre{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace;font-feature-settings:normal;font-variation-settings:normal;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}table{text-indent:0;border-color:inherit;border-collapse:collapse}button,input,optgroup,select,textarea{font-family:inherit;font-feature-settings:inherit;font-variation-settings:inherit;font-size:100%;font-weight:inherit;line-height:inherit;letter-spacing:inherit;color:inherit;margin:0;padding:0}button,select{text-transform:none}button,input:where([type=button]),input:where([type=reset]),input:where([type=submit]){-webkit-appearance:button;background-color:transparent;background-image:none}:-moz-focusring{outline:auto}:-moz-ui-invalid{box-shadow:none}progress{vertical-align:baseline}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}blockquote,dl,dd,h1,h2,h3,h4,h5,h6,hr,figure,p,pre{margin:0}fieldset{margin:0;padding:0}legend{padding:0}ol,ul,menu{list-style:none;margin:0;padding:0}dialog{padding:0}textarea{resize:vertical}input::-moz-placeholder,textarea::-moz-placeholder{opacity:1;color:#9ca3af}input::placeholder,textarea::placeholder{opacity:1;color:#9ca3af}button,[role=button]{cursor:pointer}:disabled{cursor:default}img,svg,video,canvas,audio,iframe,embed,object{display:block;vertical-align:middle}img,video{max-width:100%;height:auto}[hidden]:where(:not([hidden=until-found])){display:none}body{font-family:Inter,sans-serif}h1,h2,h3,h4,h5,h6{font-family:Cinzel,serif}.container{width:100%}@media (min-width: 640px){.container{max-width:640px}}@media (min-width: 768px){.container{max-width:768px}}@media (min-width: 1024px){.container{max-width:1024px}}@media (min-width: 1280px){.container{max-width:1280px}}@media (min-width: 1536px){.container{max-width:1536px}}.btn-primary{border-radius:.25rem;--tw-bg-opacity: 1;background-color:rgb(212 175 55 / var(--tw-bg-opacity, 1));padding:.5rem 1rem;font-weight:600;--tw-text-opacity: 1;color:rgb(0 0 0 / var(--tw-text-opacity, 1));transition-property:color,background-color,border-color,text-decoration-color,fill,stroke;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.15s}.btn-primary:hover{--tw-bg-opacity: 1;background-color:rgb(234 179 8 / var(--tw-bg-opacity, 1))}.btn-secondary{border-radius:.25rem;--tw-bg-opacity: 1;background-color:rgb(75 85 99 / var(--tw-bg-opacity, 1));padding:.5rem 1rem;font-weight:600;--tw-text-opacity: 1;color:rgb(255 255 255 / var(--tw-text-opacity, 1));transition-property:color,background-color,border-color,text-decoration-color,fill,stroke;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.15s}.btn-secondary:hover{--tw-bg-opacity: 1;background-color:rgb(55 65 81 / var(--tw-bg-opacity, 1))}.static{position:static}.fixed{position:fixed}.inset-0{top:0;right:0;bottom:0;left:0}.z-50{z-index:50}.mx-4{margin-left:1rem;margin-right:1rem}.mx-auto{margin-left:auto;margin-right:auto}.mb-12{margin-bottom:3rem}.mb-2{margin-bottom:.5rem}.mb-4{margin-bottom:1rem}.mb-6{margin-bottom:1.5rem}.mb-8{margin-bottom:2rem}.ml-2{margin-left:.5rem}.mr-2{margin-right:.5rem}.mr-3{margin-right:.75rem}.mt-1{margin-top:.25rem}.mt-4{margin-top:1rem}.mt-6{margin-top:1.5rem}.block{display:block}.inline-block{display:inline-block}.flex{display:flex}.inline-flex{display:inline-flex}.table{display:table}.grid{display:grid}.contents{display:contents}.h-2{height:.5rem}.h-32{height:8rem}.max-h-96{max-height:24rem}.min-h-screen{min-height:100vh}.w-full{width:100%}.max-w-4xl{max-width:56rem}.max-w-6xl{max-width:72rem}.scale-100{--tw-scale-x: 1;--tw-scale-y: 1;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.scale-95{--tw-scale-x: .95;--tw-scale-y: .95;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.transform{transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.resize-none{resize:none}.grid-cols-1{grid-template-columns:repeat(1,minmax(0,1fr))}.flex-wrap{flex-wrap:wrap}.items-center{align-items:center}.justify-center{justify-content:center}.justify-between{justify-content:space-between}.gap-2{gap:.5rem}.gap-3{gap:.75rem}.gap-4{gap:1rem}.space-x-6>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(1.5rem * var(--tw-space-x-reverse));margin-left:calc(1.5rem * calc(1 - var(--tw-space-x-reverse)))}.space-y-2>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(.5rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(.5rem * var(--tw-space-y-reverse))}.space-y-3>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(.75rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(.75rem * var(--tw-space-y-reverse))}.space-y-4>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(1rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(1rem * var(--tw-space-y-reverse))}.overflow-y-auto{overflow-y:auto}.rounded{border-radius:.25rem}.rounded-full{border-radius:9999px}.rounded-lg{border-radius:.5rem}.border{border-width:1px}.border-blue-600{--tw-border-opacity: 1;border-color:rgb(37 99 235 / var(--tw-border-opacity, 1))}.border-gray-600{--tw-border-opacity: 1;border-color:rgb(75 85 99 / var(--tw-border-opacity, 1))}.border-green-600{--tw-border-opacity: 1;border-color:rgb(22 163 74 / var(--tw-border-opacity, 1))}.border-red-500{--tw-border-opacity: 1;border-color:rgb(239 68 68 / var(--tw-border-opacity, 1))}.border-red-600{--tw-border-opacity: 1;border-color:rgb(220 38 38 / var(--tw-border-opacity, 1))}.border-yellow-600{--tw-border-opacity: 1;border-color:rgb(202 138 4 / var(--tw-border-opacity, 1))}.bg-black{--tw-bg-opacity: 1;background-color:rgb(0 0 0 / var(--tw-bg-opacity, 1))}.bg-blue-600{--tw-bg-opacity: 1;background-color:rgb(37 99 235 / var(--tw-bg-opacity, 1))}.bg-blue-800{--tw-bg-opacity: 1;background-color:rgb(30 64 175 / var(--tw-bg-opacity, 1))}.bg-blue-900{--tw-bg-opacity: 1;background-color:rgb(30 58 138 / var(--tw-bg-opacity, 1))}.bg-dnd-dark{--tw-bg-opacity: 1;background-color:rgb(26 26 26 / var(--tw-bg-opacity, 1))}.bg-dnd-gold{--tw-bg-opacity: 1;background-color:rgb(212 175 55 / var(--tw-bg-opacity, 1))}.bg-dnd-red{--tw-bg-opacity: 1;background-color:rgb(139 21 56 / var(--tw-bg-opacity, 1))}.bg-gray-700{--tw-bg-opacity: 1;background-color:rgb(55 65 81 / var(--tw-bg-opacity, 1))}.bg-gray-800{--tw-bg-opacity: 1;background-color:rgb(31 41 55 / var(--tw-bg-opacity, 1))}.bg-green-800{--tw-bg-opacity: 1;background-color:rgb(22 101 52 / var(--tw-bg-opacity, 1))}.bg-green-900{--tw-bg-opacity: 1;background-color:rgb(20 83 45 / var(--tw-bg-opacity, 1))}.bg-red-800{--tw-bg-opacity: 1;background-color:rgb(153 27 27 / var(--tw-bg-opacity, 1))}.bg-red-900{--tw-bg-opacity: 1;background-color:rgb(127 29 29 / var(--tw-bg-opacity, 1))}.bg-yellow-800{--tw-bg-opacity: 1;background-color:rgb(133 77 14 / var(--tw-bg-opacity, 1))}.bg-yellow-900{--tw-bg-opacity: 1;background-color:rgb(113 63 18 / var(--tw-bg-opacity, 1))}.bg-opacity-50{--tw-bg-opacity: .5}.p-3{padding:.75rem}.p-4{padding:1rem}.p-6{padding:1.5rem}.px-1{padding-left:.25rem;padding-right:.25rem}.px-2{padding-left:.5rem;padding-right:.5rem}.px-4{padding-left:1rem;padding-right:1rem}.py-1{padding-top:.25rem;padding-bottom:.25rem}.py-12{padding-top:3rem;padding-bottom:3rem}.py-2{padding-top:.5rem;padding-bottom:.5rem}.text-center{text-align:center}.font-cinzel{font-family:Cinzel,serif}.font-mono{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace}.text-5xl{font-size:3rem;line-height:1}.text-sm{font-size:.875rem;line-height:1.25rem}.text-xl{font-size:1.25rem;line-height:1.75rem}.text-xs{font-size:.75rem;line-height:1rem}.font-bold{font-weight:700}.font-medium{font-weight:500}.font-semibold{font-weight:600}.uppercase{text-transform:uppercase}.lowercase{text-transform:lowercase}.text-blue-200{--tw-text-opacity: 1;color:rgb(191 219 254 / var(--tw-text-opacity, 1))}.text-dnd-gold{--tw-text-opacity: 1;color:rgb(212 175 55 / var(--tw-text-opacity, 1))}.text-gray-200{--tw-text-opacity: 1;color:rgb(229 231 235 / var(--tw-text-opacity, 1))}.text-gray-300{--tw-text-opacity: 1;color:rgb(209 213 219 / var(--tw-text-opacity, 1))}.text-gray-400{--tw-text-opacity: 1;color:rgb(156 163 175 / var(--tw-text-opacity, 1))}.text-green-200{--tw-text-opacity: 1;color:rgb(187 247 208 / var(--tw-text-opacity, 1))}.text-green-400{--tw-text-opacity: 1;color:rgb(74 222 128 / var(--tw-text-opacity, 1))}.text-red-200{--tw-text-opacity: 1;color:rgb(254 202 202 / var(--tw-text-opacity, 1))}.text-red-400{--tw-text-opacity: 1;color:rgb(248 113 113 / var(--tw-text-opacity, 1))}.text-white{--tw-text-opacity: 1;color:rgb(255 255 255 / var(--tw-text-opacity, 1))}.text-yellow-200{--tw-text-opacity: 1;color:rgb(254 240 138 / var(--tw-text-opacity, 1))}.text-yellow-400{--tw-text-opacity: 1;color:rgb(250 204 21 / var(--tw-text-opacity, 1))}.placeholder-gray-400::-moz-placeholder{--tw-placeholder-opacity: 1;color:rgb(156 163 175 / var(--tw-placeholder-opacity, 1))}.placeholder-gray-400::placeholder{--tw-placeholder-opacity: 1;color:rgb(156 163 175 / var(--tw-placeholder-opacity, 1))}.opacity-0{opacity:0}.opacity-100{opacity:1}.filter{filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)}.transition{transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.15s}.transition-all{transition-property:all;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.15s}.transition-colors{transition-property:color,background-color,border-color,text-decoration-color,fill,stroke;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.15s}.duration-200{transition-duration:.2s}.duration-300{transition-duration:.3s}.ease-in{transition-timing-function:cubic-bezier(.4,0,1,1)}.ease-out{transition-timing-function:cubic-bezier(0,0,.2,1)}::-webkit-scrollbar{width:8px}::-webkit-scrollbar-track{background:#374151}::-webkit-scrollbar-thumb{background:#6b7280;border-radius:4px}::-webkit-scrollbar-thumb:hover{background:#9ca3af}.hover\\:bg-gray-600:hover{--tw-bg-opacity: 1;background-color:rgb(75 85 99 / var(--tw-bg-opacity, 1))}.hover\\:bg-red-700:hover{--tw-bg-opacity: 1;background-color:rgb(185 28 28 / var(--tw-bg-opacity, 1))}.hover\\:text-dnd-gold:hover{--tw-text-opacity: 1;color:rgb(212 175 55 / var(--tw-text-opacity, 1))}.hover\\:text-white:hover{--tw-text-opacity: 1;color:rgb(255 255 255 / var(--tw-text-opacity, 1))}.focus\\:border-transparent:focus{border-color:transparent}.focus\\:ring-2:focus{--tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow, 0 0 #0000)}.focus\\:ring-dnd-gold:focus{--tw-ring-opacity: 1;--tw-ring-color: rgb(212 175 55 / var(--tw-ring-opacity, 1))}.disabled\\:cursor-not-allowed:disabled{cursor:not-allowed}.disabled\\:opacity-50:disabled{opacity:.5}@media (min-width: 768px){.md\\:grid-cols-2{grid-template-columns:repeat(2,minmax(0,1fr))}}@media (min-width: 1024px){.lg\\:grid-cols-3{grid-template-columns:repeat(3,minmax(0,1fr))}}\n/*$vite$:1*/',document.head.appendChild(e);var t,n,r,i,a=!1,s=!1,o=[],l=-1;function c(e){var t;t=e,o.includes(t)||o.push(t),s||a||(a=!0,queueMicrotask(d))}function u(e){let t=o.indexOf(e);-1!==t&&t>l&&o.splice(t,1)}function d(){a=!1,s=!0;for(let e=0;e<o.length;e++)o[e](),l=e;o.length=0,l=-1,s=!1}var p=!0;function g(e){n=e}function f(e,t){let i,a=!0,s=n(()=>{let n=e();JSON.stringify(n),a?i=n:queueMicrotask(()=>{t(n,i),i=n}),a=!1});return()=>r(s)}var h=[],m=[],y=[];function b(e,t){"function"==typeof t?(e._x_cleanups||(e._x_cleanups=[]),e._x_cleanups.push(t)):(t=e,m.push(t))}function v(e){h.push(e)}function w(e,t,n){e._x_attributeCleanups||(e._x_attributeCleanups={}),e._x_attributeCleanups[t]||(e._x_attributeCleanups[t]=[]),e._x_attributeCleanups[t].push(n)}function x(e,t){e._x_attributeCleanups&&Object.entries(e._x_attributeCleanups).forEach(([n,r])=>{(void 0===t||t.includes(n))&&(r.forEach(e=>e()),delete e._x_attributeCleanups[n])})}var _=new MutationObserver(M),S=!1;function C(){_.observe(document,{subtree:!0,childList:!0,attributes:!0,attributeOldValue:!0}),S=!0}function k(){!function(){let e=_.takeRecords();E.push(()=>e.length>0&&M(e));let t=E.length;queueMicrotask(()=>{if(E.length===t)for(;E.length>0;)E.shift()()})}(),_.disconnect(),S=!1}var E=[];function $(e){if(!S)return e();k();let t=e();return C(),t}var L=!1,A=[];function M(e){if(L)return void(A=A.concat(e));let t=[],n=new Set,r=new Map,i=new Map;for(let a=0;a<e.length;a++)if(!e[a].target._x_ignoreMutationObserver&&("childList"===e[a].type&&(e[a].removedNodes.forEach(e=>{1===e.nodeType&&e._x_marker&&n.add(e)}),e[a].addedNodes.forEach(e=>{1===e.nodeType&&(n.has(e)?n.delete(e):e._x_marker||t.push(e))})),"attributes"===e[a].type)){let t=e[a].target,n=e[a].attributeName,s=e[a].oldValue,o=()=>{r.has(t)||r.set(t,[]),r.get(t).push({name:n,value:t.getAttribute(n)})},l=()=>{i.has(t)||i.set(t,[]),i.get(t).push(n)};t.hasAttribute(n)&&null===s?o():t.hasAttribute(n)?(l(),o()):l()}i.forEach((e,t)=>{x(t,e)}),r.forEach((e,t)=>{h.forEach(n=>n(t,e))});for(let a of n)t.some(e=>e.contains(a))||m.forEach(e=>e(a));for(let a of t)a.isConnected&&y.forEach(e=>e(a));t=null,n=null,r=null,i=null}function I(e){return D(F(e))}function T(e,t,n){return e._x_dataStack=[t,...F(n||e)],()=>{e._x_dataStack=e._x_dataStack.filter(e=>e!==t)}}function F(e){return e._x_dataStack?e._x_dataStack:"function"==typeof ShadowRoot&&e instanceof ShadowRoot?F(e.host):e.parentNode?F(e.parentNode):[]}function D(e){return new Proxy({objects:e},P)}var P={ownKeys:({objects:e})=>Array.from(new Set(e.flatMap(e=>Object.keys(e)))),has:({objects:e},t)=>t!=Symbol.unscopables&&e.some(e=>Object.prototype.hasOwnProperty.call(e,t)||Reflect.has(e,t)),get:({objects:e},t,n)=>"toJSON"==t?R:Reflect.get(e.find(e=>Reflect.has(e,t))||{},t,n),set({objects:e},t,n,r){const i=e.find(e=>Object.prototype.hasOwnProperty.call(e,t))||e[e.length-1],a=Object.getOwnPropertyDescriptor(i,t);return a?.set&&a?.get?a.set.call(r,n)||!0:Reflect.set(i,t,n)}};function R(){return Reflect.ownKeys(this).reduce((e,t)=>(e[t]=Reflect.get(this,t),e),{})}function N(e){let t=(n,r="")=>{Object.entries(Object.getOwnPropertyDescriptors(n)).forEach(([i,{value:a,enumerable:s}])=>{if(!1===s||void 0===a)return;if("object"==typeof a&&null!==a&&a.__v_skip)return;let o=""===r?i:`${r}.${i}`;var l;"object"==typeof a&&null!==a&&a._x_interceptor?n[i]=a.initialize(e,o,i):"object"!=typeof(l=a)||Array.isArray(l)||null===l||a===n||a instanceof Element||t(a,o)})};return t(e)}function O(e,t=()=>{}){let n={initialValue:void 0,_x_interceptor:!0,initialize(t,n,r){return e(this.initialValue,()=>function(e,t){return t.split(".").reduce((e,t)=>e[t],e)}(t,n),e=>z(t,n,e),n,r)}};return t(n),e=>{if("object"==typeof e&&null!==e&&e._x_interceptor){let t=n.initialize.bind(n);n.initialize=(r,i,a)=>{let s=e.initialize(r,i,a);return n.initialValue=s,t(r,i,a)}}else n.initialValue=e;return n}}function z(e,t,n){if("string"==typeof t&&(t=t.split(".")),1!==t.length){if(0===t.length)throw error;return e[t[0]]||(e[t[0]]={}),z(e[t[0]],t.slice(1),n)}e[t[0]]=n}var j={};function B(e,t){j[e]=t}function X(e,t){let n=function(e){let[t,n]=le(e),r={interceptor:O,...t};return b(e,n),r}(t);return Object.entries(j).forEach(([r,i])=>{Object.defineProperty(e,`$${r}`,{get:()=>i(t,n),enumerable:!1})}),e}function W(e,t,n,...r){try{return n(...r)}catch(i){U(i,e,t)}}function U(e,t,n=void 0){e=Object.assign(e??{message:"No error message given."},{el:t,expression:n}),console.warn(`Alpine Expression Error: ${e.message}\n\n${n?'Expression: "'+n+'"\n\n':""}`,t),setTimeout(()=>{throw e},0)}var q=!0;function V(e){let t=q;q=!1;let n=e();return q=t,n}function H(e,t,n={}){let r;return G(e,t)(e=>r=e,n),r}function G(...e){return K(...e)}var K=Y;function Y(e,t){let n={};X(n,e);let r=[n,...F(e)],i="function"==typeof t?function(e,t){return(n=()=>{},{scope:r={},params:i=[]}={})=>{Q(n,t.apply(D([r,...e]),i))}}(r,t):function(e,t,n){let r=function(e,t){if(J[e])return J[e];let n=Object.getPrototypeOf(async function(){}).constructor,r=/^[\n\s]*if.*\(.*\)/.test(e.trim())||/^(let|const)\s/.test(e.trim())?`(async()=>{ ${e} })()`:e;const i=()=>{try{let t=new n(["__self","scope"],`with (scope) { __self.result = ${r} }; __self.finished = true; return __self.result;`);return Object.defineProperty(t,"name",{value:`[Alpine] ${e}`}),t}catch(i){return U(i,t,e),Promise.resolve()}};let a=i();return J[e]=a,a}(t,n);return(i=()=>{},{scope:a={},params:s=[]}={})=>{r.result=void 0,r.finished=!1;let o=D([a,...e]);if("function"==typeof r){let e=r(r,o).catch(e=>U(e,n,t));r.finished?(Q(i,r.result,o,s,n),r.result=void 0):e.then(e=>{Q(i,e,o,s,n)}).catch(e=>U(e,n,t)).finally(()=>r.result=void 0)}}}(r,t,e);return W.bind(null,e,t,i)}var J={};function Q(e,t,n,r,i){if(q&&"function"==typeof t){let a=t.apply(n,r);a instanceof Promise?a.then(t=>Q(e,t,n,r)).catch(e=>U(e,i,t)):e(a)}else"object"==typeof t&&t instanceof Promise?t.then(t=>e(t)):e(t)}var Z="x-";function ee(e=""){return Z+e}var te={};function ne(e,t){return te[e]=t,{before(t){if(!te[t])return void console.warn(String.raw`Cannot find directive \`${t}\`. \`${e}\` will use the default order of execution`);const n=me.indexOf(t);me.splice(n>=0?n:me.indexOf("DEFAULT"),0,e)}}}function re(e,t,n){if(t=Array.from(t),e._x_virtualDirectives){let n=Object.entries(e._x_virtualDirectives).map(([e,t])=>({name:e,value:t})),r=ie(n);n=n.map(e=>r.find(t=>t.name===e.name)?{name:`x-bind:${e.name}`,value:`"${e.value}"`}:e),t=t.concat(n)}let r={},i=t.map(ue((e,t)=>r[e]=t)).filter(ge).map(function(e,t){return({name:n,value:r})=>{let i=n.match(fe()),a=n.match(/:([a-zA-Z0-9\-_:]+)/),s=n.match(/\.[^.\]]+(?=[^\]]*$)/g)||[],o=t||e[n]||n;return{type:i?i[1]:null,value:a?a[1]:null,modifiers:s.map(e=>e.replace(".","")),expression:r,original:o}}}(r,n)).sort(ye);return i.map(t=>function(e,t){let n=()=>{},r=te[t.type]||n,[i,a]=le(e);w(e,t.original,a);let s=()=>{e._x_ignore||e._x_ignoreSelf||(r.inline&&r.inline(e,t,i),r=r.bind(r,e,t,i),ae?se.get(oe).push(r):r())};return s.runCleanups=a,s}(e,t))}function ie(e){return Array.from(e).map(ue()).filter(e=>!ge(e))}var ae=!1,se=new Map,oe=Symbol();function le(e){let t=[],[i,a]=function(e){let t=()=>{};return[i=>{let a=n(i);return e._x_effects||(e._x_effects=new Set,e._x_runEffects=()=>{e._x_effects.forEach(e=>e())}),e._x_effects.add(a),t=()=>{void 0!==a&&(e._x_effects.delete(a),r(a))},a},()=>{t()}]}(e);return t.push(a),[{Alpine:mt,effect:i,cleanup:e=>t.push(e),evaluateLater:G.bind(G,e),evaluate:H.bind(H,e)},()=>t.forEach(e=>e())]}var ce=(e,t)=>({name:n,value:r})=>(n.startsWith(e)&&(n=n.replace(e,t)),{name:n,value:r});function ue(e=()=>{}){return({name:t,value:n})=>{let{name:r,value:i}=de.reduce((e,t)=>t(e),{name:t,value:n});return r!==t&&e(r,t),{name:r,value:i}}}var de=[];function pe(e){de.push(e)}function ge({name:e}){return fe().test(e)}var fe=()=>new RegExp(`^${Z}([^:^.]+)\\b`),he="DEFAULT",me=["ignore","ref","data","id","anchor","bind","init","for","model","modelable","transition","show","if",he,"teleport"];function ye(e,t){let n=-1===me.indexOf(e.type)?he:e.type,r=-1===me.indexOf(t.type)?he:t.type;return me.indexOf(n)-me.indexOf(r)}function be(e,t,n={}){e.dispatchEvent(new CustomEvent(t,{detail:n,bubbles:!0,composed:!0,cancelable:!0}))}function ve(e,t){if("function"==typeof ShadowRoot&&e instanceof ShadowRoot)return void Array.from(e.children).forEach(e=>ve(e,t));let n=!1;if(t(e,()=>n=!0),n)return;let r=e.firstElementChild;for(;r;)ve(r,t),r=r.nextElementSibling}function we(e,...t){console.warn(`Alpine Warning: ${e}`,...t)}var xe=!1,_e=[],Se=[];function Ce(){return _e.map(e=>e())}function ke(){return _e.concat(Se).map(e=>e())}function Ee(e){_e.push(e)}function $e(e){Se.push(e)}function Le(e,t=!1){return Ae(e,e=>{if((t?ke():Ce()).some(t=>e.matches(t)))return!0})}function Ae(e,t){if(e){if(t(e))return e;if(e._x_teleportBack&&(e=e._x_teleportBack),e.parentElement)return Ae(e.parentElement,t)}}var Me=[],Ie=1;function Te(e,t=ve,n=()=>{}){Ae(e,e=>e._x_ignore)||function(e){ae=!0;let t=Symbol();oe=t,se.set(t,[]);let n=()=>{for(;se.get(t).length;)se.get(t).shift()();se.delete(t)};e(n),ae=!1,n()}(()=>{t(e,(e,t)=>{e._x_marker||(n(e,t),Me.forEach(n=>n(e,t)),re(e,e.attributes).forEach(e=>e()),e._x_ignore||(e._x_marker=Ie++),e._x_ignore&&t())})})}function Fe(e,t=ve){t(e,e=>{!function(e){for(e._x_effects?.forEach(u);e._x_cleanups?.length;)e._x_cleanups.pop()()}(e),x(e),delete e._x_marker})}var De=[],Pe=!1;function Re(e=()=>{}){return queueMicrotask(()=>{Pe||setTimeout(()=>{Ne()})}),new Promise(t=>{De.push(()=>{e(),t()})})}function Ne(){for(Pe=!1;De.length;)De.shift()()}function Oe(e,t){return Array.isArray(t)?ze(e,t.join(" ")):"object"==typeof t&&null!==t?function(e,t){let n=e=>e.split(" ").filter(Boolean),r=Object.entries(t).flatMap(([e,t])=>!!t&&n(e)).filter(Boolean),i=Object.entries(t).flatMap(([e,t])=>!t&&n(e)).filter(Boolean),a=[],s=[];return i.forEach(t=>{e.classList.contains(t)&&(e.classList.remove(t),s.push(t))}),r.forEach(t=>{e.classList.contains(t)||(e.classList.add(t),a.push(t))}),()=>{s.forEach(t=>e.classList.add(t)),a.forEach(t=>e.classList.remove(t))}}(e,t):"function"==typeof t?Oe(e,t()):ze(e,t)}function ze(e,t){return t=!0===t?t="":t||"",n=t.split(" ").filter(t=>!e.classList.contains(t)).filter(Boolean),e.classList.add(...n),()=>{e.classList.remove(...n)};var n}function je(e,t){return"object"==typeof t&&null!==t?function(e,t){let n={};return Object.entries(t).forEach(([t,r])=>{n[t]=e.style[t],t.startsWith("--")||(t=t.replace(/([a-z])([A-Z])/g,"$1-$2").toLowerCase()),e.style.setProperty(t,r)}),setTimeout(()=>{0===e.style.length&&e.removeAttribute("style")}),()=>{je(e,n)}}(e,t):function(e,t){let n=e.getAttribute("style",t);return e.setAttribute("style",t),()=>{e.setAttribute("style",n||"")}}(e,t)}function Be(e,t=()=>{}){let n=!1;return function(){n?t.apply(this,arguments):(n=!0,e.apply(this,arguments))}}function Xe(e,t,n={}){e._x_transition||(e._x_transition={enter:{during:n,start:n,end:n},leave:{during:n,start:n,end:n},in(n=()=>{},r=()=>{}){Ue(e,t,{during:this.enter.during,start:this.enter.start,end:this.enter.end},n,r)},out(n=()=>{},r=()=>{}){Ue(e,t,{during:this.leave.during,start:this.leave.start,end:this.leave.end},n,r)}})}function We(e){let t=e.parentNode;if(t)return t._x_hidePromise?t:We(t)}function Ue(e,t,{during:n,start:r,end:i}={},a=()=>{},s=()=>{}){if(e._x_transitioning&&e._x_transitioning.cancel(),0===Object.keys(n).length&&0===Object.keys(r).length&&0===Object.keys(i).length)return a(),void s();let o,l,c;!function(e,t){let n,r,i,a=Be(()=>{$(()=>{n=!0,r||t.before(),i||(t.end(),Ne()),t.after(),e.isConnected&&t.cleanup(),delete e._x_transitioning})});e._x_transitioning={beforeCancels:[],beforeCancel(e){this.beforeCancels.push(e)},cancel:Be(function(){for(;this.beforeCancels.length;)this.beforeCancels.shift()();a()}),finish:a},$(()=>{t.start(),t.during()}),Pe=!0,requestAnimationFrame(()=>{if(n)return;let a=1e3*Number(getComputedStyle(e).transitionDuration.replace(/,.*/,"").replace("s","")),s=1e3*Number(getComputedStyle(e).transitionDelay.replace(/,.*/,"").replace("s",""));0===a&&(a=1e3*Number(getComputedStyle(e).animationDuration.replace("s",""))),$(()=>{t.before()}),r=!0,requestAnimationFrame(()=>{n||($(()=>{t.end()}),Ne(),setTimeout(e._x_transitioning.finish,a+s),i=!0)})})}(e,{start(){o=t(e,r)},during(){l=t(e,n)},before:a,end(){o(),c=t(e,i)},after:s,cleanup(){l(),c()}})}function qe(e,t,n){if(-1===e.indexOf(t))return n;const r=e[e.indexOf(t)+1];if(!r)return n;if("scale"===t&&isNaN(r))return n;if("duration"===t||"delay"===t){let e=r.match(/([0-9]+)ms/);if(e)return e[1]}return"origin"===t&&["top","right","left","center","bottom"].includes(e[e.indexOf(t)+2])?[r,e[e.indexOf(t)+2]].join(" "):r}ne("transition",(e,{value:t,modifiers:n,expression:r},{evaluate:i})=>{"function"==typeof r&&(r=i(r)),!1!==r&&(r&&"boolean"!=typeof r?function(e,t,n){Xe(e,Oe,"");let r={enter:t=>{e._x_transition.enter.during=t},"enter-start":t=>{e._x_transition.enter.start=t},"enter-end":t=>{e._x_transition.enter.end=t},leave:t=>{e._x_transition.leave.during=t},"leave-start":t=>{e._x_transition.leave.start=t},"leave-end":t=>{e._x_transition.leave.end=t}};r[n](t)}(e,r,t):function(e,t,n){Xe(e,je);let r=!t.includes("in")&&!t.includes("out")&&!n,i=r||t.includes("in")||["enter"].includes(n),a=r||t.includes("out")||["leave"].includes(n);t.includes("in")&&!r&&(t=t.filter((e,n)=>n<t.indexOf("out"))),t.includes("out")&&!r&&(t=t.filter((e,n)=>n>t.indexOf("out")));let s=!t.includes("opacity")&&!t.includes("scale"),o=s||t.includes("opacity"),l=s||t.includes("scale"),c=o?0:1,u=l?qe(t,"scale",95)/100:1,d=qe(t,"delay",0)/1e3,p=qe(t,"origin","center"),g="opacity, transform",f=qe(t,"duration",150)/1e3,h=qe(t,"duration",75)/1e3,m="cubic-bezier(0.4, 0.0, 0.2, 1)";i&&(e._x_transition.enter.during={transformOrigin:p,transitionDelay:`${d}s`,transitionProperty:g,transitionDuration:`${f}s`,transitionTimingFunction:m},e._x_transition.enter.start={opacity:c,transform:`scale(${u})`},e._x_transition.enter.end={opacity:1,transform:"scale(1)"}),a&&(e._x_transition.leave.during={transformOrigin:p,transitionDelay:`${d}s`,transitionProperty:g,transitionDuration:`${h}s`,transitionTimingFunction:m},e._x_transition.leave.start={opacity:1,transform:"scale(1)"},e._x_transition.leave.end={opacity:c,transform:`scale(${u})`})}(e,n,t))}),window.Element.prototype._x_toggleAndCascadeWithTransitions=function(e,t,n,r){const i="visible"===document.visibilityState?requestAnimationFrame:setTimeout;let a=()=>i(n);t?e._x_transition&&(e._x_transition.enter||e._x_transition.leave)?e._x_transition.enter&&(Object.entries(e._x_transition.enter.during).length||Object.entries(e._x_transition.enter.start).length||Object.entries(e._x_transition.enter.end).length)?e._x_transition.in(n):a():e._x_transition?e._x_transition.in(n):a():(e._x_hidePromise=e._x_transition?new Promise((t,n)=>{e._x_transition.out(()=>{},()=>t(r)),e._x_transitioning&&e._x_transitioning.beforeCancel(()=>n({isFromCancelledTransition:!0}))}):Promise.resolve(r),queueMicrotask(()=>{let t=We(e);t?(t._x_hideChildren||(t._x_hideChildren=[]),t._x_hideChildren.push(e)):i(()=>{let t=e=>{let n=Promise.all([e._x_hidePromise,...(e._x_hideChildren||[]).map(t)]).then(([e])=>e?.());return delete e._x_hidePromise,delete e._x_hideChildren,n};t(e).catch(e=>{if(!e.isFromCancelledTransition)throw e})})}))};var Ve=!1;function He(e,t=()=>{}){return(...n)=>Ve?t(...n):e(...n)}var Ge=[];function Ke(e){Ge.push(e)}var Ye=!1;function Je(e){let t=n;g((e,n)=>{let i=t(e);return r(i),()=>{}}),e(),g(t)}function Qe(e,n,r,i=[]){switch(e._x_bindings||(e._x_bindings=t({})),e._x_bindings[n]=r,n=i.includes("camel")?n.toLowerCase().replace(/-(\w)/g,(e,t)=>t.toUpperCase()):n){case"value":!function(e,t){if(st(e))void 0===e.attributes.value&&(e.value=t),window.fromModel&&(e.checked="boolean"==typeof t?tt(e.value)===t:et(e.value,t));else if(at(e))Number.isInteger(t)?e.value=t:Array.isArray(t)||"boolean"==typeof t||[null,void 0].includes(t)?Array.isArray(t)?e.checked=t.some(t=>et(t,e.value)):e.checked=!!t:e.value=String(t);else if("SELECT"===e.tagName)!function(e,t){const n=[].concat(t).map(e=>e+"");Array.from(e.options).forEach(e=>{e.selected=n.includes(e.value)})}(e,t);else{if(e.value===t)return;e.value=void 0===t?"":t}}(e,r);break;case"style":!function(e,t){e._x_undoAddedStyles&&e._x_undoAddedStyles(),e._x_undoAddedStyles=je(e,t)}(e,r);break;case"class":!function(e,t){e._x_undoAddedClasses&&e._x_undoAddedClasses(),e._x_undoAddedClasses=Oe(e,t)}(e,r);break;case"selected":case"checked":!function(e,t,n){Ze(e,t,n),function(e,t,n){e[t]!==n&&(e[t]=n)}(e,t,n)}(e,n,r);break;default:Ze(e,n,r)}}function Ze(e,t,n){[null,void 0,!1].includes(n)&&function(e){return!["aria-pressed","aria-checked","aria-expanded","aria-selected"].includes(e)}(t)?e.removeAttribute(t):(rt(t)&&(n=t),function(e,t,n){e.getAttribute(t)!=n&&e.setAttribute(t,n)}(e,t,n))}function et(e,t){return e==t}function tt(e){return!![1,"1","true","on","yes",!0].includes(e)||![0,"0","false","off","no",!1].includes(e)&&(e?Boolean(e):null)}var nt=new Set(["allowfullscreen","async","autofocus","autoplay","checked","controls","default","defer","disabled","formnovalidate","inert","ismap","itemscope","loop","multiple","muted","nomodule","novalidate","open","playsinline","readonly","required","reversed","selected","shadowrootclonable","shadowrootdelegatesfocus","shadowrootserializable"]);function rt(e){return nt.has(e)}function it(e,t,n){let r=e.getAttribute(t);return null===r?"function"==typeof n?n():n:""===r||(rt(t)?!![t,"true"].includes(r):r)}function at(e){return"checkbox"===e.type||"ui-checkbox"===e.localName||"ui-switch"===e.localName}function st(e){return"radio"===e.type||"ui-radio"===e.localName}function ot(e,t){var n;return function(){var r=this,i=arguments;clearTimeout(n),n=setTimeout(function(){n=null,e.apply(r,i)},t)}}function lt(e,t){let n;return function(){let r=this,i=arguments;n||(e.apply(r,i),n=!0,setTimeout(()=>n=!1,t))}}function ct({get:e,set:t},{get:i,set:a}){let s,o=!0,l=n(()=>{let n=e(),r=i();if(o)a(ut(n)),o=!1;else{let e=JSON.stringify(n),i=JSON.stringify(r);e!==s?a(ut(n)):e!==i&&t(ut(r))}s=JSON.stringify(e()),JSON.stringify(i())});return()=>{r(l)}}function ut(e){return"object"==typeof e?JSON.parse(JSON.stringify(e)):e}var dt={},pt=!1,gt={};function ft(e,t,n){let r=[];for(;r.length;)r.pop()();let i=Object.entries(t).map(([e,t])=>({name:e,value:t})),a=ie(i);return i=i.map(e=>a.find(t=>t.name===e.name)?{name:`x-bind:${e.name}`,value:`"${e.value}"`}:e),re(e,i,n).map(e=>{r.push(e.runCleanups),e()}),()=>{for(;r.length;)r.pop()()}}var ht={},mt={get reactive(){return t},get release(){return r},get effect(){return n},get raw(){return i},version:"3.14.9",flushAndStopDeferringMutations:function(){L=!1,M(A),A=[]},dontAutoEvaluateFunctions:V,disableEffectScheduling:function(e){p=!1,e(),p=!0},startObservingMutations:C,stopObservingMutations:k,setReactivityEngine:function(e){t=e.reactive,r=e.release,n=t=>e.effect(t,{scheduler:e=>{p?c(e):e()}}),i=e.raw},onAttributeRemoved:w,onAttributesAdded:v,closestDataStack:F,skipDuringClone:He,onlyDuringClone:function(e){return(...t)=>Ve&&e(...t)},addRootSelector:Ee,addInitSelector:$e,interceptClone:Ke,addScopeToNode:T,deferMutations:function(){L=!0},mapAttributes:pe,evaluateLater:G,interceptInit:function(e){Me.push(e)},setEvaluator:function(e){K=e},mergeProxies:D,extractProp:function(e,t,n,r=!0){if(e._x_bindings&&void 0!==e._x_bindings[t])return e._x_bindings[t];if(e._x_inlineBindings&&void 0!==e._x_inlineBindings[t]){let n=e._x_inlineBindings[t];return n.extract=r,V(()=>H(e,n.expression))}return it(e,t,n)},findClosest:Ae,onElRemoved:b,closestRoot:Le,destroyTree:Fe,interceptor:O,transition:Ue,setStyles:je,mutateDom:$,directive:ne,entangle:ct,throttle:lt,debounce:ot,evaluate:H,initTree:Te,nextTick:Re,prefixed:ee,prefix:function(e){Z=e},plugin:function(e){(Array.isArray(e)?e:[e]).forEach(e=>e(mt))},magic:B,store:function(e,n){if(pt||(dt=t(dt),pt=!0),void 0===n)return dt[e];dt[e]=n,N(dt[e]),"object"==typeof n&&null!==n&&n.hasOwnProperty("init")&&"function"==typeof n.init&&dt[e].init()},start:function(){var e;xe&&we("Alpine has already been initialized on this page. Calling Alpine.start() more than once can cause problems."),xe=!0,document.body||we("Unable to initialize. Trying to load Alpine before `<body>` is available. Did you forget to add `defer` in Alpine's `<script>` tag?"),be(document,"alpine:init"),be(document,"alpine:initializing"),C(),e=e=>Te(e,ve),y.push(e),b(e=>Fe(e)),v((e,t)=>{re(e,t).forEach(e=>e())}),Array.from(document.querySelectorAll(ke().join(","))).filter(e=>!Le(e.parentElement,!0)).forEach(e=>{Te(e)}),be(document,"alpine:initialized"),setTimeout(()=>{[["ui","dialog",["[x-dialog], [x-popover]"]],["anchor","anchor",["[x-anchor]"]],["sort","sort",["[x-sort]"]]].forEach(([e,t,n])=>{var r;r=t,Object.keys(te).includes(r)||n.some(t=>{if(document.querySelector(t))return we(`found "${t}", but missing ${e} plugin`),!0})})})},clone:function(e,t){t._x_dataStack||(t._x_dataStack=e._x_dataStack),Ve=!0,Ye=!0,Je(()=>{!function(e){let t=!1;Te(e,(e,n)=>{ve(e,(e,r)=>{if(t&&function(e){return Ce().some(t=>e.matches(t))}(e))return r();t=!0,n(e,r)})})}(t)}),Ve=!1,Ye=!1},cloneNode:function(e,t){Ge.forEach(n=>n(e,t)),Ve=!0,Je(()=>{Te(t,(e,t)=>{t(e,()=>{})})}),Ve=!1},bound:function(e,t,n){return e._x_bindings&&void 0!==e._x_bindings[t]?e._x_bindings[t]:it(e,t,n)},$data:I,watch:f,walk:ve,data:function(e,t){ht[e]=t},bind:function(e,t){let n="function"!=typeof t?()=>t:t;return e instanceof Element?ft(e,n()):(gt[e]=n,()=>{})}};function yt(e,t){const n=Object.create(null),r=e.split(",");for(let i=0;i<r.length;i++)n[r[i]]=!0;return e=>!!n[e]}var bt,vt=Object.freeze({}),wt=Object.prototype.hasOwnProperty,xt=(e,t)=>wt.call(e,t),_t=Array.isArray,St=e=>"[object Map]"===$t(e),Ct=e=>"symbol"==typeof e,kt=e=>null!==e&&"object"==typeof e,Et=Object.prototype.toString,$t=e=>Et.call(e),Lt=e=>$t(e).slice(8,-1),At=e=>"string"==typeof e&&"NaN"!==e&&"-"!==e[0]&&""+parseInt(e,10)===e,Mt=(e=>{const t=Object.create(null);return n=>t[n]||(t[n]=e(n))})(e=>e.charAt(0).toUpperCase()+e.slice(1)),It=(e,t)=>e!==t&&(e==e||t==t),Tt=new WeakMap,Ft=[],Dt=Symbol("iterate"),Pt=Symbol("Map key iterate"),Rt=0;function Nt(e){const{deps:t}=e;if(t.length){for(let n=0;n<t.length;n++)t[n].delete(e);t.length=0}}var Ot=!0,zt=[];function jt(){const e=zt.pop();Ot=void 0===e||e}function Bt(e,t,n){if(!Ot||void 0===bt)return;let r=Tt.get(e);r||Tt.set(e,r=new Map);let i=r.get(n);i||r.set(n,i=new Set),i.has(bt)||(i.add(bt),bt.deps.push(i),bt.options.onTrack&&bt.options.onTrack({effect:bt,target:e,type:t,key:n}))}function Xt(e,t,n,r,i,a){const s=Tt.get(e);if(!s)return;const o=new Set,l=e=>{e&&e.forEach(e=>{(e!==bt||e.allowRecurse)&&o.add(e)})};if("clear"===t)s.forEach(l);else if("length"===n&&_t(e))s.forEach((e,t)=>{("length"===t||t>=r)&&l(e)});else switch(void 0!==n&&l(s.get(n)),t){case"add":_t(e)?At(n)&&l(s.get("length")):(l(s.get(Dt)),St(e)&&l(s.get(Pt)));break;case"delete":_t(e)||(l(s.get(Dt)),St(e)&&l(s.get(Pt)));break;case"set":St(e)&&l(s.get(Dt))}o.forEach(s=>{s.options.onTrigger&&s.options.onTrigger({effect:s,target:e,key:n,type:t,newValue:r,oldValue:i,oldTarget:a}),s.options.scheduler?s.options.scheduler(s):s()})}var Wt=yt("__proto__,__v_isRef,__isVue"),Ut=new Set(Object.getOwnPropertyNames(Symbol).map(e=>Symbol[e]).filter(Ct)),qt=Kt(),Vt=Kt(!0),Ht=Gt();function Gt(){const e={};return["includes","indexOf","lastIndexOf"].forEach(t=>{e[t]=function(...e){const n=Mn(this);for(let t=0,i=this.length;t<i;t++)Bt(n,"get",t+"");const r=n[t](...e);return-1===r||!1===r?n[t](...e.map(Mn)):r}}),["push","pop","shift","unshift","splice"].forEach(t=>{e[t]=function(...e){zt.push(Ot),Ot=!1;const n=Mn(this)[t].apply(this,e);return jt(),n}}),e}function Kt(e=!1,t=!1){return function(n,r,i){if("__v_isReactive"===r)return!e;if("__v_isReadonly"===r)return e;if("__v_raw"===r&&i===(e?t?En:kn:t?Cn:Sn).get(n))return n;const a=_t(n);if(!e&&a&&xt(Ht,r))return Reflect.get(Ht,r,i);const s=Reflect.get(n,r,i);return(Ct(r)?Ut.has(r):Wt(r))?s:(e||Bt(n,"get",r),t?s:In(s)?a&&At(r)?s:s.value:kt(s)?e?Ln(s):$n(s):s)}}function Yt(e=!1){return function(t,n,r,i){let a=t[n];if(!e&&(r=Mn(r),a=Mn(a),!_t(t)&&In(a)&&!In(r)))return a.value=r,!0;const s=_t(t)&&At(n)?Number(n)<t.length:xt(t,n),o=Reflect.set(t,n,r,i);return t===Mn(i)&&(s?It(r,a)&&Xt(t,"set",n,r,a):Xt(t,"add",n,r)),o}}var Jt={get:qt,set:Yt(),deleteProperty:function(e,t){const n=xt(e,t),r=e[t],i=Reflect.deleteProperty(e,t);return i&&n&&Xt(e,"delete",t,void 0,r),i},has:function(e,t){const n=Reflect.has(e,t);return Ct(t)&&Ut.has(t)||Bt(e,"has",t),n},ownKeys:function(e){return Bt(e,"iterate",_t(e)?"length":Dt),Reflect.ownKeys(e)}},Qt={get:Vt,set:(e,t)=>(console.warn(`Set operation on key "${String(t)}" failed: target is readonly.`,e),!0),deleteProperty:(e,t)=>(console.warn(`Delete operation on key "${String(t)}" failed: target is readonly.`,e),!0)},Zt=e=>kt(e)?$n(e):e,en=e=>kt(e)?Ln(e):e,tn=e=>e,nn=e=>Reflect.getPrototypeOf(e);function rn(e,t,n=!1,r=!1){const i=Mn(e=e.__v_raw),a=Mn(t);t!==a&&!n&&Bt(i,"get",t),!n&&Bt(i,"get",a);const{has:s}=nn(i),o=r?tn:n?en:Zt;return s.call(i,t)?o(e.get(t)):s.call(i,a)?o(e.get(a)):void(e!==i&&e.get(t))}function an(e,t=!1){const n=this.__v_raw,r=Mn(n),i=Mn(e);return e!==i&&!t&&Bt(r,"has",e),!t&&Bt(r,"has",i),e===i?n.has(e):n.has(e)||n.has(i)}function sn(e,t=!1){return e=e.__v_raw,!t&&Bt(Mn(e),"iterate",Dt),Reflect.get(e,"size",e)}function on(e){e=Mn(e);const t=Mn(this);return nn(t).has.call(t,e)||(t.add(e),Xt(t,"add",e,e)),this}function ln(e,t){t=Mn(t);const n=Mn(this),{has:r,get:i}=nn(n);let a=r.call(n,e);a?_n(n,r,e):(e=Mn(e),a=r.call(n,e));const s=i.call(n,e);return n.set(e,t),a?It(t,s)&&Xt(n,"set",e,t,s):Xt(n,"add",e,t),this}function cn(e){const t=Mn(this),{has:n,get:r}=nn(t);let i=n.call(t,e);i?_n(t,n,e):(e=Mn(e),i=n.call(t,e));const a=r?r.call(t,e):void 0,s=t.delete(e);return i&&Xt(t,"delete",e,void 0,a),s}function un(){const e=Mn(this),t=0!==e.size,n=St(e)?new Map(e):new Set(e),r=e.clear();return t&&Xt(e,"clear",void 0,void 0,n),r}function dn(e,t){return function(n,r){const i=this,a=i.__v_raw,s=Mn(a),o=t?tn:e?en:Zt;return!e&&Bt(s,"iterate",Dt),a.forEach((e,t)=>n.call(r,o(e),o(t),i))}}function pn(e,t,n){return function(...r){const i=this.__v_raw,a=Mn(i),s=St(a),o="entries"===e||e===Symbol.iterator&&s,l="keys"===e&&s,c=i[e](...r),u=n?tn:t?en:Zt;return!t&&Bt(a,"iterate",l?Pt:Dt),{next(){const{value:e,done:t}=c.next();return t?{value:e,done:t}:{value:o?[u(e[0]),u(e[1])]:u(e),done:t}},[Symbol.iterator](){return this}}}}function gn(e){return function(...t){{const n=t[0]?`on key "${t[0]}" `:"";console.warn(`${Mt(e)} operation ${n}failed: target is readonly.`,Mn(this))}return"delete"!==e&&this}}function fn(){const e={get(e){return rn(this,e)},get size(){return sn(this)},has:an,add:on,set:ln,delete:cn,clear:un,forEach:dn(!1,!1)},t={get(e){return rn(this,e,!1,!0)},get size(){return sn(this)},has:an,add:on,set:ln,delete:cn,clear:un,forEach:dn(!1,!0)},n={get(e){return rn(this,e,!0)},get size(){return sn(this,!0)},has(e){return an.call(this,e,!0)},add:gn("add"),set:gn("set"),delete:gn("delete"),clear:gn("clear"),forEach:dn(!0,!1)},r={get(e){return rn(this,e,!0,!0)},get size(){return sn(this,!0)},has(e){return an.call(this,e,!0)},add:gn("add"),set:gn("set"),delete:gn("delete"),clear:gn("clear"),forEach:dn(!0,!0)};return["keys","values","entries",Symbol.iterator].forEach(i=>{e[i]=pn(i,!1,!1),n[i]=pn(i,!0,!1),t[i]=pn(i,!1,!0),r[i]=pn(i,!0,!0)}),[e,n,t,r]}var[hn,mn,yn,bn]=fn();function vn(e,t){const n=e?mn:hn;return(t,r,i)=>"__v_isReactive"===r?!e:"__v_isReadonly"===r?e:"__v_raw"===r?t:Reflect.get(xt(n,r)&&r in t?n:t,r,i)}var wn={get:vn(!1)},xn={get:vn(!0)};function _n(e,t,n){const r=Mn(n);if(r!==n&&t.call(e,r)){const t=Lt(e);console.warn(`Reactive ${t} contains both the raw and reactive versions of the same object${"Map"===t?" as keys":""}, which can lead to inconsistencies. Avoid differentiating between the raw and reactive versions of an object and only use the reactive version if possible.`)}}var Sn=new WeakMap,Cn=new WeakMap,kn=new WeakMap,En=new WeakMap;function $n(e){return e&&e.__v_isReadonly?e:An(e,!1,Jt,wn,Sn)}function Ln(e){return An(e,!0,Qt,xn,kn)}function An(e,t,n,r,i){if(!kt(e))return console.warn(`value cannot be made reactive: ${String(e)}`),e;if(e.__v_raw&&(!t||!e.__v_isReactive))return e;const a=i.get(e);if(a)return a;const s=(o=e).__v_skip||!Object.isExtensible(o)?0:function(e){switch(e){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}(Lt(o));var o;if(0===s)return e;const l=new Proxy(e,2===s?r:n);return i.set(e,l),l}function Mn(e){return e&&Mn(e.__v_raw)||e}function In(e){return Boolean(e&&!0===e.__v_isRef)}B("nextTick",()=>Re),B("dispatch",e=>be.bind(be,e)),B("watch",(e,{evaluateLater:t,cleanup:n})=>(e,r)=>{let i=t(e),a=f(()=>{let e;return i(t=>e=t),e},r);n(a)}),B("store",function(){return dt}),B("data",e=>I(e)),B("root",e=>Le(e)),B("refs",e=>(e._x_refs_proxy||(e._x_refs_proxy=D(function(e){let t=[];return Ae(e,e=>{e._x_refs&&t.push(e._x_refs)}),t}(e))),e._x_refs_proxy));var Tn={};function Fn(e){return Tn[e]||(Tn[e]=0),++Tn[e]}function Dn(e,t,n){B(t,r=>we(`You can't use [$${t}] without first installing the "${e}" plugin here: https://alpinejs.dev/plugins/${n}`,r))}B("id",(e,{cleanup:t})=>(n,r=null)=>function(e,t,n,r){if(e._x_id||(e._x_id={}),e._x_id[t])return e._x_id[t];let i=r();return e._x_id[t]=i,n(()=>{delete e._x_id[t]}),i}(e,`${n}${r?`-${r}`:""}`,t,()=>{let t=function(e,t){return Ae(e,e=>{if(e._x_ids&&e._x_ids[t])return!0})}(e,n),i=t?t._x_ids[n]:Fn(n);return r?`${n}-${i}-${r}`:`${n}-${i}`})),Ke((e,t)=>{e._x_id&&(t._x_id=e._x_id)}),B("el",e=>e),Dn("Focus","focus","focus"),Dn("Persist","persist","persist"),ne("modelable",(e,{expression:t},{effect:n,evaluateLater:r,cleanup:i})=>{let a=r(t),s=()=>{let e;return a(t=>e=t),e},o=r(`${t} = __placeholder`),l=e=>o(()=>{},{scope:{__placeholder:e}}),c=s();l(c),queueMicrotask(()=>{if(!e._x_model)return;e._x_removeModelListeners.default();let t=e._x_model.get,n=e._x_model.set,r=ct({get:()=>t(),set(e){n(e)}},{get:()=>s(),set(e){l(e)}});i(r)})}),ne("teleport",(e,{modifiers:t,expression:n},{cleanup:r})=>{"template"!==e.tagName.toLowerCase()&&we("x-teleport can only be used on a <template> tag",e);let i=Rn(n),a=e.content.cloneNode(!0).firstElementChild;e._x_teleport=a,a._x_teleportBack=e,e.setAttribute("data-teleport-template",!0),a.setAttribute("data-teleport-target",!0),e._x_forwardEvents&&e._x_forwardEvents.forEach(t=>{a.addEventListener(t,t=>{t.stopPropagation(),e.dispatchEvent(new t.constructor(t.type,t))})}),T(a,{},e);let s=(e,t,n)=>{n.includes("prepend")?t.parentNode.insertBefore(e,t):n.includes("append")?t.parentNode.insertBefore(e,t.nextSibling):t.appendChild(e)};$(()=>{s(a,i,t),He(()=>{Te(a)})()}),e._x_teleportPutBack=()=>{let r=Rn(n);$(()=>{s(e._x_teleport,r,t)})},r(()=>$(()=>{a.remove(),Fe(a)}))});var Pn=document.createElement("div");function Rn(e){let t=He(()=>document.querySelector(e),()=>Pn)();return t||we(`Cannot find x-teleport element for selector: "${e}"`),t}var Nn=()=>{};function On(e,t,n,r){let i=e,a=e=>r(e),s={},o=(e,t)=>n=>t(e,n);if(n.includes("dot")&&(t=t.replace(/-/g,".")),n.includes("camel")&&(t=function(e){return e.toLowerCase().replace(/-(\w)/g,(e,t)=>t.toUpperCase())}(t)),n.includes("passive")&&(s.passive=!0),n.includes("capture")&&(s.capture=!0),n.includes("window")&&(i=window),n.includes("document")&&(i=document),n.includes("debounce")){let e=n[n.indexOf("debounce")+1]||"invalid-wait",t=zn(e.split("ms")[0])?Number(e.split("ms")[0]):250;a=ot(a,t)}if(n.includes("throttle")){let e=n[n.indexOf("throttle")+1]||"invalid-wait",t=zn(e.split("ms")[0])?Number(e.split("ms")[0]):250;a=lt(a,t)}return n.includes("prevent")&&(a=o(a,(e,t)=>{t.preventDefault(),e(t)})),n.includes("stop")&&(a=o(a,(e,t)=>{t.stopPropagation(),e(t)})),n.includes("once")&&(a=o(a,(e,n)=>{e(n),i.removeEventListener(t,a,s)})),(n.includes("away")||n.includes("outside"))&&(i=document,a=o(a,(t,n)=>{e.contains(n.target)||!1!==n.target.isConnected&&(e.offsetWidth<1&&e.offsetHeight<1||!1!==e._x_isShown&&t(n))})),n.includes("self")&&(a=o(a,(t,n)=>{n.target===e&&t(n)})),(function(e){return["keydown","keyup"].includes(e)}(t)||jn(t))&&(a=o(a,(e,t)=>{(function(e,t){let n=t.filter(e=>!["window","document","prevent","stop","once","capture","self","away","outside","passive"].includes(e));if(n.includes("debounce")){let e=n.indexOf("debounce");n.splice(e,zn((n[e+1]||"invalid-wait").split("ms")[0])?2:1)}if(n.includes("throttle")){let e=n.indexOf("throttle");n.splice(e,zn((n[e+1]||"invalid-wait").split("ms")[0])?2:1)}if(0===n.length)return!1;if(1===n.length&&Bn(e.key).includes(n[0]))return!1;const r=["ctrl","shift","alt","meta","cmd","super"].filter(e=>n.includes(e));if(n=n.filter(e=>!r.includes(e)),r.length>0&&r.filter(t=>("cmd"!==t&&"super"!==t||(t="meta"),e[`${t}Key`])).length===r.length){if(jn(e.type))return!1;if(Bn(e.key).includes(n[0]))return!1}return!0})(t,n)||e(t)})),i.addEventListener(t,a,s),()=>{i.removeEventListener(t,a,s)}}function zn(e){return!Array.isArray(e)&&!isNaN(e)}function jn(e){return["contextmenu","click","mouse"].some(t=>e.includes(t))}function Bn(e){if(!e)return[];var t;e=[" ","_"].includes(t=e)?t:t.replace(/([a-z])([A-Z])/g,"$1-$2").replace(/[_\s]/,"-").toLowerCase();let n={ctrl:"control",slash:"/",space:" ",spacebar:" ",cmd:"meta",esc:"escape",up:"arrow-up",down:"arrow-down",left:"arrow-left",right:"arrow-right",period:".",comma:",",equal:"=",minus:"-",underscore:"_"};return n[e]=e,Object.keys(n).map(t=>{if(n[t]===e)return t}).filter(e=>e)}function Xn(e,t,n,r){return $(()=>{if(n instanceof CustomEvent&&void 0!==n.detail)return null!==n.detail&&void 0!==n.detail?n.detail:n.target.value;if(at(e)){if(Array.isArray(r)){let e=null;return e=t.includes("number")?Wn(n.target.value):t.includes("boolean")?tt(n.target.value):n.target.value,n.target.checked?r.includes(e)?r:r.concat([e]):r.filter(t=>!(t==e))}return n.target.checked}if("select"===e.tagName.toLowerCase()&&e.multiple)return t.includes("number")?Array.from(n.target.selectedOptions).map(e=>Wn(e.value||e.text)):t.includes("boolean")?Array.from(n.target.selectedOptions).map(e=>tt(e.value||e.text)):Array.from(n.target.selectedOptions).map(e=>e.value||e.text);{let i;return i=st(e)?n.target.checked?n.target.value:r:n.target.value,t.includes("number")?Wn(i):t.includes("boolean")?tt(i):t.includes("trim")?i.trim():i}})}function Wn(e){let t=e?parseFloat(e):null;return n=t,Array.isArray(n)||isNaN(n)?e:t;var n}function Un(e){return null!==e&&"object"==typeof e&&"function"==typeof e.get&&"function"==typeof e.set}Nn.inline=(e,{modifiers:t},{cleanup:n})=>{t.includes("self")?e._x_ignoreSelf=!0:e._x_ignore=!0,n(()=>{t.includes("self")?delete e._x_ignoreSelf:delete e._x_ignore})},ne("ignore",Nn),ne("effect",He((e,{expression:t},{effect:n})=>{n(G(e,t))})),ne("model",(e,{modifiers:t,expression:n},{effect:r,cleanup:i})=>{let a=e;t.includes("parent")&&(a=e.parentNode);let s,o=G(a,n);s="string"==typeof n?G(a,`${n} = __placeholder`):"function"==typeof n&&"string"==typeof n()?G(a,`${n()} = __placeholder`):()=>{};let l=()=>{let e;return o(t=>e=t),Un(e)?e.get():e},c=e=>{let t;o(e=>t=e),Un(t)?t.set(e):s(()=>{},{scope:{__placeholder:e}})};"string"==typeof n&&"radio"===e.type&&$(()=>{e.hasAttribute("name")||e.setAttribute("name",n)});var u="select"===e.tagName.toLowerCase()||["checkbox","radio"].includes(e.type)||t.includes("lazy")?"change":"input";let d=Ve?()=>{}:On(e,u,t,n=>{c(Xn(e,t,n,l()))});if(t.includes("fill")&&([void 0,null,""].includes(l())||at(e)&&Array.isArray(l())||"select"===e.tagName.toLowerCase()&&e.multiple)&&c(Xn(e,t,{target:e},l())),e._x_removeModelListeners||(e._x_removeModelListeners={}),e._x_removeModelListeners.default=d,i(()=>e._x_removeModelListeners.default()),e.form){let n=On(e.form,"reset",[],n=>{Re(()=>e._x_model&&e._x_model.set(Xn(e,t,{target:e},l())))});i(()=>n())}e._x_model={get:()=>l(),set(e){c(e)}},e._x_forceModelUpdate=t=>{void 0===t&&"string"==typeof n&&n.match(/\./)&&(t=""),window.fromModel=!0,$(()=>Qe(e,"value",t)),delete window.fromModel},r(()=>{let n=l();t.includes("unintrusive")&&document.activeElement.isSameNode(e)||e._x_forceModelUpdate(n)})}),ne("cloak",e=>queueMicrotask(()=>$(()=>e.removeAttribute(ee("cloak"))))),$e(()=>`[${ee("init")}]`),ne("init",He((e,{expression:t},{evaluate:n})=>"string"==typeof t?!!t.trim()&&n(t,{},!1):n(t,{},!1))),ne("text",(e,{expression:t},{effect:n,evaluateLater:r})=>{let i=r(t);n(()=>{i(t=>{$(()=>{e.textContent=t})})})}),ne("html",(e,{expression:t},{effect:n,evaluateLater:r})=>{let i=r(t);n(()=>{i(t=>{$(()=>{e.innerHTML=t,e._x_ignoreSelf=!0,Te(e),delete e._x_ignoreSelf})})})}),pe(ce(":",ee("bind:")));var qn=(e,{value:t,modifiers:n,expression:r,original:i},{effect:a,cleanup:s})=>{if(!t){let t={};return o=t,Object.entries(gt).forEach(([e,t])=>{Object.defineProperty(o,e,{get:()=>(...e)=>t(...e)})}),void G(e,r)(t=>{ft(e,t,i)},{scope:t})}var o;if("key"===t)return function(e,t){e._x_keyExpression=t}(e,r);if(e._x_inlineBindings&&e._x_inlineBindings[t]&&e._x_inlineBindings[t].extract)return;let l=G(e,r);a(()=>l(i=>{void 0===i&&"string"==typeof r&&r.match(/\./)&&(i=""),$(()=>Qe(e,t,i,n))})),s(()=>{e._x_undoAddedClasses&&e._x_undoAddedClasses(),e._x_undoAddedStyles&&e._x_undoAddedStyles()})};function Vn(e,t,n,r){let i={};return/^\[.*\]$/.test(e.item)&&Array.isArray(t)?e.item.replace("[","").replace("]","").split(",").map(e=>e.trim()).forEach((e,n)=>{i[e]=t[n]}):/^\{.*\}$/.test(e.item)&&!Array.isArray(t)&&"object"==typeof t?e.item.replace("{","").replace("}","").split(",").map(e=>e.trim()).forEach(e=>{i[e]=t[e]}):i[e.item]=t,e.index&&(i[e.index]=n),e.collection&&(i[e.collection]=r),i}function Hn(){}function Gn(e,t,n){ne(t,r=>we(`You can't use [x-${t}] without first installing the "${e}" plugin here: https://alpinejs.dev/plugins/${n}`,r))}qn.inline=(e,{value:t,modifiers:n,expression:r})=>{t&&(e._x_inlineBindings||(e._x_inlineBindings={}),e._x_inlineBindings[t]={expression:r,extract:!1})},ne("bind",qn),Ee(()=>`[${ee("data")}]`),ne("data",(e,{expression:n},{cleanup:r})=>{if(function(e){return!!Ve&&(!!Ye||e.hasAttribute("data-has-alpine-state"))}(e))return;n=""===n?"{}":n;let i={};X(i,e);let a={};var s,o;s=a,o=i,Object.entries(ht).forEach(([e,t])=>{Object.defineProperty(s,e,{get:()=>(...e)=>t.bind(o)(...e),enumerable:!1})});let l=H(e,n,{scope:a});void 0!==l&&!0!==l||(l={}),X(l,e);let c=t(l);N(c);let u=T(e,c);c.init&&H(e,c.init),r(()=>{c.destroy&&H(e,c.destroy),u()})}),Ke((e,t)=>{e._x_dataStack&&(t._x_dataStack=e._x_dataStack,t.setAttribute("data-has-alpine-state",!0))}),ne("show",(e,{modifiers:t,expression:n},{effect:r})=>{let i=G(e,n);e._x_doHide||(e._x_doHide=()=>{$(()=>{e.style.setProperty("display","none",t.includes("important")?"important":void 0)})}),e._x_doShow||(e._x_doShow=()=>{$(()=>{1===e.style.length&&"none"===e.style.display?e.removeAttribute("style"):e.style.removeProperty("display")})});let a,s=()=>{e._x_doHide(),e._x_isShown=!1},o=()=>{e._x_doShow(),e._x_isShown=!0},l=()=>setTimeout(o),c=Be(e=>e?o():s(),t=>{"function"==typeof e._x_toggleAndCascadeWithTransitions?e._x_toggleAndCascadeWithTransitions(e,t,o,s):t?l():s()}),u=!0;r(()=>i(e=>{(u||e!==a)&&(t.includes("immediate")&&(e?l():s()),c(e),a=e,u=!1)}))}),ne("for",(e,{expression:n},{effect:r,cleanup:i})=>{let a=function(e){let t=/,([^,\}\]]*)(?:,([^,\}\]]*))?$/,n=/^\s*\(|\)\s*$/g,r=/([\s\S]*?)\s+(?:in|of)\s+([\s\S]*)/,i=e.match(r);if(!i)return;let a={};a.items=i[2].trim();let s=i[1].replace(n,"").trim(),o=s.match(t);return o?(a.item=s.replace(t,"").trim(),a.index=o[1].trim(),o[2]&&(a.collection=o[2].trim())):a.item=s,a}(n),s=G(e,a.items),o=G(e,e._x_keyExpression||"index");e._x_prevKeys=[],e._x_lookup={},r(()=>function(e,n,r,i){let a=e=>"object"==typeof e&&!Array.isArray(e),s=e;r(r=>{var o;o=r,!Array.isArray(o)&&!isNaN(o)&&r>=0&&(r=Array.from(Array(r).keys(),e=>e+1)),void 0===r&&(r=[]);let l=e._x_lookup,c=e._x_prevKeys,u=[],d=[];if(a(r))r=Object.entries(r).map(([t,a])=>{let s=Vn(n,a,t,r);i(t=>{d.includes(t)&&we("Duplicate key on x-for",e),d.push(t)},{scope:{index:t,...s}}),u.push(s)});else for(let t=0;t<r.length;t++){let a=Vn(n,r[t],t,r);i(t=>{d.includes(t)&&we("Duplicate key on x-for",e),d.push(t)},{scope:{index:t,...a}}),u.push(a)}let p=[],g=[],f=[],h=[];for(let e=0;e<c.length;e++){let t=c[e];-1===d.indexOf(t)&&f.push(t)}c=c.filter(e=>!f.includes(e));let m="template";for(let e=0;e<d.length;e++){let t=d[e],n=c.indexOf(t);if(-1===n)c.splice(e,0,t),p.push([m,e]);else if(n!==e){let t=c.splice(e,1)[0],r=c.splice(n-1,1)[0];c.splice(e,0,r),c.splice(n,0,t),g.push([t,r])}else h.push(t);m=t}for(let e=0;e<f.length;e++){let t=f[e];t in l&&($(()=>{Fe(l[t]),l[t].remove()}),delete l[t])}for(let e=0;e<g.length;e++){let[t,n]=g[e],r=l[t],i=l[n],a=document.createElement("div");$(()=>{i||we('x-for ":key" is undefined or invalid',s,n,l),i.after(a),r.after(i),i._x_currentIfEl&&i.after(i._x_currentIfEl),a.before(r),r._x_currentIfEl&&r.after(r._x_currentIfEl),a.remove()}),i._x_refreshXForScope(u[d.indexOf(n)])}for(let e=0;e<p.length;e++){let[n,r]=p[e],i="template"===n?s:l[n];i._x_currentIfEl&&(i=i._x_currentIfEl);let a=u[r],o=d[r],c=document.importNode(s.content,!0).firstElementChild,g=t(a);T(c,g,s),c._x_refreshXForScope=e=>{Object.entries(e).forEach(([e,t])=>{g[e]=t})},$(()=>{i.after(c),He(()=>Te(c))()}),"object"==typeof o&&we("x-for key cannot be an object, it must be a string or an integer",s),l[o]=c}for(let e=0;e<h.length;e++)l[h[e]]._x_refreshXForScope(u[d.indexOf(h[e])]);s._x_prevKeys=d})}(e,a,s,o)),i(()=>{Object.values(e._x_lookup).forEach(e=>$(()=>{Fe(e),e.remove()})),delete e._x_prevKeys,delete e._x_lookup})}),Hn.inline=(e,{expression:t},{cleanup:n})=>{let r=Le(e);r._x_refs||(r._x_refs={}),r._x_refs[t]=e,n(()=>delete r._x_refs[t])},ne("ref",Hn),ne("if",(e,{expression:t},{effect:n,cleanup:r})=>{"template"!==e.tagName.toLowerCase()&&we("x-if can only be used on a <template> tag",e);let i=G(e,t);n(()=>i(t=>{t?(()=>{if(e._x_currentIfEl)return e._x_currentIfEl;let t=e.content.cloneNode(!0).firstElementChild;T(t,{},e),$(()=>{e.after(t),He(()=>Te(t))()}),e._x_currentIfEl=t,e._x_undoIf=()=>{$(()=>{Fe(t),t.remove()}),delete e._x_currentIfEl}})():e._x_undoIf&&(e._x_undoIf(),delete e._x_undoIf)})),r(()=>e._x_undoIf&&e._x_undoIf())}),ne("id",(e,{expression:t},{evaluate:n})=>{n(t).forEach(t=>function(e,t){e._x_ids||(e._x_ids={}),e._x_ids[t]||(e._x_ids[t]=Fn(t))}(e,t))}),Ke((e,t)=>{e._x_ids&&(t._x_ids=e._x_ids)}),pe(ce("@",ee("on:"))),ne("on",He((e,{value:t,modifiers:n,expression:r},{cleanup:i})=>{let a=r?G(e,r):()=>{};"template"===e.tagName.toLowerCase()&&(e._x_forwardEvents||(e._x_forwardEvents=[]),e._x_forwardEvents.includes(t)||e._x_forwardEvents.push(t));let s=On(e,t,n,e=>{a(()=>{},{scope:{$event:e},params:[e]})});i(()=>s())})),Gn("Collapse","collapse","collapse"),Gn("Intersect","intersect","intersect"),Gn("Focus","trap","focus"),Gn("Mask","mask","mask"),mt.setEvaluator(Y),mt.setReactivityEngine({reactive:$n,effect:function(e,t=vt){(function(e){return e&&!0===e._isEffect})(e)&&(e=e.raw);const n=function(e,t){const n=function(){if(!n.active)return e();if(!Ft.includes(n)){Nt(n);try{return zt.push(Ot),Ot=!0,Ft.push(n),bt=n,e()}finally{Ft.pop(),jt(),bt=Ft[Ft.length-1]}}};return n.id=Rt++,n.allowRecurse=!!t.allowRecurse,n._isEffect=!0,n.active=!0,n.raw=e,n.deps=[],n.options=t,n}(e,t);return t.lazy||n(),n},release:function(e){e.active&&(Nt(e),e.options.onStop&&e.options.onStop(),e.active=!1)},raw:Mn});var Kn=mt;const Yn=new class{constructor(e){this.overrides=new Map,this.config=e,this.loadLocalOverrides()}isEnabled(e){if(this.overrides.has(e))return this.overrides.get(e);const t=this.config.flags[e];return t?!!t.enabled&&(void 0!==t.rolloutPercentage?this.checkRolloutPercentage(e,t.rolloutPercentage):t.conditions?this.evaluateConditions(t.conditions):t.enabled):(console.warn(`Feature flag '${e}' not found. Defaulting to false.`),!1)}enable(e){this.overrides.set(e,!0),this.saveLocalOverrides()}disable(e){this.overrides.set(e,!1),this.saveLocalOverrides()}clearOverride(e){this.overrides.delete(e),this.saveLocalOverrides()}clearAllOverrides(){this.overrides.clear(),this.saveLocalOverrides()}getFlag(e){return this.config.flags[e]||null}getAllFlags(){return{...this.config.flags}}getOverrides(){return Object.fromEntries(this.overrides)}checkRolloutPercentage(e,t){if(t<=0)return!1;if(t>=100)return!0;const n=this.config.userId||this.config.sessionId||"anonymous";return this.simpleHash(`${e}:${n}`)%100<t}evaluateConditions(e){return e.environment?e.environment===this.config.environment:!e.userId||!this.config.userId||(Array.isArray(e.userId)?e.userId:[e.userId]).includes(this.config.userId)}simpleHash(e){let t=0;for(let n=0;n<e.length;n++)t=(t<<5)-t+e.charCodeAt(n),t&=t;return Math.abs(t)}loadLocalOverrides(){if("undefined"!=typeof window)try{const e=localStorage.getItem("featureFlags_overrides");if(e){const t=JSON.parse(e);this.overrides=new Map(Object.entries(t))}}catch(error){console.warn("Failed to load feature flag overrides from localStorage:",error)}}saveLocalOverrides(){if("undefined"!=typeof window)try{const e=Object.fromEntries(this.overrides);localStorage.setItem("featureFlags_overrides",JSON.stringify(e))}catch(error){console.warn("Failed to save feature flag overrides to localStorage:",error)}}}({environment:"development",flags:{character_fetcher:{key:"character_fetcher",enabled:!0,description:"Use new CharacterFetcher service for D&D Beyond API calls",rolloutPercentage:100},modern_converter:{key:"modern_converter",enabled:!0,description:"Enable the new Alpine.js-based character converter",rolloutPercentage:100},legacy_fallback:{key:"legacy_fallback",enabled:!0,description:"Show fallback option to legacy converter"},bulk_conversion:{key:"bulk_conversion",enabled:!0,description:"Enable bulk character conversion feature",rolloutPercentage:100},advanced_mapping:{key:"advanced_mapping",enabled:!0,description:"Enable advanced field mapping configuration"},character_preview:{key:"character_preview",enabled:!0,description:"Show character preview before conversion",rolloutPercentage:100},export_formats:{key:"export_formats",enabled:!0,description:"Enable multiple export format options (JSON, PDF, etc.)",rolloutPercentage:100},performance_metrics:{key:"performance_metrics",enabled:!0,description:"Collect and display performance metrics",conditions:{environment:"development"}},debug_character_data:{key:"debug_character_data",enabled:!0,description:"Log detailed character data to console for debugging",rolloutPercentage:100},object_search_service:{key:"object_search_service",enabled:!0,description:"Use new ObjectSearch service instead of legacy getObjects() function",rolloutPercentage:100},string_sanitizer_service:{key:"string_sanitizer_service",enabled:!0,description:"Use new StringSanitizer service instead of legacy fixQuote() function",rolloutPercentage:100},safe_access_service:{key:"safe_access_service",enabled:!0,description:"Use new SafeAccess service instead of legacy safeAccess() function",rolloutPercentage:100},ability_constants:{key:"ability_constants",enabled:!0,description:"Use new AbilityConstants instead of legacy justAbilities array",rolloutPercentage:100},ability_score_processor:{key:"ability_score_processor",enabled:!0,description:"Use new AbilityScoreProcessor service instead of legacy processAbilityScoreBonuses() function",rolloutPercentage:100},debug_ability_score_processor:{key:"debug_ability_score_processor",enabled:!1,description:"Enable detailed debugging output for ability score modifier sources",conditions:{environment:"development"}},spell_slot_calculator:{key:"spell_slot_calculator",enabled:!0,description:"Use new SpellSlotCalculator service instead of legacy getSpellSlots() function",rolloutPercentage:100},debug_spell_slot_calculator:{key:"debug_spell_slot_calculator",enabled:!1,description:"Enable detailed debugging output for spell slot calculations",conditions:{environment:"development"}},inventory_processor:{key:"inventory_processor",enabled:!0,description:"Use new InventoryProcessor service instead of legacy inventory functions",rolloutPercentage:100},encumbrance_calculator:{key:"encumbrance_calculator",enabled:!0,description:"Use new EncumbranceCalculator service instead of legacy calculateEncumbrance() function",rolloutPercentage:100},inventory_processor_debug:{key:"inventory_processor_debug",enabled:!0,description:"Enable detailed debugging output for inventory processing",conditions:{environment:"development"}},encumbrance_calculator_debug:{key:"encumbrance_calculator_debug",enabled:!1,description:"Enable detailed debugging output for encumbrance calculations",conditions:{environment:"development"}},feature_processor:{key:"feature_processor",enabled:!0,description:"Use new FeatureProcessor service instead of legacy feature processing",rolloutPercentage:100},feature_processor_debug:{key:"feature_processor_debug",enabled:!1,description:"Enable detailed debugging output for feature processing",conditions:{environment:"development"}},weaponlist_debug:{key:"weaponlist_debug",enabled:!0,description:"Enable detailed debugging output for weaponlist XML generation",conditions:{environment:"development"}},spelllist_debug:{key:"spelllist_debug",enabled:!0,description:"Enable detailed debugging output for spelllist XML generation",conditions:{environment:"development"}}}});class Jn{constructor(){this.PROXY_URL="https://uakari-indigo.fly.dev/",this.DNDBEYOND_API_BASE="https://character-service.dndbeyond.com/character/v5/character/",this.REQUEST_TIMEOUT=3e4,this.MAX_RETRIES=3}validateCharacterID(e){if(!e||"string"!=typeof e)return{valid:!1,error:"Character ID is required"};const t=e.trim(),n=t.match(/dndbeyond\.com\/characters\/(\d+)/);return n?{valid:!0,sanitized:n[1]}:t.match(/^\d+$/)?{valid:!0,sanitized:t}:{valid:!1,error:"Invalid format. Use character ID or D&D Beyond character URL"}}async fetchCharacter(e){const t=this.validateCharacterID(e);if(!t.valid)return{success:!1,error:t.error};const n=t.sanitized;console.log("Fetching character data for ID:",n);const r=`${this.PROXY_URL}${this.DNDBEYOND_API_BASE}${n}`;console.log("Fetch URL:",r);let i=null;for(let a=1;a<=this.MAX_RETRIES;a++)try{console.log(`Fetch attempt ${a}/${this.MAX_RETRIES}`);const e=new AbortController,t=setTimeout(()=>e.abort(),this.REQUEST_TIMEOUT),n=await fetch(r,{method:"GET",headers:{Accept:"application/json","User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36",Origin:"https://www.dndbeyond.com","X-Requested-With":"XMLHttpRequest"},signal:e.signal});if(clearTimeout(t),!n.ok)return{success:!1,error:this.getErrorMessage(n.status),statusCode:n.status};const i=await n.json();let s;if(i.success&&i.data)s=i.data;else{if(!i.id||!i.name)return{success:!1,error:"Invalid response format from D&D Beyond API"};s=i}return this.isValidCharacterData(s)?(console.log("Character data fetched successfully:",s.name),{success:!0,data:s}):{success:!1,error:"Invalid character data received from D&D Beyond"}}catch(error){if(i=error,console.warn(`Fetch attempt ${a} failed:`,error),this.isNonRetryableError(error))break;if(a<this.MAX_RETRIES){const e=1e3*Math.pow(2,a);await new Promise(t=>setTimeout(t,e))}}return{success:!1,error:this.formatFinalError(i)}}getErrorMessage(e){switch(e){case 401:return"Character not found or not public. Ensure character visibility is set to Public.";case 403:return"Access denied. Character must be set to Public visibility.";case 404:return"Character not found. Please check the character ID.";case 429:return"Rate limit exceeded. Please wait before trying again.";case 500:case 502:case 503:return"D&D Beyond server error. Please try again later.";default:return`Unable to fetch character data (Error ${e}). Please try again.`}}isValidCharacterData(e){return e&&"object"==typeof e&&"number"==typeof e.id&&"string"==typeof e.name&&e.name.length>0}isNonRetryableError(e){return"AbortError"===e.name||e.message.includes("401")||e.message.includes("403")||e.message.includes("404")}formatFinalError(e){return e?"AbortError"===e.name?"Request timed out. Please check your connection and try again.":e.message.includes("Failed to fetch")||e.message.includes("NetworkError")?"Network error. Please check your internet connection and try again.":e.message.includes("CORS")?"CORS error. The proxy service may be temporarily unavailable.":`Network error: ${e.message}. Please try again.`:"Unknown error occurred while fetching character data"}async checkServiceHealth(){try{return(await fetch(this.PROXY_URL,{method:"HEAD",timeout:5e3})).ok}catch(error){return console.warn("Proxy service health check failed:",error),!1}}}const Qn=new Jn;class Zn{constructor(){this.alignmentConfig=null,this.abilityConfig=null,this.currencyConfig=null,this.gameRulesConfig=null}static getInstance(){return Zn.instance||(Zn.instance=new Zn),Zn.instance}async loadConfigs(){try{const[e,t,n,r]=await Promise.all([this.loadConfig("/src/config/dnd5e/alignments.json"),this.loadConfig("/src/config/dnd5e/abilities.json"),this.loadConfig("/src/config/dnd5e/currencies.json"),this.loadConfig("/src/config/dnd5e/game-rules.json")]);this.alignmentConfig=e,this.abilityConfig=t,this.currencyConfig=n,this.gameRulesConfig=r,console.log("✅ Game configuration loaded successfully")}catch(error){throw console.error("❌ Failed to load game configuration:",error),error}}async loadConfig(e){const t=await fetch(e);if(!t.ok)throw new Error(`Failed to load config from ${e}: ${t.statusText}`);return await t.json()}getAlignmentName(e){if(!this.alignmentConfig)return console.warn("Alignment config not loaded, using fallback"),"True Neutral";const t=e?.toString()||"5";return this.alignmentConfig.mappings[t]||this.alignmentConfig.default}getAbilities(){return this.abilityConfig?this.abilityConfig.abilities:(console.warn("Ability config not loaded, using fallback"),[{id:1,name:"strength",displayName:"Strength",abbreviation:"STR"},{id:2,name:"dexterity",displayName:"Dexterity",abbreviation:"DEX"},{id:3,name:"constitution",displayName:"Constitution",abbreviation:"CON"},{id:4,name:"intelligence",displayName:"Intelligence",abbreviation:"INT"},{id:5,name:"wisdom",displayName:"Wisdom",abbreviation:"WIS"},{id:6,name:"charisma",displayName:"Charisma",abbreviation:"CHA"}])}calculateAbilityModifier(e){return Math.floor((e-10)/2)}getDefaultAbilityScore(){return this.abilityConfig?.calculations.defaultScore||10}getCurrencies(){return this.currencyConfig?this.currencyConfig.currencies:[{name:"PP",displayName:"Platinum Pieces",value:10},{name:"GP",displayName:"Gold Pieces",value:1},{name:"EP",displayName:"Electrum Pieces",value:.5},{name:"SP",displayName:"Silver Pieces",value:.1},{name:"CP",displayName:"Copper Pieces",value:.01}]}calculateProficiencyBonus(e){return this.gameRulesConfig?e>=17?6:e>=13?5:e>=9?4:e>=5?3:2:Math.ceil(e/4)+1}getBaseArmorClass(){return this.gameRulesConfig?.armorClass.baseAC||10}getDefaultSize(){return this.gameRulesConfig?.sizes.default||"Medium"}getHitDiceTypes(){return this.gameRulesConfig?.hitDice.types||["d6","d8","d10","d12"]}getDefaultHitDie(){return this.gameRulesConfig?.hitDice.default||"d8"}isLoaded(){return!!(this.alignmentConfig&&this.abilityConfig&&this.currencyConfig&&this.gameRulesConfig)}}const er=Zn.getInstance();class tr{static find(e,t="",n=""){if(!e||"object"!=typeof e)return[];const r=[],i=[e],a=new WeakSet;for(;i.length>0;){const e=i.pop();if(e&&"object"==typeof e&&!a.has(e)){a.add(e);for(const[a,s]of Object.entries(e))"object"==typeof s&&null!==s&&i.push(s),((""===t||a===t)&&(""===n||s===n)||t===a&&""===n||n===s&&""===t)&&(r.includes(e)||r.push(e))}}return r}static findAdvanced(e,t,n={}){if(!e||"object"!=typeof e)return[];const{maxDepth:r=50,includeArrays:i=!0,caseSensitive:a=!0,excludeKeys:s=[]}=n,o=[],l=[{obj:e,depth:0}],c=new WeakSet;for(;l.length>0;){const{obj:e,depth:n}=l.pop();if(!(!e||"object"!=typeof e||c.has(e)||n>r)){c.add(e);for(const[r,c]of Object.entries(e))s.includes(r)||("object"==typeof c&&null!==c&&(!i&&Array.isArray(c)||l.push({obj:c,depth:n+1})),this.matchesCriteria(r,c,t,a)&&(o.includes(e)||o.push(e)))}}return o}static findByEntityType(e,t){return this.find(e,"entityTypeId",t.toString())}static findByType(e,t){return this.find(e,"type",t)}static findByValue(e,t){return this.find(e,"",t)}static findByKey(e,t){return this.find(e,t,"")}static matchesCriteria(e,t,n,r){const{key:i,value:a,matchMode:s="exact"}=n;let o=!0;if(void 0!==i){const t=r?e:e.toLowerCase(),n=r?i:i.toLowerCase();switch(s){case"partial":o=t.includes(n);break;case"regex":o=new RegExp(n,r?"g":"gi").test(t);break;default:o=t===n}}let l=!0;if(void 0!==a)if("string"==typeof t&&"string"==typeof a){const e=r?t:t.toLowerCase(),n=r?a:a.toLowerCase();switch(s){case"partial":l=e.includes(n);break;case"regex":l=new RegExp(n,r?"g":"gi").test(e);break;default:l=e===n}}else l=t===a;return o&&l}static getAllKeys(e,t=10){const n=new Set,r=[{obj:e,depth:0}],i=new WeakSet;for(;r.length>0;){const{obj:e,depth:a}=r.pop();if(!(!e||"object"!=typeof e||i.has(e)||a>t)){i.add(e);for(const[t,i]of Object.entries(e))n.add(t),"object"==typeof i&&null!==i&&r.push({obj:i,depth:a+1})}}return Array.from(n).sort()}}class nr{static sanitizeForXML(e,t={}){if(null==e||""===e)return"";const n=String(e),{maxLength:r=1e3,allowNewlines:i=!1,allowTabs:a=!1,preserveSpaces:s=!0,removeEventHandlers:o=!0,removeDangerousProtocols:l=!0}=t;let c=n;return l&&(c=c.replace(/javascript:/gi,"").replace(/vbscript:/gi,"").replace(/data:/gi,"")),o&&(c=c.replace(/on\w+\s*=/gi,"")),i||(c=c.replace(/\n/g," "),c=c.replace(/\r/g," ")),a||(c=c.replace(/\t/g," ")),c=i&&a?c.replace(/[\x00-\x08\x0B\x0C\x0E-\x1F\x7F]/g,""):i?c.replace(/[\x00-\x08\x0B-\x0C\x0E-\x1F\x7F]/g,""):a?c.replace(/[\x00-\x08\x0A\x0B\x0C\x0D\x0E-\x1F\x7F]/g,""):c.replace(/[\x00-\x08\x0B\x0C\x0E-\x1F\x7F]/g,""),c=c.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#39;").replace(/=/g,"&#x3D;").replace(/\//g,"&#x2F;"),c=c.substring(0,r),s?c.trim():c.replace(/\s+/g," ").trim()}static sanitizeWithReport(e,t={}){if(null==e||""===e)return{sanitized:"",wasModified:!1,originalLength:0,finalLength:0,removedPatterns:[]};const n=String(e),r=n.length,i=[];let a=n;/javascript:/gi.test(a)&&i.push("javascript: protocol"),/vbscript:/gi.test(a)&&i.push("vbscript: protocol"),/data:/gi.test(a)&&i.push("data: protocol"),/on\w+\s*=/gi.test(a)&&i.push("event handlers"),/[\x00-\x1F\x7F]/.test(a)&&i.push("control characters");const s=this.sanitizeForXML(e,t);return{sanitized:s,wasModified:s!==n,originalLength:r,finalLength:s.length,removedPatterns:i}}static sanitizeHTML(e,t={}){if(null==e||""===e)return"";const{maxLength:n=1e4,allowNewlines:r=!0,allowTabs:i=!1}=t;let a=String(e).substring(0,n).replace(/&lt;/g,"<").replace(/&gt;/g,">").replace(/&amp;/g,"&").replace(/&quot;/g,'"').replace(/&#39;/g,"'").replace(/&#x2F;/g,"/");return a=a.replace(/&rsquo;/g,"'").replace(/&lsquo;/g,"'").replace(/&rdquo;/g,'"').replace(/&ldquo;/g,'"').replace(/&ndash;/g,"-").replace(/&mdash;/g,"-").replace(/&#34;/g,'"').replace(/&nbsp;/g," "),a=a.replace(/<script[^>]*>[\s\S]*?<\/script>/gi,"").replace(/<style[^>]*>[\s\S]*?<\/style>/gi,"").replace(/\s*on\w+\s*=\s*[^>\s]*/gi,"").replace(/javascript:/gi,"").replace(/vbscript:/gi,""),r||(a=a.replace(/\n/g," ").replace(/\r/g," ")),i||(a=a.replace(/\t/g," ")),r||i||(a=a.replace(/\s+/g," ")),a.trim().substring(0,n)}static sanitizeText(e,t={}){if(null==e||""===e)return"";const{maxLength:n=1e3,allowNewlines:r=!1,allowTabs:i=!1}=t;let a=String(e);return r||(a=a.replace(/[\n\r]/g," ")),i||(a=a.replace(/\t/g," ")),a=r&&i?a.replace(/[\x00-\x08\x0B\x0C\x0E-\x1F\x7F]/g,""):r?a.replace(/[\x00-\x08\x0B-\x0C\x0E-\x1F\x7F]/g,""):i?a.replace(/[\x00-\x08\x0A\x0B\x0C\x0D\x0E-\x1F\x7F]/g,""):a.replace(/[\x00-\x08\x0B\x0C\x0E-\x1F\x7F]/g,""),a=a.substring(0,n),r||i||(a=a.replace(/\s+/g," ")),a.trim()}static escapeXMLAttribute(e){return null==e||""===e?"":String(e).replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#39;")}static isXMLSafe(e){return!e||"string"!=typeof e||![/javascript:/gi,/vbscript:/gi,/on\w+\s*=/gi,/<script/gi,/<iframe/gi,/[\x00-\x08\x0B\x0C\x0E-\x1F\x7F]/].some(t=>t.test(e))}static normalizeToASCII(e){return null==e||""===e?"":String(e).replace(/[\u2018\u2019]/g,"'").replace(/[\u201c\u201d]/g,'"').replace(/[\u2013\u2014]/g,"-").replace(/[\u2026]/g,"...").replace(/[àáâãäå]/g,"a").replace(/[ÀÁÂÃÄÅ]/g,"A").replace(/[èéêë]/g,"e").replace(/[ÈÉÊË]/g,"E").replace(/[ìíîï]/g,"i").replace(/[ÌÍÎÏ]/g,"I").replace(/[òóôõö]/g,"o").replace(/[ÒÓÔÕÖ]/g,"O").replace(/[ùúûü]/g,"u").replace(/[ÙÚÛÜ]/g,"U").replace(/[ñ]/g,"n").replace(/[Ñ]/g,"N").replace(/[ç]/g,"c").replace(/[Ç]/g,"C")}}class rr{static get(e,t,n=null,r={}){const{throwOnError:i=!1,logWarnings:a=!0,maxDepth:s=50,caseSensitive:o=!0}=r;try{if(!e||"object"!=typeof e)return n;if(!t||"string"!=typeof t)return n;const r=t.split(".");if(r.length>s){const e=`Path depth exceeds maximum (${s}): ${t}`;if(a&&console.warn(e),i)throw new Error(e);return n}let l=e,c="";for(let e=0;e<r.length;e++){const t=r[e];if(c+=(e>0?".":"")+t,null==l)return n;if("object"!=typeof l)return n;let i=t;if(!o&&!(t in l)){const e=Object.keys(l).find(e=>e.toLowerCase()===t.toLowerCase());e&&(i=e)}if(!(i in l))return n;l=l[i]}return null!=l?l:n}catch(error){const r=`Safe access failed for path: ${t}`;if(a&&console.warn(r,error),i)throw new Error(`${r}: ${error instanceof Error?error.message:String(error)}`);return n}}static getWithResult(e,t,n={}){const{maxDepth:r=50,caseSensitive:i=!0}=n;if(!e||"object"!=typeof e)return{value:null,found:!1,path:t,depth:0,error:"Invalid object provided"};if(!t||"string"!=typeof t)return{value:null,found:!1,path:t,depth:0,error:"Invalid path provided"};try{const n=t.split(".");if(n.length>r)return{value:null,found:!1,path:t,depth:n.length,error:`Path depth exceeds maximum (${r})`};let a=e,s=0;for(const e of n){if(s++,null==a||"object"!=typeof a)return{value:null,found:!1,path:t,depth:s,error:`Cannot access property '${e}' on ${typeof a}`};let n=e;if(!i&&!(e in a)){const t=Object.keys(a).find(t=>t.toLowerCase()===e.toLowerCase());t&&(n=t)}if(!(n in a))return{value:null,found:!1,path:t,depth:s,error:`Property '${e}' not found`};a=a[n]}return{value:a,found:!0,path:t,depth:s,error:void 0}}catch(error){return{value:null,found:!1,path:t,depth:0,error:error instanceof Error?error.message:String(error)}}}static has(e,t,n={}){const r=this.getWithResult(e,t,n);return r.found&&null!==r.value&&void 0!==r.value}static getMultiple(e,t,n={}){const r={};for(const i of t)r[i]=this.get(e,i,null,n);return r}static set(e,t,n,r={}){const{maxDepth:i=50,caseSensitive:a=!0}=r;try{if(!e||"object"!=typeof e)return!1;if(!t||"string"!=typeof t)return!1;const r=t.split(".");if(r.length>i)return!1;let a=e;for(let e=0;e<r.length-1;e++){const t=r[e];t in a&&"object"==typeof a[t]&&null!==a[t]||(a[t]={}),a=a[t]}return a[r[r.length-1]]=n,!0}catch(error){return r.logWarnings&&console.warn(`Safe set failed for path: ${t}`,error),!1}}static delete(e,t,n={}){try{if(!e||"object"!=typeof e)return!1;const r=t.split("."),i=r.slice(0,-1).join("."),a=r[r.length-1];if(1===r.length)return a in e&&(delete e[a],!0);const s=this.get(e,i,null,n);return!(!s||"object"!=typeof s||!(a in s)||(delete s[a],0))}catch(error){return n.logWarnings&&console.warn(`Safe delete failed for path: ${t}`,error),!1}}static getAllPaths(e,t=10,n=""){const r=[];if(!e||"object"!=typeof e||t<=0)return r;for(const[i,a]of Object.entries(e)){const e=n?`${n}.${i}`:i;if(r.push(e),"object"==typeof a&&null!==a&&t>1){const n=this.getAllPaths(a,t-1,e);r.push(...n)}}return r.sort()}}const ir=["strength","dexterity","constitution","intelligence","wisdom","charisma"],ar=[{id:1,name:"strength",abbreviation:"STR",description:"Measures physical power and carrying capacity"},{id:2,name:"dexterity",abbreviation:"DEX",description:"Measures agility, reflexes, and balance"},{id:3,name:"constitution",abbreviation:"CON",description:"Measures health, stamina, and vital force"},{id:4,name:"intelligence",abbreviation:"INT",description:"Measures reasoning ability, memory, and analytical thinking"},{id:5,name:"wisdom",abbreviation:"WIS",description:"Measures awareness, intuition, and insight"},{id:6,name:"charisma",abbreviation:"CHA",description:"Measures force of personality, leadership, and confidence"}];class sr{static calculateModifier(e){return Math.floor((e-10)/2)}static getAbilityById(e){return ar.find(t=>t.id===e)||null}static getAbilityByName(e){return ar.find(t=>t.name.toLowerCase()===e.toLowerCase())||null}static getAbilityIdByName(e){const t=ir.indexOf(e.toLowerCase());return t>=0?t+1:0}static getAbilityNameById(e){return ir[e-1]||null}static getAbbreviation(e){const t=this.getAbilityByName(e);return t?t.abbreviation:null}static isValidScore(e,t=!0){return e>=1&&e<=(t?30:20)}static calculateAllModifiers(e){return e.map((e,t)=>({score:e,modifier:this.calculateModifier(e)}))}static calculateSaveBonus(e,t,n){return this.calculateModifier(e)+(n?t:0)}static calculateCarryingCapacity(e,t=!1){const n=t?2:1,r=15*e*n;return{normal:5*e*n,encumbered:10*e*n,heavilyEncumbered:r,maximum:r,liftPushDrag:30*e*n}}static convertLegacyAbilities(e,t,n){const r={};return ir.forEach((i,a)=>{const s=e?.[a]?.value||10,o=t?.[a]?.value||0,l=n?.[a]?.value;r[i]=null!=l?l:s+o}),r}}class or{static{this.debugEnabled=!1}static setDebugMode(e){this.debugEnabled=e}static debugAbilityModifierSources(e){if(!this.debugEnabled)return;if(console.group("🔍 Detailed Ability Score Modifier Analysis"),console.log("📊 Base Ability Scores:"),e.stats&&Array.isArray(e.stats)?e.stats.forEach((e,t)=>{const n=ir[t];console.log(`  ${n}: ${e.value||10} (base)`)}):console.log("  No base stats found - using defaults (10)"),console.log("\n💪 Existing Bonus Stats (from D&D Beyond):"),e.bonusStats&&Array.isArray(e.bonusStats)){let t=!1;e.bonusStats.forEach((e,n)=>{const r=ir[n];e.value&&e.value>0&&(console.log(`  ${r}: +${e.value} (pre-calculated by D&D Beyond)`),t=!0)}),t||console.log("  No existing bonus stats from D&D Beyond")}else console.log("  No existing bonus stats from D&D Beyond");if(console.log("\n🔄 Override Stats:"),e.overrideStats&&Array.isArray(e.overrideStats)){let t=!1;e.overrideStats.forEach((e,n)=>{const r=ir[n];null!==e.value&&void 0!==e.value&&(console.log(`  ${r}: ${e.value} (OVERRIDE - replaces base + bonuses)`),t=!0)}),t||console.log("  No overrides found")}else console.log("  No override stats found");const t=["race","class","background","item","feat"];t.forEach(t=>{if(console.log(`\n🎯 ${t.toUpperCase()} Modifiers:`),!e.modifiers||!e.modifiers[t])return void console.log(`  No ${t} modifiers found`);const n=e.modifiers[t];let r=0,i=0;n.forEach((e,t)=>{if("bonus"===e.type&&e.subType&&e.subType.endsWith("-score")){const t=e.subType.replace("-score",""),n=e.fixedValue||0;console.log(`    ✅ ${t}-score: +${n} ${e.friendlyTypeName?`(${e.friendlyTypeName})`:""}`),(e.componentId||e.componentTypeId)&&console.log(`       🔗 Component: ${e.componentId||"N/A"} (Type: ${e.componentTypeId||"N/A"})`),(e.entityId||e.entityTypeId)&&console.log(`       🎲 Entity: ${e.entityId||"N/A"} (Type: ${e.entityTypeId||"N/A"})`),r++}else console.log(`    ⚙️  ${e.subType||"unknown"}: ${e.fixedValue||0} (${e.type||"unknown"})`),i++}),console.log(`  📈 Summary: ${r} ability modifiers, ${i} other modifiers`)}),console.log("\n🎯 Final Ability Score Breakdown:"),console.log("  [Comparing D&D Beyond pre-calculated vs manually calculated bonuses]"),ir.forEach((n,r)=>{const i=e.stats?.[r]?.value||10,a=e.bonusStats?.[r]?.value||0,s=e.overrideStats?.[r]?.value;let o=0;t.forEach(t=>{e.modifiers?.[t]&&e.modifiers[t].forEach(e=>{if("bonus"===e.type&&e.subType===`${n}-score`){const t=parseInt(String(e.fixedValue))||0;t>0&&(o+=t)}})});const l=null!=s?s:i+a,c=null!=s?s:i+o,u=sr.calculateModifier(l),d=sr.calculateModifier(c),p=a!==o?" ⚠️  MISMATCH!":"";console.log(`  ${n.padEnd(12)} ${i.toString().padStart(2)} (base) + ${a.toString().padStart(2)} (D&DB) = ${l.toString().padStart(2)} [${u>=0?"+":""}${u}]`),console.log(`  ${" ".padEnd(12)} ${i.toString().padStart(2)} (base) + ${o.toString().padStart(2)} (calc) = ${c.toString().padStart(2)} [${d>=0?"+":""}${d}]${p}`),console.log("")}),console.groupEnd()}static processAbilityScoreBonuses(e){console.log("AbilityScoreProcessor: Processing ability score bonuses from all sources..."),this.debugAbilityModifierSources(e);const t=[];!e.bonusStats||e.bonusStats;let n=[];for(let a=1;a<=6;a++)n.push({id:a,name:null,value:0});["race","class","background","item","feat"].forEach(r=>{e.modifiers&&e.modifiers[r]&&e.modifiers[r].forEach(e=>{if("bonus"===e.type&&e.subType&&e.subType.endsWith("-score")){const i=e.subType.replace("-score",""),a=sr.getAbilityIdByName(i);if(a>0&&null!==e.fixedValue&&void 0!==e.fixedValue){const s=parseInt(String(e.fixedValue))||0;s>0&&n[a-1]&&(n[a-1].value+=s,t.push({source:r,ability:i,bonus:s}),console.log(`Applied ${r} bonus: +${s} to ${i} (ID: ${a})`))}}})});const r={};ir.forEach((t,i)=>{const a=i+1,s=this.getTotalAbilityScore(e,a,n),o=e.stats?.find(e=>e.id===a),l=o?.value||10,c=n[i]?.value||0,u=e.overrideStats?.find(e=>e.id===a),d=u?.value||null;r[t]={base:l,bonus:c,override:d,total:s,modifier:sr.calculateModifier(s)}});const i=ir.map((e,t)=>({ability:e,bonus:n[t]?.value||0})).filter(e=>e.bonus>0);return console.log("Final ability score bonuses:"),i.forEach(({ability:e,bonus:t})=>{console.log(`  ${e}: +${t}`)}),{processedBonuses:n,totalScores:r,debugInfo:{appliedBonuses:t,finalBonusSummary:i}}}static getTotalAbilityScore(e,t,n){let r=10;e.stats&&e.stats.length>=t&&(r=e.stats[t-1]?.value||10);let i=0;const a=n||e.bonusStats;a&&a.length>=t&&(i=a[t-1]?.value||0);let s=null;return e.overrideStats&&e.overrideStats.length>=t&&(s=e.overrideStats[t-1]?.value),null!==s?s:r+i}static processLegacyFormat(e){const t=this.processAbilityScoreBonuses(e);return ir.map((e,n)=>{const r=n+1,i=t.totalScores[e],a=t.debugInfo.appliedBonuses.filter(t=>t.ability===e),s=a.filter(e=>"race"===e.source).reduce((e,t)=>e+t.bonus,0),o=a.filter(e=>"feat"===e.source).reduce((e,t)=>e+t.bonus,0),l=a.filter(e=>"item"===e.source).reduce((e,t)=>e+t.bonus,0);return{id:r,name:e,base:i?.base||10,racial:s,feat:o,item:l,total:i?.total||10,modifier:i?.modifier||0}})}static validateCharacterData(e){const t=[],n=[];return e?(e.stats&&Array.isArray(e.stats)?e.stats.length<6&&n.push(`Character stats array has ${e.stats.length} entries, expected 6`):n.push("Character stats array is missing or invalid - will use defaults"),e.bonusStats&&!Array.isArray(e.bonusStats)&&n.push("Character bonusStats is not an array - will initialize"),e.overrideStats&&!Array.isArray(e.overrideStats)&&n.push("Character overrideStats is not an array"),e.modifiers&&"object"!=typeof e.modifiers&&n.push("Character modifiers is not an object"),e.modifiers&&["race","class","background","item","feat"].forEach(t=>{e.modifiers[t]&&!Array.isArray(e.modifiers[t])&&n.push(`Character modifiers.${t} is not an array`)}),{isValid:0===t.length,issues:t,warnings:n}):(t.push("Character data is null or undefined"),{isValid:!1,issues:t,warnings:n})}}const lr={1:{1:2,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0},2:{1:3,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0},3:{1:4,2:2,3:0,4:0,5:0,6:0,7:0,8:0,9:0},4:{1:4,2:3,3:0,4:0,5:0,6:0,7:0,8:0,9:0},5:{1:4,2:3,3:2,4:0,5:0,6:0,7:0,8:0,9:0},6:{1:4,2:3,3:3,4:0,5:0,6:0,7:0,8:0,9:0},7:{1:4,2:3,3:3,4:1,5:0,6:0,7:0,8:0,9:0},8:{1:4,2:3,3:3,4:2,5:0,6:0,7:0,8:0,9:0},9:{1:4,2:3,3:3,4:3,5:1,6:0,7:0,8:0,9:0},10:{1:4,2:3,3:3,4:3,5:2,6:0,7:0,8:0,9:0},11:{1:4,2:3,3:3,4:3,5:2,6:1,7:0,8:0,9:0},12:{1:4,2:3,3:3,4:3,5:2,6:1,7:0,8:0,9:0},13:{1:4,2:3,3:3,4:3,5:2,6:1,7:1,8:0,9:0},14:{1:4,2:3,3:3,4:3,5:2,6:1,7:1,8:0,9:0},15:{1:4,2:3,3:3,4:3,5:2,6:1,7:1,8:1,9:0},16:{1:4,2:3,3:3,4:3,5:2,6:1,7:1,8:1,9:0},17:{1:4,2:3,3:3,4:3,5:2,6:1,7:1,8:1,9:1},18:{1:4,2:3,3:3,4:3,5:3,6:1,7:1,8:1,9:1},19:{1:4,2:3,3:3,4:3,5:3,6:2,7:1,8:1,9:1},20:{1:4,2:3,3:3,4:3,5:3,6:2,7:2,8:1,9:1}},cr={1:{1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0},2:{1:2,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0},3:{1:3,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0},4:{1:3,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0},5:{1:4,2:2,3:0,4:0,5:0,6:0,7:0,8:0,9:0},6:{1:4,2:2,3:0,4:0,5:0,6:0,7:0,8:0,9:0},7:{1:4,2:3,3:0,4:0,5:0,6:0,7:0,8:0,9:0},8:{1:4,2:3,3:0,4:0,5:0,6:0,7:0,8:0,9:0},9:{1:4,2:3,3:2,4:0,5:0,6:0,7:0,8:0,9:0},10:{1:4,2:3,3:2,4:0,5:0,6:0,7:0,8:0,9:0},11:{1:4,2:3,3:3,4:0,5:0,6:0,7:0,8:0,9:0},12:{1:4,2:3,3:3,4:0,5:0,6:0,7:0,8:0,9:0},13:{1:4,2:3,3:3,4:1,5:0,6:0,7:0,8:0,9:0},14:{1:4,2:3,3:3,4:1,5:0,6:0,7:0,8:0,9:0},15:{1:4,2:3,3:3,4:2,5:0,6:0,7:0,8:0,9:0},16:{1:4,2:3,3:3,4:2,5:0,6:0,7:0,8:0,9:0},17:{1:4,2:3,3:3,4:3,5:1,6:0,7:0,8:0,9:0},18:{1:4,2:3,3:3,4:3,5:1,6:0,7:0,8:0,9:0},19:{1:4,2:3,3:3,4:3,5:2,6:0,7:0,8:0,9:0},20:{1:4,2:3,3:3,4:3,5:2,6:0,7:0,8:0,9:0}},ur={1:{1:2,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0},2:{1:2,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0},3:{1:2,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0},4:{1:3,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0},5:{1:3,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0},6:{1:3,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0},7:{1:4,2:2,3:0,4:0,5:0,6:0,7:0,8:0,9:0},8:{1:4,2:2,3:0,4:0,5:0,6:0,7:0,8:0,9:0},9:{1:4,2:2,3:0,4:0,5:0,6:0,7:0,8:0,9:0},10:{1:4,2:3,3:0,4:0,5:0,6:0,7:0,8:0,9:0},11:{1:4,2:3,3:0,4:0,5:0,6:0,7:0,8:0,9:0},12:{1:4,2:3,3:0,4:0,5:0,6:0,7:0,8:0,9:0},13:{1:4,2:3,3:2,4:0,5:0,6:0,7:0,8:0,9:0},14:{1:4,2:3,3:2,4:0,5:0,6:0,7:0,8:0,9:0},15:{1:4,2:3,3:2,4:0,5:0,6:0,7:0,8:0,9:0},16:{1:4,2:3,3:3,4:0,5:0,6:0,7:0,8:0,9:0},17:{1:4,2:3,3:3,4:0,5:0,6:0,7:0,8:0,9:0},18:{1:4,2:3,3:3,4:0,5:0,6:0,7:0,8:0,9:0},19:{1:4,2:3,3:3,4:1,5:0,6:0,7:0,8:0,9:0},20:{1:4,2:3,3:3,4:1,5:0,6:0,7:0,8:0,9:0}},dr={1:{warlockLevel:1,slotLevel:1,slotCount:1,shortRestRecharge:!0},2:{warlockLevel:2,slotLevel:1,slotCount:2,shortRestRecharge:!0},3:{warlockLevel:3,slotLevel:2,slotCount:2,shortRestRecharge:!0},4:{warlockLevel:4,slotLevel:2,slotCount:2,shortRestRecharge:!0},5:{warlockLevel:5,slotLevel:3,slotCount:2,shortRestRecharge:!0},6:{warlockLevel:6,slotLevel:3,slotCount:2,shortRestRecharge:!0},7:{warlockLevel:7,slotLevel:4,slotCount:2,shortRestRecharge:!0},8:{warlockLevel:8,slotLevel:4,slotCount:2,shortRestRecharge:!0},9:{warlockLevel:9,slotLevel:5,slotCount:2,shortRestRecharge:!0},10:{warlockLevel:10,slotLevel:5,slotCount:2,shortRestRecharge:!0},11:{warlockLevel:11,slotLevel:5,slotCount:3,shortRestRecharge:!0},12:{warlockLevel:12,slotLevel:5,slotCount:3,shortRestRecharge:!0},13:{warlockLevel:13,slotLevel:5,slotCount:3,shortRestRecharge:!0},14:{warlockLevel:14,slotLevel:5,slotCount:3,shortRestRecharge:!0},15:{warlockLevel:15,slotLevel:5,slotCount:3,shortRestRecharge:!0},16:{warlockLevel:16,slotLevel:5,slotCount:3,shortRestRecharge:!0},17:{warlockLevel:17,slotLevel:5,slotCount:4,shortRestRecharge:!0},18:{warlockLevel:18,slotLevel:5,slotCount:4,shortRestRecharge:!0},19:{warlockLevel:19,slotLevel:5,slotCount:4,shortRestRecharge:!0},20:{warlockLevel:20,slotLevel:5,slotCount:4,shortRestRecharge:!0}},pr={bard:"full",cleric:"full",druid:"full",sorcerer:"full",wizard:"full",paladin:"half",ranger:"half",artificer:"third",fighter:"third",rogue:"third",warlock:"pact"},gr={fighter:["eldritch_knight"],rogue:["arcane_trickster"],ranger:[]};class fr{static{this.debugEnabled=!1}static setDebugMode(e){this.debugEnabled=e}calculateSpellSlots(e,t=this.getDefaultOptions()){(fr.debugEnabled||Yn.isEnabled("spell_slot_calculator_debug"))&&console.log("🔮 SpellSlotCalculator: Calculating spell slots",{classCount:e.length,classes:e.map(e=>`${e.classDefinition.name}${e.level}`),options:t});const n=this.analyzeSpellcastingClasses(e,t),r=n.filter(e=>"none"!==e.casterType),i=r.some(e=>e.isPactMagic),a=r.some(e=>!e.isPactMagic&&"none"!==e.casterType);let s,o,l,c;if(i&&!a)s="pact_magic_only",o=this.getEmptySpellSlots(),l=this.calculatePactMagicSlots(n),c=0;else if(1===r.length)s="single_class",o=this.calculateSingleClassSpellSlots(r[0]),l=this.getEmptySpellSlots(),c=r[0].casterLevel;else if(r.length>1){s="multiclass";const e=this.calculateMulticlassSpellSlots(n,t);o=e.regularSpellSlots,l=e.pactMagicSlots,c=e.totalCasterLevel}else s="single_class",o=this.getEmptySpellSlots(),l=this.getEmptySpellSlots(),c=0;const u={spellSlots:o,pactMagicSlots:l,multiclassCasterLevel:c,totalCasterClasses:r.length,debugInfo:{classBreakdown:n,calculationMethod:s,casterLevelCalculation:this.buildCasterLevelCalculation(n)}};return(fr.debugEnabled||Yn.isEnabled("spell_slot_calculator_debug"))&&console.log("🔮 SpellSlotCalculator: Result",{method:s,multiclassCasterLevel:c,totalCasterClasses:r.length,spellSlots:this.summarizeSpellSlots(o),pactMagic:this.summarizeSpellSlots(l)}),u}generateSpellSlotsXML(e){const t=this.generateRegularSpellSlotsXML(e.spellSlots),n=this.generatePactMagicSlotsXML(e.pactMagicSlots);return{spellSlotsXML:t,pactMagicXML:n,combinedXML:this.combineSpellSlotXML(t,n)}}analyzeSpellcastingClasses(e,t){return e.map(e=>{const n=e.classDefinition.name.toLowerCase(),r=pr[n]||"none";let i=r;if("third"!==r&&"none"!==r||this.checkSpellcastingSubclass(e)||(i="none"),"ranger"===n&&t.handleSpelllessRanger){const t=e.subclassDefinition?.name.toLowerCase().replace(/\s+/g,"_");"spellless"!==t&&"beast_master_spellless"!==t||(i="none")}const a="warlock"===n;return{className:n,casterType:i,casterLevel:this.calculateClassCasterLevel(e,i),spellSlots:this.getSpellSlotsForProgression(i,e.level,n),isPactMagic:a,spellcastingAbility:this.getSpellcastingAbility(n),actualClassLevel:e.level}})}checkSpellcastingSubclass(e){const t=e.classDefinition.name.toLowerCase(),n=e.subclassDefinition?.name.toLowerCase().replace(/\s+/g,"_");if(!n)return!1;const r=gr[t];return!!r&&(0===r.length||r.includes(n))}calculateClassCasterLevel(e,t){switch(t){case"full":return e.level;case"half":return Math.floor(e.level/2);case"third":return Math.floor(e.level/3);default:return 0}}getSpellSlotsForProgression(e,t,n){if("none"===e)return this.getEmptySpellSlots();switch(e){case"full":return lr[t]||this.getEmptySpellSlots();case"half":return cr[t]||this.getEmptySpellSlots();case"third":return"artificer"===n?ur[t]||this.getEmptySpellSlots():t<3?this.getEmptySpellSlots():ur[t]||this.getEmptySpellSlots();case"pact":return this.convertPactMagicToSpellSlots(t);default:return this.getEmptySpellSlots()}}calculateSingleClassSpellSlots(e){return e.spellSlots}calculateMulticlassSpellSlots(e,t){const n=e.filter(e=>!e.isPactMagic&&"none"!==e.casterType),r=e.filter(e=>e.isPactMagic),i=n.reduce((e,t)=>e+t.casterLevel,0);return{regularSpellSlots:lr[i]||this.getEmptySpellSlots(),pactMagicSlots:r.length>0?this.calculatePactMagicSlots(r):this.getEmptySpellSlots(),totalCasterLevel:i}}calculatePactMagicSlots(e){const t=e.find(e=>"warlock"===e.className);return t&&t.actualClassLevel?this.convertPactMagicToSpellSlots(t.actualClassLevel):this.getEmptySpellSlots()}convertPactMagicToSpellSlots(e){const t=dr[e];if(!t)return this.getEmptySpellSlots();const n=this.getEmptySpellSlots();return n[t.slotLevel]=t.slotCount,n}generateRegularSpellSlotsXML(e){let t="";for(let n=1;n<=9;n++)t+=`\t\t\t<spellslots${n}>\n`,t+=`\t\t\t\t<max type="number">${e[n]}</max>\n`,t+=`\t\t\t</spellslots${n}>\n`;return t}generatePactMagicSlotsXML(e){let t="";for(let n=1;n<=9;n++)t+=`\t\t\t<pactmagicslots${n}>\n`,t+=`\t\t\t\t<max type="number">${e[n]}</max>\n`,t+=`\t\t\t</pactmagicslots${n}>\n`;return t}combineSpellSlotXML(e,t){let n="\t\t<powermeta>\n";return n+=t,n+=e,n+="\t\t</powermeta>",n}getSpellcastingAbility(e){return{wizard:"INT",artificer:"INT",fighter:"INT",rogue:"INT",cleric:"WIS",druid:"WIS",ranger:"WIS",bard:"CHA",sorcerer:"CHA",warlock:"CHA",paladin:"CHA"}[e]}buildCasterLevelCalculation(e){return e.map(e=>({className:e.className,level:e.casterLevel,casterType:e.casterType,contributesToCasterLevel:e.isPactMagic?0:e.casterLevel}))}getEmptySpellSlots(){return{1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0}}summarizeSpellSlots(e){return Object.entries(e).filter(([e,t])=>t>0).map(([e,t])=>`${e}:${t}`).join(", ")||"none"}getDefaultOptions(){return{includeDebugInfo:!0,strictMulticlassRules:!0,handleSpelllessRanger:!0,includePactMagicInMainSlots:!1}}static validateClassData(e){const t=[];return e.forEach((e,n)=>{e.classDefinition?.name||t.push(`Class at index ${n} missing name`),("number"!=typeof e.level||e.level<1||e.level>20)&&t.push(`Class ${e.classDefinition?.name||n} has invalid level: ${e.level}`)}),{isValid:0===t.length,errors:t}}static getSpellSlotsForClass(e,t,n){const r={id:1,level:t,classDefinition:{id:1,name:e,canCastSpells:!0},subclassDefinition:n?{id:1,name:n}:void 0};return(new fr).calculateSpellSlots([r]).spellSlots}static toLegacyFormat(e){return Object.entries(e).map(([e,t])=>({level:parseInt(e),slots:t}))}static validateClassInfo(e){const t=[];return e&&"object"==typeof e?(Array.isArray(e)||(e.classDefinition?.name||t.push("Class definition name is required"),("number"!=typeof e.level||e.level<1||e.level>20)&&t.push("Class level must be between 1 and 20")),{isValid:0===t.length,errors:t}):(t.push("Class info must be an object"),{isValid:!1,errors:t})}}class hr{constructor(e){if(this.pounds=e,e<0)throw new Error("Weight cannot be negative")}add(e){return new hr(this.pounds+e.pounds)}multiply(e){if(e<0)throw new Error("Weight multiplier cannot be negative");return new hr(this.pounds*e)}isZero(){return 0===this.pounds}}class mr{constructor(e){if(this.amount=e,e<0)throw new Error("Quantity cannot be negative")}isZero(){return 0===this.amount}multiply(e){return e.multiply(this.amount)}}class yr{padIndex(e){return String(e).padStart(5,"0")}generateItemXML(e,t,n=0){const r="\t".repeat(3),i="\t".repeat(4),a=this.padIndex(t);let s=`${r}<id-${a}>\n`;return s+=`${i}<count type="number">${e.count}</count>\n`,s+=`${i}<name type="string">${e.name}</name>\n`,s+=`${i}<weight type="number">${e.weight}</weight>\n`,s+=`${i}<locked type="number">${e.isLocked?1:0}</locked>\n`,s+=`${i}<isidentified type="number">${e.isIdentified?1:0}</isidentified>\n`,e.type&&(s+=`${i}<type type="string">${e.type}</type>\n`),e.cost&&(s+=`${i}<cost type="string">${e.cost.value} ${e.cost.denomination}</cost>\n`),e.description&&(s+=`${i}<description type="formattedtext">\n`,s+=`${i}\t<p>${e.description}</p>\n`,s+=`${i}</description>\n`),e.properties&&e.properties.length>0&&(s+=`${i}<properties type="string">${e.properties.join(", ")}</properties>\n`),e.location&&(s+=`${i}<location type="string">${e.location}</location>\n`),s+=`${r}</id-${a}>\n`,s}generateContainerXML(e,t,n,r=0){const i={id:e.id.toString(),name:e.definition.name,type:e.definition.subType||e.definition.filterType,weight:e.definition.weight,count:e.quantity,isIdentified:!0,isLocked:!1};return this.generateItemXML(i,n,r)}}class br{constructor(e){this.xml="",this.itemCount=0,this.strategy=e}reset(){return this.xml="",this.itemCount=0,this}addInventoryHeader(){return this.xml+="\t<inventorylist>\n",this}addInventoryFooter(){return this.xml+="\t</inventorylist>",this}addItem(e){return this.itemCount++,this.xml+=this.strategy.generateItemXML(e,this.itemCount,0),this}build(){return{xml:this.xml,itemCount:this.itemCount}}}class vr{constructor(e=new yr){this.xmlStrategy=e,this.xmlBuilder=new br(e)}processInventory(e,t,n=this.getDefaultOptions()){Yn.isEnabled("inventory_processor_debug")&&console.log("📦 InventoryProcessor: Processing inventory",{characterId:t,itemCount:e.length,options:n});const r=this.buildNestedStructure(e,t,n),i=this.generateInventoryXML(r,n),a=this.calculateStatistics(r),s={nestedStructure:r,xmlResult:i,statistics:a};return Yn.isEnabled("inventory_processor_debug")&&console.log("📦 InventoryProcessor: Processing complete",{totalItems:a.totalItems,containerCount:a.containerCount,xmlLength:i.xml.length}),s}buildNestedStructure(e,t,n){const r=new Map,i=new Map;e.forEach(e=>{const t=e.containerEntityId.toString();!n.includeZeroQuantityItems&&e.quantity<=0||(e.definition.isContainer&&i.set(e.id.toString(),{...e,definition:{...e.definition,isContainer:!0},contents:[],currentWeight:0}),r.has(t)||r.set(t,[]),r.get(t).push(e))});const a=t.toString(),s=r.get(a)||[];i.forEach((e,t)=>{const n=r.get(t)||[];e.contents=n,e.currentWeight=this.calculateContainerWeight(n)});const o=this.calculateTotalInventoryWeight(s,i);return{characterId:t,rootItems:s,containers:i,totalItems:e.length,totalWeight:o}}generateInventoryXML(e,t){this.xmlBuilder.reset().addInventoryHeader();let n=0,r=0,i=0;const a=[];e.rootItems.forEach(e=>{if(e.quantity<=0&&!t.includeZeroQuantityItems)return void r++;const s=this.convertItemToXMLFormat(e,t);this.xmlBuilder.addItem(s),n++,e.definition.isContainer&&(i++,0===e.definition.weightMultiplier&&a.push(e.definition.name))}),e.containers.forEach((e,i)=>{e.contents.forEach(i=>{if(i.quantity<=0&&!t.includeZeroQuantityItems)return void r++;const a=this.convertItemToXMLFormat(i,t);a.location=e.definition.name,this.xmlBuilder.addItem(a),n++})});const{xml:s,itemCount:o}=this.xmlBuilder.addInventoryFooter().build();return{xml:s,itemCount:o,totalWeight:e.totalWeight,containerCount:i,debugInfo:{processedItems:n,skippedItems:r,containerItems:i,magicContainers:a}}}convertItemToXMLFormat(e,t){const n=t.sanitizeOutput?nr.sanitizeForXML(e.customName||e.definition.name):e.customName||e.definition.name,r=t.sanitizeOutput?nr.sanitizeForXML(e.definition.subType||e.definition.filterType):e.definition.subType||e.definition.filterType,i={id:e.id.toString(),name:n,type:r,weight:(e.customWeight||e.definition.weight)/(e.definition.bundleSize||1),count:e.quantity,isIdentified:t.markItemsAsIdentified,isLocked:!0};return t.includeCostInformation&&e.definition.cost&&(i.cost={value:e.definition.cost.quantity,denomination:e.definition.cost.unit}),t.generateDetailedXML&&e.definition.description&&(i.description=t.sanitizeOutput?nr.sanitizeHTML(e.definition.description):e.definition.description),i}convertItemsToXMLFormat(e,t){return e.filter(e=>t.includeZeroQuantityItems||e.quantity>0).map(e=>this.convertItemToXMLFormat(e,t))}calculateContainerWeight(e){return e.reduce((e,t)=>{const n=new hr(t.definition.weight||0);return e+new mr(t.quantity).multiply(n).pounds},0)}calculateTotalInventoryWeight(e,t){let n=0;return e.forEach(e=>{const t=new hr(e.definition.weight||0),r=new mr(e.quantity);n+=r.multiply(t).pounds}),n}calculateStatistics(e){return{totalItems:e.totalItems,containerCount:e.containers.size,magicContainers:Array.from(e.containers.values()).filter(e=>0===e.definition.weightMultiplier).length,totalWeight:e.totalWeight}}getDefaultOptions(){return{includeZeroQuantityItems:!1,respectContainerHierarchy:!0,generateDetailedXML:!1,sanitizeOutput:!0,includeCostInformation:!0,markItemsAsIdentified:!0}}static validateInventoryData(e){const t=[];return e.forEach((e,n)=>{(!e.id||e.id<=0)&&t.push(`Item at index ${n} has invalid ID: ${e.id}`),e.definition||t.push(`Item at index ${n} missing definition`),e.definition.name||t.push(`Item at index ${n} missing name`),"number"!=typeof e.quantity&&t.push(`Item ${e.definition.name} has invalid quantity: ${e.quantity}`)}),{isValid:0===t.length,errors:t}}setXMLStrategy(e){this.xmlStrategy=e,this.xmlBuilder=new br(e)}}class wr{constructor(){this.ENCUMBRANCE_MULTIPLIERS={ENCUMBERED_THRESHOLD:5,HEAVILY_THRESHOLD:10,MAXIMUM_CAPACITY:15,PUSH_DRAG_LIFT:30}}calculateEncumbrance(e,t,n={includeContainerWeights:!0,respectMagicContainers:!0,applyRacialTraits:!0}){Yn.isEnabled("encumbrance_calculator_debug")&&console.log("🎒 EncumbranceCalculator: Calculating encumbrance",{characterId:e.id,inventoryItems:t.length,options:n});const r=this.calculateTotalWeight(t,e.id,n),i=this.calculateCarryingCapacity(e,n),a=this.determineEncumbranceLevel(r.totalWeight,i),{speedPenalty:s,disadvantageOnChecks:o}=this.calculatePenalties(a),l={totalWeight:r.totalWeight,carryingCapacity:{normal:i.maximum,push:2*i.maximum,lift:2*i.maximum,powerfulBuild:e.hasPowerfulBuild&&n.applyRacialTraits},encumbranceLevel:a,speedPenalty:s,disadvantageOnChecks:o};return Yn.isEnabled("encumbrance_calculator_debug")&&console.log("🎒 EncumbranceCalculator: Result",{totalWeight:l.totalWeight,encumbranceLevel:l.encumbranceLevel,carryingCapacity:l.carryingCapacity,penalties:{speedPenalty:s,disadvantageOnChecks:o}}),l}calculateTotalWeight(e,t,n){let r=0;const i=[],a=this.buildContainerMultiplierMap(e);return e.forEach(s=>{if(s.quantity<=0)return;const o=new mr(s.quantity),l=new hr(s.definition.weight||0),c=s.containerEntityId.toString(),u=t.toString();let d,p=l.multiply(o.amount),g=!1;if(n.respectMagicContainers&&c!==u&&a.has(c)){const t=a.get(c);d=this.findContainerName(e,c),0===t?(p=new hr(0),g=!0):p=p.multiply(t)}r+=p.pounds,i.push({itemId:s.id,itemName:s.definition.name,weight:l.pounds,quantity:o.amount,totalWeight:p.pounds,containerName:d,magicContainer:g})}),{totalWeight:r,debugInfo:i}}buildContainerMultiplierMap(e){const t=new Map;return e.forEach(e=>{e.definition.isContainer&&void 0!==e.definition.weightMultiplier&&t.set(e.id.toString(),e.definition.weightMultiplier)}),t}findContainerName(e,t){const n=e.find(e=>e.id.toString()===t);return n?.definition.name||"Unknown Container"}calculateCarryingCapacity(e,t){let n=e.strengthScore;return e.hasPowerfulBuild&&t.applyRacialTraits&&(n=Math.min(2*n,29)),{normal:n*this.ENCUMBRANCE_MULTIPLIERS.ENCUMBERED_THRESHOLD,encumbered:n*this.ENCUMBRANCE_MULTIPLIERS.ENCUMBERED_THRESHOLD,heavilyEncumbered:n*this.ENCUMBRANCE_MULTIPLIERS.HEAVILY_THRESHOLD,maximum:n*this.ENCUMBRANCE_MULTIPLIERS.MAXIMUM_CAPACITY}}determineEncumbranceLevel(e,t){return e>t.maximum?"overloaded":e>t.heavilyEncumbered?"heavily_encumbered":e>t.encumbered?"encumbered":"unencumbered"}calculatePenalties(e){switch(e){case"heavily_encumbered":return{speedPenalty:20,disadvantageOnChecks:!0};case"encumbered":return{speedPenalty:10,disadvantageOnChecks:!1};case"overloaded":return{speedPenalty:0,disadvantageOnChecks:!0};default:return{speedPenalty:0,disadvantageOnChecks:!1}}}getEncumbranceDebugInfo(e,t,n={includeContainerWeights:!0,respectMagicContainers:!0,applyRacialTraits:!0}){const r=this.calculateTotalWeight(t,e.id,n),i=this.calculateCarryingCapacity(e,n);return{itemBreakdown:r.debugInfo,strengthCalculation:{baseStrength:e.strengthScore,modifiers:0,finalStrength:e.strengthScore,powerfulBuild:e.hasPowerfulBuild&&n.applyRacialTraits},carryingCapacityCalculation:i}}static hasPowerfulBuild(e){return!!e.race?.fullName?.toLowerCase().includes("goliath")||tr.find(e,"name","Powerful Build").length>0}static validateInventoryData(e){const t=[];return e.forEach((e,n)=>{(!e.id||e.id<=0)&&t.push(`Item at index ${n} has invalid ID: ${e.id}`),e.quantity<0&&t.push(`Item ${e.definition.name} has negative quantity: ${e.quantity}`),e.definition.weight<0&&t.push(`Item ${e.definition.name} has negative weight: ${e.definition.weight}`)}),{isValid:0===t.length,errors:t}}}const xr={barbarian:{Rage:"resource","Unarmored Defense":"passive","Reckless Attack":"active","Danger Sense":"passive","Primal Path":"passive","Extra Attack":"passive","Fast Movement":"passive","Feral Instinct":"passive","Brutal Critical":"passive","Relentless Rage":"passive","Persistent Rage":"passive","Indomitable Might":"passive","Primal Champion":"passive"},fighter:{"Fighting Style":"passive","Second Wind":"resource","Action Surge":"resource","Martial Archetype":"passive","Extra Attack":"passive",Indomitable:"resource","Superior Critical":"passive",Survivor:"passive"},ranger:{"Favored Enemy":"passive","Natural Explorer":"passive","Fighting Style":"passive",Spellcasting:"spell","Ranger Archetype":"passive","Primeval Awareness":"active","Extra Attack":"passive","Lands Stride":"passive","Hide in Plain Sight":"active",Vanish:"active","Feral Senses":"passive","Foe Slayer":"passive"},rogue:{Expertise:"passive","Sneak Attack":"passive","Thieves Cant":"passive","Cunning Action":"active","Roguish Archetype":"passive","Uncanny Dodge":"passive",Evasion:"passive","Reliable Talent":"passive",Blindsense:"passive","Slippery Mind":"passive",Elusive:"passive","Stroke of Luck":"resource"}},_r={human:{"Extra Language":"proficiency","Extra Skill":"proficiency",Versatile:"passive"},elf:{Darkvision:"passive","Keen Senses":"proficiency","Fey Ancestry":"passive",Trance:"passive","Elf Weapon Training":"proficiency"},dwarf:{Darkvision:"passive","Dwarven Resilience":"passive","Dwarven Combat Training":"proficiency",Stonecunning:"proficiency"},halfling:{Lucky:"passive",Brave:"passive","Halfling Nimbleness":"passive"},dragonborn:{"Draconic Ancestry":"passive","Breath Weapon":"active","Damage Resistance":"passive"},gnome:{Darkvision:"passive","Gnome Cunning":"passive"},"half-elf":{Darkvision:"passive","Fey Ancestry":"passive","Skill Versatility":"proficiency"},"half-orc":{Darkvision:"passive","Relentless Endurance":"resource","Savage Attacks":"passive"},tiefling:{Darkvision:"passive","Hellish Resistance":"passive","Infernal Legacy":"spell"}};class Sr{static validateClassFeature(e){const t=[];return e.name&&0!==e.name.trim().length||t.push("Feature name is required"),e.className&&0!==e.className.trim().length||t.push("Class name is required"),("number"!=typeof e.requiredLevel||e.requiredLevel<1||e.requiredLevel>20)&&t.push("Required level must be between 1 and 20"),e.type&&!["passive","active","resource","spell"].includes(e.type)&&t.push("Feature type must be passive, active, resource, or spell"),{isValid:0===t.length,errors:t}}static validateRacialTrait(e){const t=[];return e.name&&0!==e.name.trim().length||t.push("Trait name is required"),e.raceName&&0!==e.raceName.trim().length||t.push("Race name is required"),e.type&&!["passive","active","spell","proficiency"].includes(e.type)&&t.push("Trait type must be passive, active, spell, or proficiency"),{isValid:0===t.length,errors:t}}}class Cr{static{this.debugEnabled=!1}constructor(){Yn.isEnabled("feature_processor_debug")&&(Cr.debugEnabled=!0)}static setDebugMode(e){this.debugEnabled=e}processCharacterFeatures(e,t=this.getDefaultOptions()){(Cr.debugEnabled||Yn.isEnabled("feature_processor_debug"))&&console.log("🎭 FeatureProcessor: Processing character features",{classCount:e.classes?.length||0,raceName:e.race?.fullName,options:t});const n=t.includeSubclassFeatures?this.processClassFeatures(e,t):[],r=t.includeRacialTraits?this.processRacialTraits(e,t):[],i=this.groupFeaturesByClass(n),a=this.groupTraitsByRace(r),s={classFeatures:n,racialTraits:r,totalFeatures:n.length+r.length,featuresByClass:i,traitsByRace:a,debugInfo:{processingMethod:e.classes.length>1?"multiclass":"single_class",classBreakdown:this.buildClassBreakdown(e,n),raceBreakdown:this.buildRaceBreakdown(e,r),warnings:[]}};return(Cr.debugEnabled||Yn.isEnabled("feature_processor_debug"))&&console.log("🎭 FeatureProcessor: Result",{totalFeatures:s.totalFeatures,classFeatureCount:n.length,racialTraitCount:r.length,processingMethod:s.debugInfo.processingMethod}),s}processClassFeatures(e,t){const n=[],r=new Set;if(!e.classes||!Array.isArray(e.classes))return n;for(const i of e.classes){const e=i.definition?.name?.toLowerCase()||"unknown",a=i.level||1;if(Cr.debugEnabled&&console.log(`🎭 Processing class: ${e} (level ${a})`,{hasClassFeatures:!!i.definition?.classFeatures,classFeatureCount:i.definition?.classFeatures?.length||0,hasSubclass:!!i.subclassDefinition,hasSubclassFeatures:!!i.subclassDefinition?.classFeatures,subclassFeatureCount:i.subclassDefinition?.classFeatures?.length||0,hasCustomFeatures:!!i.classFeatures,customFeatureCount:i.classFeatures?.length||0,hasGrantedFeatures:!!i.grantedClassFeatures,grantedFeatureCount:i.grantedClassFeatures?.length||0}),i.definition?.classFeatures){Cr.debugEnabled&&console.log(`🔍 Processing ${i.definition.classFeatures.length} class features for ${e}`);const s=this.extractClassFeatures(i.definition.classFeatures,e,a,"class",t,void 0,r);n.push(...s)}if(i.subclassDefinition?.classFeatures){Cr.debugEnabled&&console.log(`🔍 Processing ${i.subclassDefinition.classFeatures.length} subclass features for ${e}`);const s=i.subclassDefinition.name,o=this.extractClassFeatures(i.subclassDefinition.classFeatures,e,a,"subclass",t,s,r);n.push(...o)}if(i.classFeatures&&Array.isArray(i.classFeatures)){Cr.debugEnabled&&console.log(`🔍 Processing additional classFeatures array (${i.classFeatures.length} features)`);const s=this.extractClassFeatures(i.classFeatures,e,a,"class",t,void 0,r);n.push(...s)}if(i.grantedClassFeatures&&Array.isArray(i.grantedClassFeatures)){Cr.debugEnabled&&console.log(`🔍 Processing grantedClassFeatures array (${i.grantedClassFeatures.length} features)`);const s=this.extractClassFeatures(i.grantedClassFeatures,e,a,"class",t,void 0,r);n.push(...s)}}return n}processRacialTraits(e,t){const n=[],r=new Set;if(!e.race)return Cr.debugEnabled&&console.log("No race data found in character"),n;const i=e.race.fullName||e.race.baseName||"Unknown Race";Cr.debugEnabled&&(console.log(`🔍 Processing racial traits for: ${i}`),console.log("🔍 Full race data structure:",JSON.stringify(e.race,null,2)),console.log("🔍 Checking race.racialTraits:",!!e.race.racialTraits),console.log("🔍 Checking race.traits:",!!e.race.traits),console.log("🔍 Checking race.features:",!!e.race.features),console.log("🔍 Checking race.raceTraits:",!!e.race.raceTraits),console.log("🔍 Checking race.definition:",!!e.race.definition),e.race.definition&&(console.log("🔍 Checking race.definition.racialTraits:",!!e.race.definition.racialTraits),console.log("🔍 Checking race.definition.traits:",!!e.race.definition.traits)),console.log("🔍 Race object keys:",Object.keys(e.race)));let a=null,s="";if(e.race.racialTraits&&Array.isArray(e.race.racialTraits)?(a=e.race.racialTraits,s="race.racialTraits"):e.race.traits&&Array.isArray(e.race.traits)?(a=e.race.traits,s="race.traits"):e.race.features&&Array.isArray(e.race.features)?(a=e.race.features,s="race.features"):e.race.definition?.racialTraits&&Array.isArray(e.race.definition.racialTraits)?(a=e.race.definition.racialTraits,s="race.definition.racialTraits"):e.race.definition?.traits&&Array.isArray(e.race.definition.traits)&&(a=e.race.definition.traits,s="race.definition.traits"),a&&a.length>0){Cr.debugEnabled&&(console.log(`🎯 Found ${a.length} racial traits in ${s}`),console.log("🎯 Sample trait structure:",JSON.stringify(a[0],null,2)));const e=this.extractRacialTraits(a,i,"race",t,void 0,r);n.push(...e)}else Cr.debugEnabled&&console.log("❌ No racial traits array found in any expected location");if(e.race.subraceDefinition?.racialTraits&&Array.isArray(e.race.subraceDefinition.racialTraits)){const a=e.race.subraceDefinition.name;Cr.debugEnabled&&console.log(`Found ${e.race.subraceDefinition.racialTraits.length} subrace traits for: ${a}`);const s=this.extractRacialTraits(e.race.subraceDefinition.racialTraits,i,"subrace",t,a,r);n.push(...s)}return Cr.debugEnabled&&(console.log(`🏁 Final trait count: ${n.length}`),n.length>0&&console.log("🏁 Extracted traits:",n.map(e=>e.name))),n}generateFeaturesXML(e,t=this.getDefaultXMLOptions()){return e.classFeatures.length>0?this.generateClassFeaturesXML(e.classFeatures,t):""}generateTraitsXML(e,t=this.getDefaultXMLOptions()){return e.racialTraits.length>0?this.generateRacialTraitsXML(e.racialTraits,t):""}extractClassFeatures(e,t,n,r,i,a,s){const o=[];for(const l of e){const e=`id:${l.id}`;if(Cr.debugEnabled&&console.log(`🔍 Processing feature: ${l.name}`,{id:l.id,key:e,className:t,source:r,level:l.requiredLevel,hasSeenBefore:s?.has(e)}),s&&s.has(e)){Cr.debugEnabled&&console.log(`🔄 Skipping duplicate feature: ${l.name} (${e})`);continue}if(this.shouldSkipFeature(l.name)){Cr.debugEnabled&&console.log(`🚫 Skipping excluded feature: ${l.name}`);continue}if(i.filterByLevel&&l.requiredLevel>n)continue;if(l.requiredLevel>i.maxLevel)continue;s&&s.add(e);const c=this.determineFeatureType(l.name,t),u=this.determineFeatureUsage(l.name,t),d={id:l.id,name:l.name,description:i.includeDescriptions?l.description:"",requiredLevel:l.requiredLevel,className:t,subclassName:a,source:r,type:c,uses:u,mechanics:this.extractFeatureMechanics(l.name,l.description)},p=Sr.validateClassFeature(d);p.isValid?o.push(d):console.warn(`Invalid class feature: ${d.name}`,p.errors)}return o}extractRacialTraits(e,t,n,r,i,a){const s=[];for(const o of e){let e,l,c;if(Cr.debugEnabled&&console.log("🔍 Raw trait data:",JSON.stringify(o,null,2)),o.definition)e=o.id,l=o.definition.name,c=o.definition.description;else{if(!o.name){Cr.debugEnabled&&console.log("🚫 Skipping trait with unrecognized structure:",o);continue}e=o.id||0,l=o.name,c=o.description||""}const u=e?`id:${e}`:`name:${l}`;if(Cr.debugEnabled&&console.log(`🔍 Processing trait: ${l}`,{id:e,key:u,raceName:t,source:n,hasSeenBefore:a?.has(u)}),a&&a.has(u)){Cr.debugEnabled&&console.log(`🔄 Skipping duplicate trait: ${l} (${u})`);continue}if(this.shouldSkipTrait(l)){Cr.debugEnabled&&console.log(`🚫 Skipping excluded trait: ${l}`);continue}a&&a.add(u);const d=this.determineTraitType(l,t),p=this.extractTraitMechanics(l,c),g={id:e,name:l,description:r.includeDescriptions?c:"",raceName:t,suraceName:i,source:n,type:d,mechanics:p},f=Sr.validateRacialTrait(g);f.isValid?(s.push(g),Cr.debugEnabled&&console.log(`✅ Added trait: ${l}`)):console.warn(`Invalid racial trait: ${g.name}`,f.errors)}return s}determineFeatureType(e,t){t&&"string"==typeof t||(t="unknown");const n=xr[t.toLowerCase()];return n&&n[e]?n[e]:e&&"string"==typeof e?e.toLowerCase().includes("spellcasting")?"spell":e.toLowerCase().includes("rage")||e.toLowerCase().includes("action surge")?"resource":e.toLowerCase().includes("attack")||e.toLowerCase().includes("maneuver")?"active":"passive":"passive"}determineTraitType(e,t){t&&"string"==typeof t||(t="unknown");const n=_r[t.toLowerCase()];return n&&n[e]?n[e]:e&&"string"==typeof e?e.toLowerCase().includes("proficiency")||e.toLowerCase().includes("training")?"proficiency":e.toLowerCase().includes("spell")||e.toLowerCase().includes("cantrip")?"spell":e.toLowerCase().includes("breath")||e.toLowerCase().includes("endurance")?"active":"passive":"passive"}determineFeatureUsage(e,t){if(!e||"string"!=typeof e)return;t&&"string"==typeof t||(t="unknown");const n=e.toLowerCase();return n.includes("rage")&&"barbarian"===t.toLowerCase()?{type:"long_rest",amount:1,rechargeOn:"long_rest"}:n.includes("action surge")&&"fighter"===t.toLowerCase()||n.includes("second wind")&&"fighter"===t.toLowerCase()?{type:"short_rest",amount:1,rechargeOn:"short_rest"}:void 0}extractFeatureMechanics(e,t){}extractTraitMechanics(e,t){const n={};if(e.toLowerCase().includes("darkvision")){const e=t.match(/(\d+)\s*feet/i);e&&(n.darkvisionRange=parseInt(e[1]))}return(e.toLowerCase().includes("fleet")||e.toLowerCase().includes("swift"))&&(n.speed=35),Object.keys(n).length>0?n:void 0}generateClassFeaturesXML(e,t){let n="";return e.forEach((e,r)=>{const i=String(r+1).padStart(5,"0"),a=t.sanitizeText?nr.sanitizeForXML(e.name):e.name,s=t.sanitizeText&&e.description?nr.sanitizeForXML(e.description):e.description||"";n+=`      <id-${i}>\n        <locked type="number">1</locked>\n        <name type="string">${a}</name>\n        <text type="formattedtext">\n          <p>${s}</p>\n        </text>\n        <source type="string">${e.className}${e.subclassName?` (${e.subclassName})`:""}</source>\n      </id-${i}>\n`}),n}generateRacialTraitsXML(e,t){let n="";return e.forEach((e,r)=>{const i=String(r+1e3).padStart(5,"0"),a=t.sanitizeText?nr.sanitizeForXML(e.name):e.name,s=t.sanitizeText&&e.description?nr.sanitizeForXML(e.description):e.description||"";n+=`      <id-${i}>\n        <locked type="number">1</locked>\n        <name type="string">${a}</name>\n        <text type="formattedtext">\n          <p>${s}</p>\n        </text>\n        <source type="string">${e.raceName}${e.suraceName?` (${e.suraceName})`:""}</source>\n      </id-${i}>\n`}),n}groupFeaturesByClass(e){return e.reduce((e,t)=>{const n=t.subclassName?`${t.className} (${t.subclassName.toLowerCase()})`:t.className;return e[n]||(e[n]=[]),e[n].push(t),e},{})}groupTraitsByRace(e){return e.reduce((e,t)=>{const n=t.suraceName?`${t.raceName.toLowerCase()} (${t.suraceName.toLowerCase()})`:t.raceName.toLowerCase();return e[n]||(e[n]=[]),e[n].push(t),e},{})}buildClassBreakdown(e,t){return e.classes.map(e=>({className:e.definition?.name||"Unknown",level:e.level||1,featureCount:t.filter(t=>t.className===e.definition?.name?.toLowerCase()).length,subclass:e.subclassDefinition?.name}))}buildRaceBreakdown(e,t){return{raceName:e.race?.fullName||"Unknown Race",subraceName:e.race?.subraceDefinition?.name,traitCount:t.length}}getDefaultOptions(){return{includeSubclassFeatures:!0,includeRacialTraits:!0,includeDescriptions:!0,filterByLevel:!0,maxLevel:20}}getDefaultXMLOptions(){return{includeDescriptions:!0,includeUsageLimits:!0,groupBySource:!0,sanitizeText:!0}}shouldSkipFeature(e){if(!e||"string"!=typeof e)return!1;const t=e.toLowerCase();return["Proficiencies","Ability Score Increase","Core Sorcerer Traits","Metamagic Options"].some(e=>t.includes(e.toLowerCase()))}shouldSkipTrait(e){if(!e||"string"!=typeof e)return!1;const t=e.toLowerCase();return["Proficiencies","Ability Score Increase","Languages","Age","Size","Speed","Core Sorcerer Traits","Metamagic Options"].some(e=>t.includes(e.toLowerCase()))}static validateCharacterData(e){const t=[];return e?(e.classes&&Array.isArray(e.classes)||t.push("Character classes must be an array"),e.race||t.push("Character race is required"),{isValid:0===t.length,errors:t}):(t.push("Character data is required"),{isValid:!1,errors:t})}}const kr=new class{constructor(){this.characterFetcher=new Jn,this.inventoryProcessor=new vr,this.encumbranceCalculator=new wr,this.spellSlotCalculator=new fr,this.featureProcessor=new Cr,this.initializeGameConfig()}async initializeGameConfig(){if(!er.isLoaded())try{await er.loadConfigs()}catch(error){console.warn("Failed to load game configuration, using fallback values:",error)}}async convertFromDNDBeyond(e){const t=performance.now();try{this.reportProgress("Validating character ID",10);const n=await this.fetchCharacterData(e);if(!n.success)return{success:!1,error:n.error};const r=n.data,i=performance.now()-t;if(Yn.isEnabled("debug_character_data")){if(console.group("🔍 Character Data Debug Info"),console.log("📋 Basic Info:",{id:r.id,name:r.name,level:this.calculateTotalLevel(r),race:r.race?.fullName||"Unknown",classes:r.classes?.map(e=>`${e.definition?.name} ${e.level}`).join(", ")||"None"}),console.log("📊 Stats & Bonuses:",{stats:r.stats,bonusStats:r.bonusStats,overrideStats:r.overrideStats}),console.log("🎒 Equipment & Inventory:",{inventoryCount:r.inventory?.length||0,inventory:r.inventory?.slice(0,5),hasMore:(r.inventory?.length||0)>5}),console.log("✨ Spells & Features:",{spellsKnown:r.spells?.length||0,classFeatures:r.classes?.reduce((e,t)=>e+(t.classFeatures?.length||0),0)||0,raceFeatures:r.race?.racialTraits?.length||0}),console.log("🔧 Modifiers & Bonuses:",{modifiers:r.modifiers?Object.keys(r.modifiers):[],bonuses:r.bonuses?Object.keys(r.bonuses):[]}),console.log("📄 Full Character Object:",r),Yn.isEnabled("object_search_service")){console.log("🔍 ObjectSearch Service Demo:");const e=tr.findByType(r,"proficiency");console.log(`Found ${e.length} proficiency modifiers:`,e);const t=tr.findByType(r,"feature");console.log(`Found ${t.length} class features:`,t.slice(0,3));const n=tr.findByEntityType(r,"1446578651");console.log(`Found ${n.length} classes via entityTypeId:`,n);const i=tr.getAllKeys(r,5);console.log(`Available keys (depth 5): ${i.length} total`,i.slice(0,20))}if(Yn.isEnabled("string_sanitizer_service")&&(console.log("🧹 StringSanitizer Service Demo:"),[r.name||"Unknown Character",'<script>alert("XSS")<\/script>Test Name','Character "The Bold" & Strong',"javascript:alert(1)","Text with\nnewlines\tand control\0chars"].forEach((e,t)=>{const n=this.sanitizeString(e),r=nr.sanitizeWithReport(e);console.log(`Test ${t+1}:`,{original:e,sanitized:n,wasModified:r.wasModified,removedPatterns:r.removedPatterns})})),Yn.isEnabled("safe_access_service")){console.log("🛡️ SafeAccess Service Demo:"),["name","race.fullName","race.definition.name","classes.0.definition.name","classes.0.level","stats.0.value","nonexistent.path","race.racialTraits.0.definition.name","preferences.privacy.showStats"].forEach(e=>{const t=this.safeAccess(r,e),n=rr.getWithResult(r,e);console.log(`Path: ${e}`,{value:t,found:n.found,type:typeof t,depth:n.depth})});const e=rr.getMultiple(r,["name","race.fullName","classes.0.level"]);console.log("Multiple path access:",e);const t=rr.getAllPaths(r,3);console.log(`Available paths (depth 3): ${t.length} total`,t.slice(0,15))}if(Yn.isEnabled("ability_constants")){console.log("💪 AbilityConstants Demo:");const e=this.getAbilityScores(r);console.log("Character Ability Scores:",e);const t={};if(ir.forEach(n=>{const r=e[n]||10;t[n]=sr.calculateModifier(r)}),console.log("Ability Modifiers:",t),console.log("Ability Mappings:",{strengthId:sr.getAbilityIdByName("strength"),dexterityAbbr:sr.getAbbreviation("dexterity"),constitutionById:sr.getAbilityById(3)?.name,validScores:{normal:sr.isValidScore(18,!1),withMagic:sr.isValidScore(22,!0)}}),e.strength){const t=sr.calculateCarryingCapacity(e.strength);console.log(`Carrying Capacity (STR ${e.strength}):`,t)}}if(Yn.isEnabled("ability_score_processor")){console.log("⚡ AbilityScoreProcessor Service Demo:"),Yn.isEnabled("debug_ability_score_processor")&&(or.setDebugMode(!0),console.log("🔍 Debug mode enabled for ability score processing"));const e=this.processAbilityBonuses(r);console.log("Processed Ability Scores:",e.totalScores),or.setDebugMode(!1),e.debugInfo.appliedBonuses.length>0&&(console.log("Applied Bonuses:",e.debugInfo.appliedBonuses),console.log("Final Bonus Summary:",e.debugInfo.finalBonusSummary));const t=or.processLegacyFormat(r);console.log("Legacy Format Output:",t.slice(0,3)),console.log("Individual Score Calculations:"),ir.forEach((e,t)=>{const n=t+1,i=or.getTotalAbilityScore(r,n);console.log(`  ${e} (ID ${n}): ${i} (modifier: ${sr.calculateModifier(i)})`)});const n=or.validateCharacterData(r);console.log("Character Data Validation:",{isValid:n.isValid,issueCount:n.issues.length,warningCount:n.warnings.length}),n.warnings.length>0&&console.warn("Character Data Warnings:",n.warnings),n.issues.length>0&&console.error("Character Data Issues:",n.issues)}if(Yn.isEnabled("spell_slot_calculator")){console.log("🪄 SpellSlotCalculator Service Demo:"),Yn.isEnabled("debug_spell_slot_calculator")&&(fr.setDebugMode(!0),console.log("🔍 Debug mode enabled for spell slot calculation"));const e=this.extractClassInfo(r);console.log("Extracted Classes:",e);const t=this.calculateSpellSlots(e);console.log("Calculated Spell Slots:",t.spellSlots),fr.setDebugMode(!1),console.log("Caster Level Breakdown:",t.debugInfo.casterLevelCalculation),console.log("Class Breakdown:",t.debugInfo.classBreakdown),console.log(`Calculation Method: ${t.debugInfo.calculationMethod}`);const n=fr.toLegacyFormat(t.spellSlots);console.log("Legacy Format Spell Slots:",n.filter(e=>e.slots>0));const i=fr.validateClassInfo(e);console.log("Class Data Validation:",{isValid:i.isValid,errorCount:i.errors.length}),i.errors.length>0&&console.error("Class Data Errors:",i.errors)}console.groupEnd()}if(this.reportProgress("Parsing character data",50),Yn.isEnabled("debug_character_data")){const e=r.traits||{};console.log("🎭 Personality Traits:",{personalityTraits:e.personalityTraits?`${e.personalityTraits.substring(0,50)}...`:"None",ideals:e.ideals?`${e.ideals.substring(0,50)}...`:"None",bonds:e.bonds?`${e.bonds.substring(0,50)}...`:"None",flaws:e.flaws?`${e.flaws.substring(0,50)}...`:"None"})}const a=performance.now(),s=await this.parseCharacterToXML(r),o=performance.now()-a;this.reportProgress("Generating XML",90);const l=performance.now()-t;return this.reportProgress("Conversion complete",100),{success:!0,xml:s,characterData:r,performance:{fetchTime:i,parseTime:o,totalTime:l}}}catch(error){return console.error("Conversion error:",error),{success:!1,error:error instanceof Error?error.message:"Unknown conversion error"}}}async fetchCharacterData(e){return Yn.isEnabled("character_fetcher")?(console.log("Using new CharacterFetcher service"),this.reportProgress("Fetching from D&D Beyond (new)",25),await this.characterFetcher.fetchCharacter(e)):(console.log("Using legacy character fetching"),this.reportProgress("Fetching from D&D Beyond (legacy)",25),await this.fetchCharacterLegacy(e))}async fetchCharacterLegacy(e){try{const t=this.characterFetcher.validateCharacterID(e);if(!t.valid)return{success:!1,error:t.error};const n=t.sanitized,r=`https://uakari-indigo.fly.dev/https://character-service.dndbeyond.com/character/v5/character/${n}`,i=await fetch(r,{method:"GET",headers:{Accept:"application/json","User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36",Origin:"https://www.dndbeyond.com","X-Requested-With":"XMLHttpRequest"}});if(!i.ok){let e;switch(i.status){case 401:case 403:e="Character not found or not public. Ensure character visibility is set to Public.";break;case 404:e="Character not found. Please check the character ID.";break;default:e=`Unable to fetch character data (Error ${i.status}). Please try again.`}return{success:!1,error:e,statusCode:i.status}}const a=await i.json();let s;if(a.success&&a.data)s=a.data;else{if(!a.id||!a.name)return{success:!1,error:"Invalid response format from D&D Beyond API"};s=a}return s&&"number"==typeof s.id&&s.name?{success:!0,data:s}:{success:!1,error:"Invalid character data received from D&D Beyond"}}catch(error){console.error("Legacy fetch error:",error);let t="Network error occurred while fetching character data";return error instanceof Error&&(t=error.message.includes("Failed to fetch")||error.message.includes("NetworkError")?"Network error. Please check your internet connection and try again.":error.message),{success:!1,error:t}}}async parseCharacterToXML(e){console.log("parseCharacterToXML called with:",{characterId:e.id,characterName:e.name,dataKeys:Object.keys(e)});const t=this.sanitizeString(e.name||"Unknown Character"),n=e.id||0,r=this.calculateTotalLevel(e),i=er.calculateProficiencyBonus(r),a=`<?xml version="1.0" encoding="UTF-8"?>\n<root version="4.7" dataversion="20241002" release="8.1|CoreRPG:7">\n  <character>\n    <name type="string">${t}</name>\n    <gender type="string">${this.sanitizeString(e.gender||"")}</gender>\n    <deity type="string">${this.sanitizeString(e.faith||"")}</deity>\n    <age type="string">${this.sanitizeString(e.age||"")}</age>\n    <appearance type="string">${this.sanitizeString(e.hair?`Hair: ${e.hair}, Eyes: ${e.eyes||""}, Skin: ${e.skin||""}`:"")}</appearance>\n    <height type="string">${this.sanitizeString(e.height||"")}</height>\n    <weight type="string">${this.sanitizeString(e.weight?e.weight.toString():"")}</weight>\n    <size type="string">${er.getDefaultSize()}</size>\n    <alignment type="string">${this.sanitizeString(er.getAlignmentName(e.alignmentId))}</alignment>\n    <bonds type="string">${this.sanitizeString(e.traits?.bonds||"")}</bonds>\n    <flaws type="string">${this.sanitizeString(e.traits?.flaws||"")}</flaws>\n    <ideals type="string">${this.sanitizeString(e.traits?.ideals||"")}</ideals>\n    <personalitytraits type="string">${this.sanitizeString(e.traits?.personalityTraits||"")}</personalitytraits>\n    <race type="string">${this.sanitizeString(e.race?.fullName||"Unknown")}</race>\n    <racelink type="windowreference">\n      <class>reference_race</class>\n      <recordname>reference.race.${this.sanitizeString((e.race?.fullName||"unknown").toLowerCase().replace(/\s+/g,""))}@*</recordname>\n    </racelink>\n    <background type="string">${this.sanitizeString(e.background?.definition?.name||"")}</background>\n    <backgroundlink type="windowreference">\n      <class>reference_background</class>\n      <recordname>reference.background.${this.sanitizeString((e.background?.definition?.name||"unknown").toLowerCase().replace(/\s+/g,""))}@*</recordname>\n    </backgroundlink>\n    <level type="number">${r}</level>\n    <profbonus type="number">${i}</profbonus>\n    <notes type="string">${this.generateNotesText(e,n)}</notes>\n    <perception type="number">0</perception>\n    <perceptionmodifier type="number">0</perceptionmodifier>\n    <exp type="number">${e.currentXp||0}</exp>\n    <expneeded type="number">0</expneeded>\n    \n    \x3c!-- Abilities with proper template structure --\x3e\n    <abilities>\n      ${this.generateAbilitiesXML(e)}\n    </abilities>\n    \n    \x3c!-- Classes with template structure --\x3e\n    <classes>\n      ${e.classes?.map((e,t)=>`<id-${String(t+1).padStart(5,"0")}>\n        <casterpactmagic type="number">0</casterpactmagic>\n        <hddie type="dice">${e.definition?.hitDie?`d${e.definition.hitDie}`:er.getDefaultHitDie()}</hddie>\n        <hdused type="number">0</hdused>\n        <level type="number">${e.level||1}</level>\n        <name type="string">${this.sanitizeString(e.definition?.name||"Unknown")}</name>\n        <shortcut type="windowreference">\n          <class>reference_class</class>\n          <recordname>reference.class.${this.sanitizeString((e.definition?.name||"unknown").toLowerCase())}@*</recordname>\n        </shortcut>\n      </id-${String(t+1).padStart(5,"0")}>`).join("\n      ")||""}\n    </classes>\n    \n    \x3c!-- Currency --\x3e\n    <coins>\n      ${this.generateCoinsXML(e)}\n    </coins>\n    \n    \x3c!-- Defenses --\x3e\n    <defenses>\n      <ac>\n        <armor type="number">0</armor>\n        <misc type="number">0</misc>\n        <prof type="number">0</prof>\n        <shield type="number">0</shield>\n        <stat2 type="string">dexterity</stat2>\n        <temporary type="number">0</temporary>\n        <total type="number">${er.getBaseArmorClass()}</total>\n      </ac>\n    </defenses>\n    \n    ${this.generateEncumbranceXML(e)}\n    \n    \x3c!-- Placeholder sections for Phase 2 --\x3e\n    <featlist>\n      ${this.generateFeatsXML(e)}\n    </featlist>\n    \n    <featurelist>\n      ${this.generateFeaturesXML(e)}\n    </featurelist>\n    \n    ${this.generateInventoryXML(e)}\n    \n    <languagelist>\n      ${this.generateLanguagesXML(e)}\n    </languagelist>\n    \n    <powergrouplist>\n      ${this.generatePowerGroupXML(e)}\n    </powergrouplist>\n    \n    <skilllist>\n      ${this.generateSkillsXML(e)}\n    </skilllist>\n    \n    <proficiencylist>\n      ${this.generateProficienciesXML(e)}\n    </proficiencylist>\n    \n    <traitlist>\n      ${this.generateTraitsXML(e)}\n    </traitlist>\n    \n    <weaponlist>\n      ${this.generateWeaponsXML(e)}\n    </weaponlist>\n    \n    <powers>\n      ${this.generateSpellsXML(e)}\n    </powers>\n    \n    ${this.generatePowerMetaXML(e)}\n  </character>\n</root>`;return console.log("Generated mock XML for character:",t),a}reportProgress(e,t,n){this.onProgress&&this.onProgress(e,t),console.log(`Progress: ${e} (${t}%)${n?` - ${n}`:""}`)}async checkServiceAvailability(){const e=Yn.isEnabled("character_fetcher");return{proxyService:await this.characterFetcher.checkServiceHealth(),legacyParser:"undefined"!=typeof window&&!!window.parseCharacter,usingNewFetcher:e}}calculateTotalLevel(e){return e.classes&&Array.isArray(e.classes)&&e.classes.reduce((e,t)=>e+(t.level||0),0)||1}generatePowerGroupXML(e){if(!Yn.isEnabled("spell_slot_calculator"))return"\x3c!-- Spell slots disabled by feature flag --\x3e";try{const t=this.extractClassInfo(e),n=this.calculateSpellSlots(t);if(!n||!n.spellSlots)return"\x3c!-- No spell slots calculated --\x3e";n.spellSlots;const r=t.some(e=>"warlock"===e.classDefinition.name.toLowerCase()),i=Object.values(n.spellSlots).some(e=>e>0),a=Object.values(n.pactMagicSlots).some(e=>e>0);return i||a?r&&a?this.generatePactMagicPowerGroupXML(e,t):this.generateRegularSpellPowerGroupXML(n.spellSlots,n.debugInfo):"\x3c!-- Character has no spell slots --\x3e"}catch(error){return console.error("Error generating spell slots XML:",error),"\x3c!-- Error generating spell slots --\x3e"}}generateRegularSpellPowerGroupXML(e,t){let n="",r=1;return[{key:"level1",name:"1st Level"},{key:"level2",name:"2nd Level"},{key:"level3",name:"3rd Level"},{key:"level4",name:"4th Level"},{key:"level5",name:"5th Level"},{key:"level6",name:"6th Level"},{key:"level7",name:"7th Level"},{key:"level8",name:"8th Level"},{key:"level9",name:"9th Level"}].forEach(t=>{const i=e[t.key]||0;i>0&&(n+=`      <id-${String(r).padStart(5,"0")}>\n        <castertype type="string">memorized</castertype>\n        <name type="string">${this.sanitizeString(t.name+" Spells")}</name>\n        <stat type="string">charisma</stat>\n        <powers>\n          \x3c!-- Spell slots: ${i} --\x3e\n        </powers>\n      </id-${String(r).padStart(5,"0")}>\n`,r++)}),n||"\x3c!-- No spell slots available --\x3e"}generatePactMagicPowerGroupXML(e,t){const n=t.find(e=>"warlock"===e.name);return n?(this.getWarlockPactMagicSlots(n.level),'      <id-00001>\n        <castertype type="string">pact</castertype>\n        <name type="string">Pact Magic</name>\n        <stat type="string">charisma</stat>\n        <powers>\n          \x3c!-- Warlock spells --\x3e\n        </powers>\n      </id-00001>\n'):"\x3c!-- No warlock class found --\x3e"}getWarlockPactMagicSlots(e){return e>=17?{level5:4}:e>=15?{level5:3}:e>=11||e>=9?{level5:2}:e>=7?{level4:2}:e>=5?{level3:2}:e>=3?{level2:2}:e>=2?{level1:2}:e>=1?{level1:1}:{}}generatePowerMetaXML(e){if(!Yn.isEnabled("spell_slot_calculator"))return"\x3c!-- Spell slot meta disabled by feature flag --\x3e";try{const t=this.extractClassInfo(e),n=this.calculateSpellSlots(t);return n&&n.spellSlots?`    ${this.spellSlotCalculator.generateSpellSlotsXML(n).combinedXML}`:"\x3c!-- No spell slot meta calculated --\x3e"}catch(error){return console.error("Failed to generate spell slot meta XML:",error),"\x3c!-- Spell slot meta generation failed --\x3e"}}generateSpellSlotsXML(e){if(!Yn.isEnabled("spell_slot_calculator"))return"\x3c!-- Spell slots disabled by feature flag --\x3e";try{const t=this.extractClassInfo(e),n=this.calculateSpellSlots(t);if(!n||!n.spellSlots)return"\x3c!-- No spell slots calculated --\x3e";const r=this.spellSlotCalculator.generateSpellSlotsXML(n),i=Object.values(n.spellSlots).some(e=>e>0),a=Object.values(n.pactMagicSlots).some(e=>e>0);return i||a?r.spellSlotsXML||r.pactMagicXML:"\x3c!-- Character has no spell slots --\x3e"}catch(error){return console.error("Failed to generate spell slots XML:",error),"\x3c!-- Spell slots generation failed --\x3e"}}generateAbilitiesXML(e){const t=er.getAbilities(),n=this.getAbilityScores(e);return t.map(e=>{const t=n[e.name]||er.getDefaultAbilityScore(),r=er.calculateAbilityModifier(t);return`<${e.name}>\n        <bonus type="number">${r}</bonus>\n        <save type="number">${r}</save>\n        <savemodifier type="number">0</savemodifier>\n        <saveprof type="number">0</saveprof>\n        <score type="number">${t}</score>\n      </${e.name}>`}).join("\n      ")}sanitizeString(e){return Yn.isEnabled("string_sanitizer_service"),nr.sanitizeForXML(e)}safeAccess(e,t,n=null){return Yn.isEnabled("safe_access_service"),rr.get(e,t,n)}processAbilityBonuses(e){return Yn.isEnabled("ability_score_processor"),or.processAbilityScoreBonuses(e)}getAbilityScores(e){if(Yn.isEnabled("ability_score_processor")){const t=or.processAbilityScoreBonuses(e),n={};return ir.forEach(e=>{n[e]=t.totalScores[e]?.total||10}),n}if(Yn.isEnabled("ability_constants"))return sr.convertLegacyAbilities(e.stats||[],e.bonusStats,e.overrideStats);{const t={};return["strength","dexterity","constitution","intelligence","wisdom","charisma"].forEach((n,r)=>{const i=e.stats?.[r]?.value||10,a=e.bonusStats?.[r]?.value||0,s=e.overrideStats?.[r]?.value;t[n]=null!=s?s:i+a}),t}}enableAbilityScoreDebug(e=!0){or.setDebugMode(e),console.log("🔍 Ability Score Processor debug mode "+(e?"enabled":"disabled"))}enableSpellSlotDebug(e=!0){fr.setDebugMode(e),console.log("🪄 Spell Slot Calculator debug mode "+(e?"enabled":"disabled"))}extractClassInfo(e){return e.classes&&Array.isArray(e.classes)?e.classes.map((e,t)=>{const n=e.definition?.name||"unknown",r=e.level||1,i=e.subclassDefinition?.name;return{id:e.definition?.id||t+1,level:r,classDefinition:{id:e.definition?.id||t+1,name:n,canCastSpells:e.definition?.canCastSpells||!1,spellCastingAbilityId:e.definition?.spellCastingAbilityId},subclassDefinition:i?{id:e.subclassDefinition?.id||0,name:i}:void 0}}):[]}calculateSpellSlots(e){return Yn.isEnabled("spell_slot_calculator"),this.spellSlotCalculator.calculateSpellSlots(e)}generateEncumbranceXML(e){try{const t=this.calculateEncumbrance(e);return t?(console.log(`⚖️ Generated encumbrance XML: ${t.totalWeight} lbs, ${t.encumbranceLevel}`),`\x3c!-- Encumbrance --\x3e\n    <encumbrance>\n      <encumbered type="number">${t.carryingCapacity.normal}</encumbered>\n      <encumberedheavy type="number">${2*t.carryingCapacity.normal}</encumberedheavy>\n      <liftpushdrag type="number">${t.carryingCapacity.push}</liftpushdrag>\n      <load type="number">${Math.round(t.totalWeight)}</load>\n      <max type="number">${t.carryingCapacity.normal}</max>\n    </encumbrance>`):(console.warn("No encumbrance data calculated"),'\x3c!-- Encumbrance --\x3e\n    <encumbrance>\n      <encumbered type="number">0</encumbered>\n      <encumberedheavy type="number">0</encumberedheavy>\n      <liftpushdrag type="number">0</liftpushdrag>\n      <load type="number">0</load>\n      <max type="number">0</max>\n    </encumbrance>')}catch(error){return console.error("Failed to generate encumbrance XML:",error),'\x3c!-- Encumbrance generation failed --\x3e\n    <encumbrance>\n      <encumbered type="number">0</encumbered>\n      <encumberedheavy type="number">0</encumberedheavy>\n      <liftpushdrag type="number">0</liftpushdrag>\n      <load type="number">0</load>\n      <max type="number">0</max>\n    </encumbrance>'}}generateInventoryXML(e){try{const t=this.processInventory(e);return t.xmlResult&&t.xmlResult.xml?(console.log(`📦 Generated inventory XML: ${t.statistics.totalItems} items`),t.xmlResult.xml):(console.warn("No inventory XML generated"),"<inventorylist>\n\t\t\t\x3c!-- No inventory items --\x3e\n\t\t</inventorylist>")}catch(error){return console.error("Failed to generate inventory XML:",error),"<inventorylist>\n\t\t\t\x3c!-- Inventory generation failed --\x3e\n\t\t</inventorylist>"}}generateFeaturesXML(e){if(!Yn.isEnabled("feature_processor"))return console.log("🎭 Using legacy feature processing (placeholder)"),"\x3c!-- Legacy feature processing not yet implemented --\x3e";try{console.log("🎭 Using modern FeatureProcessor service for class features"),Yn.isEnabled("feature_processor_debug")&&Cr.setDebugMode(!0);const t=this.featureProcessor.processCharacterFeatures(e),n=this.featureProcessor.generateFeaturesXML(t);if(Cr.setDebugMode(!1),Yn.isEnabled("feature_processor_debug")){console.log("Class Features Breakdown:",t.debugInfo.classBreakdown),console.log(`Processing Method: ${t.debugInfo.processingMethod}`),console.log("Features by Class:",t.featuresByClass),console.log("Traits by Race:",t.traitsByRace);const n=Cr.validateCharacterData(e);console.log("Feature Data Validation:",{isValid:n.isValid,errorCount:n.errors.length}),n.errors.length>0&&console.error("Feature Data Errors:",n.errors)}return console.log(`🎭 Generated features XML: ${t.totalFeatures} total features`),n}catch(error){return console.error("Failed to generate features XML:",error),"\x3c!-- Feature processing failed --\x3e"}}generateTraitsXML(e){if(!Yn.isEnabled("feature_processor"))return console.log("🎭 Using legacy trait processing (placeholder)"),"\x3c!-- Legacy trait processing not yet implemented --\x3e";try{console.log("🎭 Using modern FeatureProcessor service for racial traits"),Yn.isEnabled("feature_processor_debug")&&Cr.setDebugMode(!0);const t=this.featureProcessor.processCharacterFeatures(e),n=this.featureProcessor.generateTraitsXML(t);return Cr.setDebugMode(!1),Yn.isEnabled("feature_processor_debug")&&(console.log("Racial Traits Breakdown:",t.debugInfo.raceBreakdown),console.log(`Processing Method: ${t.debugInfo.processingMethod}`),console.log("Traits by Race:",t.traitsByRace)),console.log(`🎭 Generated traits XML: ${t.debugInfo.raceBreakdown.traitCount} total traits`),n}catch(error){return console.error("Failed to generate traits XML:",error),"\x3c!-- Trait processing failed --\x3e"}}generateWeaponsXML(e){try{if(console.log("⚔️ Generating weapons XML"),!Yn.isEnabled("inventory_processor"))return console.log("⚔️ Inventory processor disabled by feature flag"),"\x3c!-- Inventory processor disabled --\x3e";console.log("⚔️ Character inventory data:",{hasInventory:!!e.inventory,inventoryLength:e.inventory?.length||0,inventoryType:Array.isArray(e.inventory)?"array":typeof e.inventory});const t=this.inventoryProcessor.processInventory(e.inventory||[],e.id,{includeZeroQuantityItems:!1,respectContainerHierarchy:!0,generateDetailedXML:!0,sanitizeOutput:!0,includeCostInformation:!1,markItemsAsIdentified:!0});console.log("⚔️ Inventory processing result:",{hasResult:!!t,hasNestedStructure:!!t?.nestedStructure,hasRootItems:!!t?.nestedStructure?.rootItems,rootItemsType:Array.isArray(t?.nestedStructure?.rootItems)?"array":typeof t?.nestedStructure?.rootItems,rootItemsLength:t?.nestedStructure?.rootItems?.length||0});const n=[];let r=0;if(!t||!t.nestedStructure||!t.nestedStructure.rootItems)return console.log("⚔️ No inventory items found or invalid inventory structure"),"\x3c!-- No inventory items found --\x3e";const i=t.nestedStructure.rootItems,a=t.nestedStructure.containers,s=i.length;Yn.isEnabled("weaponlist_debug")&&console.log(`⚔️ Processing ${s} root items + ${a.size} containers for weapons`);for(const e of i)if(Yn.isEnabled("weaponlist_debug")&&console.log(`⚔️ Checking item: ${e.definition.name}`,{filterType:e.definition.filterType,isWeapon:"Weapon"===e.definition.filterType,itemType:e.definition.type,equipped:e.equipped,hasWeaponBehaviors:!!e.definition.weaponBehaviors}),this.isWeapon(e)){Yn.isEnabled("weaponlist_debug")&&console.log(`⚔️ Found weapon: ${e.definition.name}`);const t=this.extractWeaponData(e,r);if(t&&(n.push(t),r++,this.isThrown(e))){const t=this.extractThrownWeaponData(e,r);t&&(n.push(t),r++)}}Yn.isEnabled("weaponlist_debug")&&console.log(`⚔️ Checking ${a.size} containers for weapons`),a.forEach((e,t)=>{Yn.isEnabled("weaponlist_debug")&&console.log(`⚔️ Checking container: ${e.definition.name} with ${e.contents.length} items`);for(const i of e.contents)if(Yn.isEnabled("weaponlist_debug")&&console.log(`⚔️ Checking container item: ${i.definition.name}`,{filterType:i.definition.filterType,isWeapon:"Weapon"===i.definition.filterType,containerName:e.definition.name}),this.isWeapon(i)){Yn.isEnabled("weaponlist_debug")&&console.log(`⚔️ Found weapon in container: ${i.definition.name}`);const e=this.extractWeaponData(i,r);if(e&&(n.push(e),r++,this.isThrown(i))){const e=this.extractThrownWeaponData(i,r);e&&(n.push(e),r++)}}}),this.linkAmmoToWeapons(n,t.nestedStructure),this.isCharacterMonk(e)&&n.push(this.getMonkUnarmedStrike(r)),console.log(`⚔️ Final weapons array length: ${n.length}`,n);let o="";return n.forEach((e,t)=>{const n=String(t+1).padStart(5,"0");o+=`      <id-${n}>\n        <attackbonus type="number">${e.attackBonus}</attackbonus>\n        <attackstat type="string">${e.attackStat}</attackstat>\n        <carried type="number">1</carried>\n        <damagelist>\n          <id-00001>\n            <bonus type="number">${e.damage.bonus}</bonus>\n            <dice type="dice">${e.damage.dice}</dice>\n            <stat type="string">${e.attackStat}</stat>\n            <type type="string">${e.damage.type}</type>\n          </id-00001>\n        </damagelist>\n        <handling type="number">0</handling>\n        <isidentified type="number">1</isidentified>\n        <name type="string">${this.sanitizeString(e.name)}</name>\n        <properties type="string">${this.sanitizeString(e.properties)}</properties>\n        <shortcut type="windowreference">\n          <class>item</class>\n          <recordname>${e.shortcut}</recordname>\n        </shortcut>\n        <type type="number">${e.weaponType}</type>`,void 0!==e.maxAmmo&&(o+=`\n        <maxammo type="number">${e.maxAmmo}</maxammo>`),o+=`\n      </id-${n}>\n`}),console.log(`⚔️ Generated weapons XML: ${n.length} weapons`),o}catch(error){return console.error("Failed to generate weapons XML:",error),"\x3c!-- Weapon processing failed --\x3e"}}generateSpellsXML(e){try{if(console.log("🪄 Generating spells XML"),!e.spells||!e.classSpells)return console.log("🪄 No spell data found"),"\x3c!-- No spells found --\x3e";const t=[];let n=0;Yn.isEnabled("spelllist_debug")&&console.log(`🪄 Processing ${e.classSpells?.length||0} class spell collections`),e.classSpells?.forEach(r=>{const i=this.getClassNameById(e,r.characterClassId);Yn.isEnabled("spelllist_debug")&&console.log(`🪄 Processing ${i} spells: ${r.spells?.length||0} spells`),r.spells?.forEach(e=>{const r=this.extractSpellData(e,i);r&&(Yn.isEnabled("spelllist_debug")&&console.log(`🪄 Added ${i} spell: ${r.name} (Level ${r.level})`),t.push(r),n++)})}),e.spells.class&&e.spells.class.forEach(e=>{const r=this.extractSpellData(e,"Class");r&&(t.push(r),n++)}),e.spells.race&&e.spells.race.forEach(e=>{const r=this.extractSpellData(e,"Race");r&&(t.push(r),n++)}),e.spells.feat&&e.spells.feat.forEach(e=>{const r=this.extractSpellData(e,"Feat");r&&(t.push(r),n++)}),e.spells.item&&e.spells.item.forEach(e=>{const r=this.extractSpellData(e,"Item");r&&(t.push(r),n++)}),console.log(`🪄 Found ${t.length} spells total`);const r=this.extractActivePowers(e);Yn.isEnabled("spelllist_debug")&&(console.log(`🪄 Found ${r.length} active features/traits to add as powers`),r.forEach(e=>{console.log(`🪄 Feature found: ${e.name} (${e.source})`)})),r.forEach(e=>t.push(e)),console.log(`🪄 Found ${r.length} active features/traits to add as powers`),console.log(`🪄 Total powers (spells + features): ${t.length}`);let i="";return t.forEach((e,t)=>{const n=String(t+1).padStart(5,"0");i+=`      <id-${n}>`;const r=this.generateSpellActions(e);r&&(i+=`\n        <actions>\n${r}        </actions>`),"feature"===e.powerType?i+=`\n        <cast type="number">0</cast>\n        <description type="formattedtext">\n          <p>${this.sanitizeString(e.description)}</p>\n        </description>\n        <group type="string">${this.sanitizeString(e.group)}</group>\n        <level type="number">${e.level}</level>\n        <locked type="number">1</locked>\n        <name type="string">${this.sanitizeString(e.name)}</name>\n        <prepared type="number">${e.prepared}</prepared>\n        <ritual type="number">${e.ritual?1:0}</ritual>\n        <source type="string">${this.sanitizeString(e.source)}</source>`:i+=`\n        <castingtime type="string">${this.sanitizeString(e.castingTime)}</castingtime>\n        <components type="string">${this.sanitizeString(e.components)}</components>\n        <description type="formattedtext">\n          <p>${this.sanitizeString(e.description)}</p>\n        </description>\n        <duration type="string">${this.sanitizeString(e.duration)}</duration>\n        <group type="string">Spells</group>\n        <level type="number">${e.level}</level>\n        <name type="string">${this.sanitizeString(e.name)}</name>\n        <prepared type="number">${e.prepared?1:0}</prepared>\n        <range type="string">${this.sanitizeString(e.range)}</range>\n        <ritual type="number">${e.ritual?1:0}</ritual>\n        <school type="string">${this.sanitizeString(e.school)}</school>\n        <source type="string">${this.sanitizeString(e.source)}</source>`,i+=`\n      </id-${n}>\n`}),console.log(`🪄 Generated spells XML: ${t.length} spells`),i}catch(error){return console.error("Failed to generate spells XML:",error),"\x3c!-- Spell processing failed --\x3e"}}generateFeatsXML(e){try{console.log("📜 Generating feats XML");const t=e.feats||[];if(!Array.isArray(t))return console.log("📜 No feats array found in character data"),"\x3c!-- No feats data found --\x3e";if(0===t.length)return console.log("📜 Character has no feats"),"\x3c!-- Character has no feats --\x3e";let n="";return t.forEach((e,t)=>{const r=String(t+1).padStart(5,"0"),i=e.definition?.name||e.name||"Unknown Feat",a=e.definition?.description||e.description||"";n+=`      <id-${r}>\n        <locked type="number">1</locked>\n        <name type="string">${this.sanitizeString(i)}</name>\n        <text type="formattedtext">\n          <p>${this.sanitizeString(a)}</p>\n        </text>\n      </id-${r}>\n`,"Medium Armor Master"===i?console.log("📜 Found Medium Armor Master feat"):"Alert"===i?console.log("📜 Found Alert feat"):"Mobile"===i?console.log("📜 Found Mobile feat"):"Observant"===i&&console.log("📜 Found Observant feat")}),console.log(`📜 Generated feats XML: ${t.length} feats`),n}catch(error){return console.error("Failed to generate feats XML:",error),"\x3c!-- Feat processing failed --\x3e"}}generateCoinsXML(e){try{console.log("💰 Generating coins XML");const t=e.currencies||{};0===Object.keys(t).length&&console.log("💰 No currency data found in character");const n=[{key:"pp",name:"PP",amount:t.pp||0},{key:"gp",name:"GP",amount:t.gp||0},{key:"ep",name:"EP",amount:t.ep||0},{key:"sp",name:"SP",amount:t.sp||0},{key:"cp",name:"CP",amount:t.cp||0}];let r="";return n.forEach((e,t)=>{const n=t+1;r+=`      <slot${n}>\n        <amount type="number">${e.amount}</amount>\n        <name type="string">${e.name}</name>\n      </slot${n}>\n`}),r+='      <slot6>\n        <amount type="number">0</amount>\n      </slot6>\n',console.log("💰 Generated coins XML:",n.map(e=>`${e.name}: ${e.amount}`).join(", ")),r}catch(error){return console.error("Failed to generate coins XML:",error),"\x3c!-- Coin processing failed --\x3e"}}generateNotesText(e,t){try{console.log("📝 Generating character notes");let n="";if(n+=`D&D Beyond Character ID: ${t}\\n`,e.notes&&"object"==typeof e.notes){const t=Object.entries(e.notes);t.length>0?(console.log(`📝 Found ${t.length} note categories`),t.forEach(([e,t])=>{if(null!=t&&""!==t){const r=e.charAt(0).toUpperCase()+e.substring(1),i=this.sanitizeString(t).trim();n+=`${r}: ${i}\\n`,console.log(`📝 Added note: ${r} (${i.length} chars)`)}})):console.log("📝 Notes object exists but is empty")}else console.log("📝 No notes found in character data");const r=n.replace(/\\n$/,"");return console.log(`📝 Generated notes text (${r.length} chars total)`),this.sanitizeString(r)}catch(error){return console.error("Failed to generate notes text:",error),this.sanitizeString(`Character converted from D&D Beyond (ID: ${t}) using Modern Converter v2.0`)}}generateProficienciesXML(e){try{console.log("🛠️ Generating proficiencies XML");const t=new Set;e.modifiers&&Object.values(e.modifiers).forEach(e=>{Array.isArray(e)&&e.forEach(e=>{if("proficiency"===e.type&&e.isGranted){const n=e.friendlySubtypeName||e.subType;this.isSkillProficiency(e.subType)||this.isSavingThrowProficiency(e.subType)||this.isPlaceholderProficiency(n)||t.add(n)}})});let n="",r=1;return t.forEach(e=>{const t=String(r).padStart(5,"0");n+=`      <id-${t}>\n        <name type="string">${e}</name>\n      </id-${t}>\n`,r++}),console.log(`🛠️ Generated ${t.size} proficiencies`),n}catch(error){return console.error("Error generating proficiencies XML:",error),"\x3c!-- Error generating proficiencies --\x3e"}}isSkillProficiency(e){return["acrobatics","animal-handling","arcana","athletics","deception","history","insight","intimidation","investigation","medicine","nature","perception","performance","persuasion","religion","sleight-of-hand","stealth","survival"].includes(e)}isSavingThrowProficiency(e){return e.includes("saving-throws")}isPlaceholderProficiency(e){return["Choose a Barbarian Skill","Choose a Sorcerer Skill Proficiency","Choose a Sorcerer Skill Proficiency "].includes(e)}processInventory(e){if(Yn.isEnabled("inventory_processor"))try{console.log("🎒 Using modern InventoryProcessor service");const t=this.convertToInventoryItems(e.inventory||[]),n=e.id,r={includeZeroQuantityItems:!1,respectContainerHierarchy:!0,generateDetailedXML:!1,sanitizeOutput:Yn.isEnabled("string_sanitizer_service"),includeCostInformation:!0,markItemsAsIdentified:!0};return this.inventoryProcessor.processInventory(t,n,r)}catch(error){console.warn("InventoryProcessor failed, falling back to legacy:",error)}return console.log("📦 Using legacy inventory processing"),{nestedStructure:{characterId:e.id,rootItems:[],containers:new Map,totalItems:0,totalWeight:0},xmlResult:{xml:"\x3c!-- Legacy inventory processing not implemented --\x3e",itemCount:0,totalWeight:0,containerCount:0,debugInfo:{processedItems:0,skippedItems:0,containerItems:0,magicContainers:[]}},statistics:{totalItems:0,containerCount:0,magicContainers:0,totalWeight:0}}}calculateEncumbrance(e){if(Yn.isEnabled("encumbrance_calculator"))try{console.log("⚖️ Using modern EncumbranceCalculator service");const t={id:e.id,strengthScore:this.getAbilityScore(e,1),hasPowerfulBuild:wr.hasPowerfulBuild(e)},n=this.convertToInventoryItems(e.inventory||[]),r={includeContainerWeights:!0,respectMagicContainers:!0,applyRacialTraits:!0};return this.encumbranceCalculator.calculateEncumbrance(t,n,r)}catch(error){console.warn("EncumbranceCalculator failed, falling back to legacy:",error)}return console.log("⚖️ Using legacy encumbrance calculation"),{totalWeight:0,carryingCapacity:{normal:0,push:0,lift:0,powerfulBuild:!1},encumbranceLevel:"unencumbered",speedPenalty:0,disadvantageOnChecks:!1}}convertToInventoryItems(e){return e.map(e=>({id:e.id,entityTypeId:e.entityTypeId,definition:{id:e.definition.id,name:e.definition.name,weight:e.definition.weight||0,bundleSize:e.definition.bundleSize||1,isContainer:e.definition.isContainer||!1,weightMultiplier:e.definition.weightMultiplier,filterType:e.definition.filterType,subType:e.definition.subType,description:e.definition.description,cost:e.definition.cost?{quantity:e.definition.cost.quantity,unit:e.definition.cost.unit}:void 0},quantity:e.quantity,isAttuned:e.isAttuned||!1,equipped:e.equipped||!1,containerEntityId:e.containerEntityId,charges:e.charges,customName:e.customName,customWeight:e.customWeight,customCost:e.customCost}))}getAbilityScore(e,t){const n=e.stats?.find(e=>e.id===t),r=e.bonusStats?.find(e=>e.id===t);return(n?.value||10)+(r?.value||0)}generateSkillsXML(e){const t=["dexterity","wisdom","intelligence","strength","charisma","intelligence","wisdom","charisma","intelligence","wisdom","intelligence","wisdom","charisma","charisma","intelligence","dexterity","dexterity","wisdom"];let n="";return["acrobatics","animal_handling","arcana","athletics","deception","history","insight","intimidation","investigation","medicine","nature","perception","performance","persuasion","religion","sleight_of_hand","stealth","survival"].forEach((r,i)=>{const a=String(i+1).padStart(5,"0");let s=r;s=r.match(/^sleight/)?"Sleight of Hand":r.includes("animal")?"Animal Handling":r.split("_").map(e=>e.charAt(0).toUpperCase()+e.slice(1)).join(" ");let o=0;const l=tr.find(e,"type","proficiency");l&&l.length>0&&l.some(e=>{const t=e.subType?.replace(/-/g,"_");return t===r})&&(o=1);const c=tr.find(e,"type","expertise");c&&c.length>0&&c.some(e=>{const t=e.subType?.replace(/-/g,"_");return t===r})&&(o=2);const u=tr.find(e,"type","half-proficiency");u&&u.length>0&&0===o&&u.some(e=>{const t=e.subType?.replace(/-/g,"_");return t===r})&&(o=3),n+=`      <id-${a}>\n`,n+='        <misc type="number">0</misc>\n',n+=`        <name type="string">${s}</name>\n`,n+=`        <stat type="string">${t[i]}</stat>\n`,n+=`        <prof type="number">${o}</prof>\n`,n+=`      </id-${a}>\n`}),n}generateLanguagesXML(e){let t="";const n=new Set,r=tr.find(e,"type","language");return r&&r.length>0&&r.forEach(e=>{const t=e.friendlySubtypeName||e.subType||"Unknown Language";n.add(t)}),e.race?.racialTraits&&e.race.racialTraits.forEach(e=>{if(e.definition?.name?.toLowerCase().includes("language")){const t=e.definition.description||"";["Common","Elvish","Dwarvish","Halfling","Orcish","Gnomish","Giant","Draconic"].forEach(e=>{t.includes(e)&&n.add(e)})}}),Array.from(n).sort().forEach((e,n)=>{const r=String(n+1).padStart(5,"0");t+=`      <id-${r}>\n`,t+=`        <name type="string">${this.sanitizeString(e)}</name>\n`,t+=`      </id-${r}>\n`}),t}getFeatureFlagStatus(){return{character_fetcher:Yn.isEnabled("character_fetcher"),modern_converter:Yn.isEnabled("modern_converter"),legacy_fallback:Yn.isEnabled("legacy_fallback"),debug_character_data:Yn.isEnabled("debug_character_data"),object_search_service:Yn.isEnabled("object_search_service"),string_sanitizer_service:Yn.isEnabled("string_sanitizer_service"),safe_access_service:Yn.isEnabled("safe_access_service"),ability_constants:Yn.isEnabled("ability_constants"),ability_score_processor:Yn.isEnabled("ability_score_processor"),debug_ability_score_processor:Yn.isEnabled("debug_ability_score_processor"),spell_slot_calculator:Yn.isEnabled("spell_slot_calculator"),debug_spell_slot_calculator:Yn.isEnabled("debug_spell_slot_calculator"),inventory_processor:Yn.isEnabled("inventory_processor"),encumbrance_calculator:Yn.isEnabled("encumbrance_calculator"),inventory_processor_debug:Yn.isEnabled("inventory_processor_debug"),encumbrance_calculator_debug:Yn.isEnabled("encumbrance_calculator_debug"),feature_processor_debug:Yn.isEnabled("feature_processor_debug"),weaponlist_debug:Yn.isEnabled("weaponlist_debug")}}isWeapon(e){return"Weapon"===e.definition.filterType}isThrown(e){return(e.definition.weaponBehaviors?.[0]?.properties||[]).some(e=>e.toLowerCase().includes("thrown"))}extractWeaponData(e,t){Yn.isEnabled("weaponlist_debug")&&console.log(`⚔️ Extracting weapon data for: ${e.definition.name}`);const n=e.definition.weaponBehaviors?.[0];let r=n?.properties||[];0===r.length&&(r=this.inferWeaponProperties(e));const i=r.some(e=>e.toLowerCase().includes("range"))||r.some(e=>e.toLowerCase().includes("ranged"))||this.isRangedWeapon(e.definition.name),a=r.some(e=>e.toLowerCase().includes("thrown")),s=this.getWeaponAttackStat(e,i),o=this.extractWeaponDamage(e);let l=0;a?l=2:i&&(l=1);const c=`....inventorylist.id-${String(e.id).padStart(5,"0")}`,u={id:e.id,name:e.definition.name,properties:r.join(", "),attackBonus:0,attackStat:s,damage:o,weaponType:l,shortcut:c};return Yn.isEnabled("weaponlist_debug")&&console.log("⚔️ Extracted weapon data:",u),u}extractThrownWeaponData(e,t){const n=this.extractWeaponData(e,t);return n?{...n,weaponType:0}:null}getWeaponAttackStat(e,t){return t?"dexterity":"strength"}isCharacterMonk(e){return!!e.classes&&e.classes.some(e=>"monk"===e.definition?.name?.toLowerCase())}getMonkUnarmedStrike(e){return{id:999999,name:"Unarmed Strike",properties:"Monk, Unarmed",attackBonus:0,attackStat:"dexterity",damage:{dice:"1d4",bonus:0,type:"bludgeoning"},weaponType:0,shortcut:""}}linkAmmoToWeapons(e,t){Yn.isEnabled("weaponlist_debug")&&console.log(`⚔️ Linking ammunition to ${e.length} weapons`);const n=[];t.rootItems.forEach(e=>{this.isAmmunition(e)&&n.push(e)}),t.containers.forEach(e=>{e.contents.forEach(e=>{this.isAmmunition(e)&&n.push(e)})}),Yn.isEnabled("weaponlist_debug")&&console.log(`⚔️ Found ${n.length} ammunition items:`,n.map(e=>({name:e.definition.name,quantity:e.quantity,subType:e.definition.subType}))),e.forEach((e,r)=>{if(2===e.weaponType)e.maxAmmo=this.getThrownWeaponQuantity(e,t),Yn.isEnabled("weaponlist_debug")&&console.log(`⚔️ Set thrown weapon ${e.name} maxAmmo to ${e.maxAmmo} (using item quantity)`);else{const t=this.findCompatibleAmmo(e,n);t&&(e.maxAmmo=t.quantity,Yn.isEnabled("weaponlist_debug")&&console.log(`⚔️ Linked ${e.name} to ${t.definition.name} (${t.quantity})`))}})}getThrownWeaponQuantity(e,t){const n=e.id;for(const r of t.rootItems)if(r.id===n)return r.quantity;for(const[r,i]of t.containers)for(const e of i.contents)if(e.id===n)return e.quantity;return 1}isAmmunition(e){return"Ammunition"===e.definition.subType||e.definition.isConsumable&&"Other Gear"===e.definition.filterType}findCompatibleAmmo(e,t){const n=e.name.toLowerCase();for(const r of t){const e=r.definition.name.toLowerCase();if(n.includes("crossbow")&&e.includes("bolt"))return r;if(n.includes("bow")&&e.includes("arrow"))return r;if(n.includes("sling")&&(e.includes("bullet")||e.includes("stone")))return r;if(n.includes("blowgun")&&e.includes("needle"))return r}return null}inferWeaponProperties(e){const t=[],n=e.definition.name?.toLowerCase()||"";return this.isRangedWeapon(n)&&t.push("Ranged"),["greatsword","maul","pike","glaive","halberd","longbow","heavy crossbow"].some(e=>n.includes(e))&&t.push("Two-handed"),["dagger","dart","javelin","light hammer","sickle","scimitar","shortsword","handaxe"].some(e=>n.includes(e))&&t.push("Light"),["dagger","dart","rapier","scimitar","shortsword","whip"].some(e=>n.includes(e))&&t.push("Finesse"),["dart","javelin","light hammer","handaxe","spear","trident"].some(e=>n.includes(e))&&t.push("Thrown"),t}isRangedWeapon(e){return["bow","crossbow","dart","javelin","sling","blowgun"].some(t=>e.toLowerCase().includes(t))}extractWeaponDamage(e){const t=e.definition.weaponBehaviors?.[0];if(t?.damage)return{dice:t.damage.diceString||"1d6",bonus:t.damage.fixedValue||0,type:t.damage.damageTypeId?this.getDamageTypeName(t.damage.damageTypeId):"slashing"};if(e.definition.damage)return{dice:e.definition.damage.diceString||"1d6",bonus:e.definition.damage.fixedValue||0,type:e.definition.damage.damageTypeId?this.getDamageTypeName(e.definition.damage.damageTypeId):"slashing"};const n=e.definition.name?.toLowerCase()||"";return n.includes("dagger")?{dice:"1d4",bonus:0,type:"piercing"}:n.includes("shortsword")?{dice:"1d6",bonus:0,type:"piercing"}:n.includes("longsword")?{dice:"1d8",bonus:0,type:"slashing"}:n.includes("greatsword")?{dice:"2d6",bonus:0,type:"slashing"}:n.includes("mace")?{dice:"1d6",bonus:0,type:"bludgeoning"}:n.includes("warhammer")?{dice:"1d8",bonus:0,type:"bludgeoning"}:{dice:"1d6",bonus:0,type:"slashing"}}getDamageTypeName(e){return{1:"bludgeoning",2:"piercing",3:"slashing",4:"necrotic",5:"acid",6:"cold",7:"fire",8:"lightning",9:"thunder",10:"poison",11:"psychic",12:"radiant",13:"force"}[e]||"slashing"}getClassNameById(e,t){const n=e.classes?.find(e=>e.id===t);return n?.definition?.name||"Unknown"}extractSpellData(e,t){try{const n=e.definition;if(!n)return null;const r=this.formatSpellComponents(n.components||[]),i=this.formatCastingTime(n.activation),a=this.formatSpellRange(n.range),s=this.formatSpellDuration(n.duration),o=this.stripHTML(n.description||"");return{id:n.id,name:n.name,level:n.level,school:n.school||"Divination",source:t,prepared:e.prepared||!1,description:o,components:r,castingTime:i,range:a,duration:s,concentration:n.concentration||!1,ritual:n.ritual||!1,saveDc:e.overrideSaveDc||null,attackRoll:n.requiresAttackRoll||!1,requiresSavingThrow:n.requiresSavingThrow||!1,definition:n}}catch(error){return console.error("Failed to extract spell data:",error),null}}formatSpellComponents(e){const t=[];return e.includes(1)&&t.push("V"),e.includes(2)&&t.push("S"),e.includes(3)&&t.push("M"),t.join(", ")}formatCastingTime(e){if(!e)return"1 action";const t=e.activationTime||1,n={1:"action",2:"bonus action",3:"reaction",4:"minute",5:"hour",6:"no action"}[e.activationType]||"action";return 1===t?`1 ${n}`:`${t} ${n}s`}formatSpellRange(e){return e?"Self"===e.origin?e.aoeType&&e.aoeValue?`Self (${e.aoeValue}-foot ${e.aoeType.toLowerCase()})`:"Self":e.rangeValue?`${e.rangeValue} feet`:e.origin||"Touch":"Touch"}formatSpellDuration(e){if(!e)return"Instantaneous";const t=e.durationInterval||1,n=e.durationUnit?.toLowerCase()||"round";let r=1===t?`1 ${n}`:`${t} ${n}s`;return"Concentration"===e.durationType&&(r=`Concentration, up to ${r}`),r}stripHTML(e){return e.replace(/<[^>]*>/g,"").replace(/&nbsp;/g," ").trim()}generateSpellActions(e){let t="",n=1;if("feature"===e.powerType)t+=this.generateFeatureAction(e,n);else{if(t+=`          <id-${String(n).padStart(5,"0")}>\n            <order type="number">${n}</order>\n            <type type="string">cast</type>`,e.requiresSavingThrow||e.saveDc){t+='\n            <savemagic type="number">1</savemagic>';const n=this.determineSaveType(e);n&&(t+=`\n            <savetype type="string">${n}</savetype>`)}t+=`\n          </id-${String(n).padStart(5,"0")}>\n`,n++;const r=this.extractSpellDamageInfo(e);r&&(t+=`          <id-${String(n).padStart(5,"0")}>\n            <damagelist>\n              <id-00001>\n                <bonus type="number">${r.bonus}</bonus>\n                <dice type="dice">${r.dice}</dice>\n                <type type="string">${r.type}</type>\n              </id-00001>\n            </damagelist>\n            <order type="number">${n}</order>\n            <type type="string">damage</type>\n          </id-${String(n).padStart(5,"0")}>\n`,n++);const i=this.extractSpellHealingInfo(e);i&&(t+=`          <id-${String(n).padStart(5,"0")}>\n            <order type="number">${n}</order>\n            <type type="string">heal</type>\n            <heallist>\n              <id-00001>\n                <bonus type="number">${i.bonus}</bonus>\n                <dice type="dice">${i.dice}</dice>\n              </id-00001>\n            </heallist>\n          </id-${String(n).padStart(5,"0")}>\n`,n++)}return t}generateFeatureAction(e,t){const n=e.name?.toLowerCase()||"";let r=`          <id-${String(t).padStart(5,"0")}>`;e.duration&&"Instantaneous"!==e.duration&&e.duration.includes("minute")&&(r+=`\n            <durmod type="number">${e.duration.match(/(\d+)/)?.[1]||"1"}</durmod>\n            <durunit type="string">minute</durunit>`);let i="";return i=n.includes("rage")?"Rage; ADVCHK: strength; ADVSAV: strength; DMG: 2, melee; RESIST: bludgeoning, piercing, slashing":n.includes("stone's endurance")?"Stone's Endurance; Reduce damage by 1d12 + CON modifier":e.name,r+=`\n            <label type="string">${i}</label>\n            <order type="number">${t}</order>\n            <targeting type="string">self</targeting>\n            <type type="string">effect</type>\n          </id-${String(t).padStart(5,"0")}>\n`,r}determineSaveType(e){const t=e.description?.toLowerCase()||"";return t.includes("dexterity saving throw")?"dexterity":t.includes("constitution saving throw")?"constitution":t.includes("wisdom saving throw")?"wisdom":t.includes("intelligence saving throw")?"intelligence":t.includes("charisma saving throw")?"charisma":t.includes("strength saving throw")?"strength":e.definition?.saveDcAbilityId&&{1:"strength",2:"dexterity",3:"constitution",4:"intelligence",5:"wisdom",6:"charisma"}[e.definition.saveDcAbilityId]||null}extractSpellDamageInfo(e){const t=(e.description?.toLowerCase()||"").match(/(\d+d\d+).*?(acid|cold|fire|lightning|thunder|poison|psychic|radiant|necrotic|force|bludgeoning|piercing|slashing)/i);return t?{dice:this.formatDiceForFantasyGrounds(t[1]),bonus:0,type:t[2].toLowerCase()}:e.definition?.damage?{dice:this.formatDiceForFantasyGrounds(e.definition.damage.diceString||"1d6"),bonus:e.definition.damage.fixedValue||0,type:this.getDamageTypeName(e.definition.damage.damageTypeId)||"force"}:null}extractSpellHealingInfo(e){const t=(e.description?.toLowerCase()||"").match(/(\d+d\d+).*?hit points/i);if(t)return{dice:this.formatDiceForFantasyGrounds(t[1]),bonus:0};const n=e.name?.toLowerCase()||"";return n.includes("cure")||n.includes("heal")||n.includes("vitality")?{dice:this.formatDiceForFantasyGrounds("1d8"),bonus:0}:null}formatDiceForFantasyGrounds(e){return e.replace(/^1d/,"d")}extractActivePowers(e){const t=[];return Yn.isEnabled("spelllist_debug")&&(console.log("🪄 Extracting active class features and racial traits as powers"),console.log("🪄 Character classes:",e.classes?.length||0),console.log("🪄 Character race:",e.race?.fullName)),e.classes?.forEach(n=>{const r=n.definition?.name||"Unknown";Yn.isEnabled("spelllist_debug")&&console.log(`🪄 Checking ${r}: ${n.classFeatures?.length||0} class features`),n.classFeatures?.forEach(n=>{if(Yn.isEnabled("spelllist_debug")&&(console.log(`🪄 Checking class feature: ${n.definition?.name} - isActivePower: ${this.isActivePower(n)}`),n.definition?.name?.toLowerCase().includes("rage")&&(console.log("🪄 Raw Rage feature data:",n),console.log("🪄 Rage feature.levelScales:",n.levelScales))),this.isActivePower(n)){const i=this.extractFeaturePowerData(n,r,e);i?(t.push(i),Yn.isEnabled("spelllist_debug")&&console.log(`🪄 Added ${r} feature: ${i.name}`)):Yn.isEnabled("spelllist_debug")&&console.log(`🪄 Failed to extract power data for: ${n.definition?.name}`)}}),n.subclassFeatures?.forEach(n=>{if(this.isActivePower(n)){const i=n.definition?.name||r,a=this.extractFeaturePowerData(n,`${r} (${i})`,e);a&&(t.push(a),Yn.isEnabled("spelllist_debug")&&console.log(`🪄 Added ${r} subclass feature: ${a.name}`))}})}),e.race?.racialTraits?.forEach(n=>{if(this.isActivePower(n)){const r=this.extractFeaturePowerData(n,`${e.race?.fullName||"Racial"} Traits`,e);r&&(t.push(r),Yn.isEnabled("spelllist_debug")&&console.log(`🪄 Added racial trait: ${r.name}`))}}),t}isActivePower(e){if(!e?.definition)return!1;if(e.limitedUse)return!0;const t=e.definition.name?.toLowerCase()||"";return["rage","reckless attack","stone's endurance","form of the beast","action surge","second wind","bardic inspiration","channel divinity","wild shape","lay on hands","divine smite","sneak attack"].some(e=>t.includes(e))}extractFeaturePowerData(e,t,n){try{const r=e.definition;if(!r)return null;const i=this.stripHTML(r.description||"");let a=0,s="long rest",o="action";return e.limitedUse&&(a=e.limitedUse.maxUses||1,s=1===e.limitedUse.resetType?"short rest":"long rest",3===e.limitedUse.actionType&&(o=this.determineActionTypeFromDescription(i)),Yn.isEnabled("spelllist_debug")&&r.name?.toLowerCase().includes("rage")&&console.log("🪄 Rage limitedUse data:",e.limitedUse)),a=this.calculateScaledFeatureUses(e,n,a),Yn.isEnabled("spelllist_debug")&&r.name?.toLowerCase().includes("rage")&&console.log("🪄 Final Rage debug:",{featureName:r.name,characterLevel:this.getCharacterLevelForFeature(e,n),originalMaxUses:e.limitedUse?.maxUses||0,finalUsesMax:a,hasLevelScales:!!e.levelScales,levelScalesData:e.levelScales}),{id:r.id,name:r.name,level:0,school:"",source:t,prepared:a,description:i,components:"",castingTime:o,range:this.determineRangeFromDescription(i),duration:this.determineDurationFromDescription(i),concentration:!1,ritual:!1,group:t,powerType:"feature",resetType:s,definition:r}}catch(error){return console.error("Failed to extract feature power data:",error),null}}determineActionTypeFromDescription(e){const t=e.toLowerCase();return t.includes("bonus action")?"bonus action":t.includes("reaction")?"reaction":t.includes("no action")?"no action":"action"}determineRangeFromDescription(e){const t=e.toLowerCase();if(t.includes("self")||t.includes("yourself"))return"Self";if(t.includes("touch"))return"Touch";const n=t.match(/(\d+)\s*feet/i);return n?`${n[1]} feet`:"Self"}determineDurationFromDescription(e){const t=e.toLowerCase();return t.includes("1 minute")?"1 minute":t.includes("10 minutes")?"10 minutes":t.includes("1 hour")?"1 hour":t.includes("until")?"Until condition met":(t.includes("instantaneous"),"Instantaneous")}calculateScaledFeatureUses(e,t,n){const r=this.getCharacterLevelForFeature(e,t),i=this.findClassFeatureLevelScales(e,t);if(!i||!Array.isArray(i))return Yn.isEnabled("spelllist_debug")&&console.log(`🪄 No level scales found for ${e.definition?.name}, using default: ${n}`),n;Yn.isEnabled("spelllist_debug")&&(console.log(`🪄 Calculating scaled uses for ${e.definition?.name}: character level ${r}`),console.log("🪄 Level scales available:",i));const a=i.filter(e=>e.description&&!e.description.toLowerCase().includes("damage")&&!e.description.toLowerCase().includes("+")),s=a.length>0?a:i;Yn.isEnabled("spelllist_debug")&&a.length>0&&console.log(`🪄 Found ${a.length} usage-specific level scales (filtering out damage scaling)`);const o=s.sort((e,t)=>e.level-t.level);let l=n;for(const c of o)r>=c.level&&void 0!==c.fixedValue&&null!==c.fixedValue?(l=c.fixedValue,Yn.isEnabled("spelllist_debug")&&console.log(`🪄 Applied level scale at level ${c.level}: ${l} uses (${c.description||"no description"})`)):Yn.isEnabled("spelllist_debug")&&(r<c.level?console.log(`🪄 Skipping level ${c.level} (character level ${r} too low)`):void 0!==c.fixedValue&&null!==c.fixedValue||console.log(`🪄 Skipping level ${c.level} (no fixedValue: ${c.fixedValue})`));return Yn.isEnabled("spelllist_debug")&&console.log(`🪄 Final scaled uses for ${e.definition?.name}: ${l}`),l}findClassFeatureLevelScales(e,t){if(!e.definition?.id)return null;for(const n of t.classes||[]){const t=n.classFeatures?.some(t=>t.definition?.id===e.definition.id),r=n.subclassFeatures?.some(t=>t.definition?.id===e.definition.id);if(t||r){Yn.isEnabled("spelllist_debug")&&console.log(`🪄 Found class ${n.definition?.name} containing feature ${e.definition.name}`);for(const t of n.classFeatures||[])if(t.definition?.id===e.definition.id){if(Yn.isEnabled("spelllist_debug")&&console.log(`🪄 Examining class feature ${t.definition?.name}:`,{hasLevelScales:!!t.levelScales,levelScalesLength:t.levelScales?.length||0,levelScales:t.levelScales,hasDefinitionLevelScales:!!t.definition?.levelScales,definitionLevelScales:t.definition?.levelScales}),t.levelScales&&t.levelScales.length>0)return t.levelScales;if(t.definition?.levelScales&&t.definition.levelScales.length>0)return t.definition.levelScales}for(const t of n.subclassFeatures||[])if(t.definition?.id===e.definition.id){if(Yn.isEnabled("spelllist_debug")&&console.log(`🪄 Examining subclass feature ${t.definition?.name}:`,{hasLevelScales:!!t.levelScales,levelScales:t.levelScales,hasDefinitionLevelScales:!!t.definition?.levelScales,definitionLevelScales:t.definition?.levelScales}),t.levelScales&&t.levelScales.length>0)return t.levelScales;if(t.definition?.levelScales&&t.definition.levelScales.length>0)return t.definition.levelScales}return Yn.isEnabled("spelllist_debug")&&console.log(`🪄 Found class for ${e.definition.name} but no levelScales found anywhere`),null}}return Yn.isEnabled("spelllist_debug")&&console.log(`🪄 Could not find class containing feature ${e.definition.name}`),null}getCharacterLevelForFeature(e,t){for(const n of t.classes||[]){if(n.classFeatures?.some(t=>t.definition?.id===e.definition?.id))return n.level||1;if(n.subclassFeatures?.some(t=>t.definition?.id===e.definition?.id))return n.level||1}return t.classes?.reduce((e,t)=>e+(t.level||0),0)||1}};Kn.store("conversionResults",{result:null,filename:"",characterName:"",convertedAt:null,get hasResult(){return null!==this.result&&this.result.trim().length>0},get resultSize(){if(!this.result)return"0 KB";const e=new Blob([this.result]).size;return Math.round(e/1024*100)/100+" KB"},setResult(e,t="Unknown Character"){this.result=e,this.characterName=t,this.convertedAt=new Date,this.filename=`${t.replace(/[^a-zA-Z0-9]/g,"_")}_character.xml`,console.log("Conversion result set:",{characterName:t,size:this.resultSize})},clearResult(){this.result=null,this.filename="",this.characterName="",this.convertedAt=null,console.log("Conversion result cleared")},downloadXML(){if(!this.hasResult)return console.warn("No conversion result to download"),!1;try{const e=new Blob([this.result],{type:"application/xml"}),t=URL.createObjectURL(e),n=document.createElement("a");return n.href=t,n.download=this.filename||"character.xml",document.body.appendChild(n),n.click(),document.body.removeChild(n),URL.revokeObjectURL(t),console.log("XML file downloaded:",this.filename),!0}catch(error){return console.error("Failed to download XML:",error),!1}}}),Kn.store("notifications",{items:[],get hasNotifications(){return this.items.length>0},add(e,t,n=!0){const r={id:Math.random().toString(36).substr(2,9),message:e,type:t,timestamp:new Date,autoDismiss:n};if(this.items.push(r),console.log("Notification added:",r),n){const e="error"===t?0:"warning"===t?8e3:5e3;e>0&&setTimeout(()=>{this.remove(r.id)},e)}return r},addSuccess(e,t=!0){return this.add(e,"success",t)},addError(e,t=!1){return this.add(e,"error",t)},addWarning(e,t=!0){return this.add(e,"warning",t)},addInfo(e,t=!0){return this.add(e,"info",t)},remove(e){const t=this.items.findIndex(t=>t.id===e);-1!==t&&(this.items.splice(t,1),console.log("Notification removed:",e))},clear(){this.items=[],console.log("All notifications cleared")}}),Kn.data("characterConverter",()=>({characterId:"",fgVersion:"unity",isConverting:!1,progress:0,currentStep:"",isValidId:!0,showCharacterPreview:Yn.isEnabled("character_preview"),showPerformanceMetrics:Yn.isEnabled("performance_metrics"),enableBulkConversion:Yn.isEnabled("bulk_conversion"),init(){window.addEventListener("featureFlagsChanged",()=>{this.updateFeatureFlags()})},validateCharacterId(){const e=this.characterId.trim();if(!e)return void(this.isValidId=!0);const t=e.match(/(?:dndbeyond\.com\/characters\/|\/characters\/)(\d+)/i);if(t&&t[1])return this.characterId=t[1],void(this.isValidId=!0);this.isValidId=/^\d+$/.test(e),this.isValidId||Kn.store("notifications").addError("Please enter a valid character ID or D&D Beyond character URL")},async convertCharacter(){if(this.characterId.trim()){if(this.validateCharacterId(),this.isValidId){Kn.store("conversionResults").clearResult(),this.isConverting=!0,this.progress=0,this.currentStep="Initializing...";try{this.currentStep="Validating character ID...",this.progress=10,await this.delay(200);const e=this.characterId.trim();console.log("Converting character:",e);const t=window.featureFlags?.isEnabled("debug_character_data");t&&console.log("🔍 Debug mode enabled - detailed character data will be logged");const n=window.characterConverterFacade;if(!n)throw new Error("CharacterConverterFacade not available");n.onProgress=(e,t)=>{this.currentStep=e,this.progress=t};const r=await n.convertFromDNDBeyond(e);if(!r.success)throw new Error(r.error||"Conversion failed");this.currentStep="Complete!",this.progress=100;const i=r.characterData?.name||"Unknown Character";Kn.store("conversionResults").setResult(r.xml,i);const a=Kn.store("notifications"),s=window.featureFlags?.isEnabled("debug_character_data");this.validateWarlockPactMagic(r,a);const o=s?`Character "${i}" converted successfully! Check console for detailed data.`:`Character "${i}" converted successfully!`;a.addSuccess(o)}catch(error){console.error("Conversion error:",error);const t=error instanceof Error?error.message:"Unknown error occurred";Kn.store("notifications").addError(`Conversion failed: ${t}`),this.currentStep="Error occurred",this.progress=0}finally{this.isConverting=!1}}}else Kn.store("notifications").addError("Please enter a character ID")},resetForm(){this.characterId="",this.fgVersion="unity",this.isConverting=!1,this.progress=0,this.currentStep="",this.isValidId=!0,Kn.store("conversionResults").clearResult(),Kn.store("notifications").clear(),console.log("Character converter form reset")},downloadResult(){const e=Kn.store("conversionResults").downloadXML(),t=Kn.store("notifications");e?t.addSuccess("XML file downloaded successfully!"):t.addError("Failed to download XML file")},updateFeatureFlags(){this.showCharacterPreview=Yn.isEnabled("character_preview"),this.showPerformanceMetrics=Yn.isEnabled("performance_metrics"),this.enableBulkConversion=Yn.isEnabled("bulk_conversion")},delay:e=>new Promise(t=>setTimeout(t,e)),validateWarlockPactMagic(e,t){if(!e.success||!e.characterData||!e.xml)return;const n=(e.characterData.classes||[]).find(e=>"warlock"===e.definition?.name?.toLowerCase());if(!n)return;const r=n.level,i=e.characterData.name||"Unknown",a=e.xml;let s={};r>=17?s={level5:4}:r>=15?s={level5:3}:r>=11||r>=9?s={level5:2}:r>=7?s={level4:2}:r>=5?s={level3:2}:r>=3?s={level2:2}:r>=2?s={level1:2}:r>=1&&(s={level1:1});const o=[...a.matchAll(/<pactmagicslots(\d+)><max type="number">(\d+)<\/max>/g)];let l=[],c=!1;if(o.length>0)if(o.forEach(e=>{const t=e[1],n=e[2];if("0"!==n){l.push(`L${t}: ${n}`);const e=`level${t}`;s[e]&&parseInt(n)===s[e]&&(c=!0)}}),c)t.addInfo(`🎭 Warlock validated: Level ${r} ${i} correctly has pact magic slots (${l.join(", ")})`);else{const e=Object.entries(s).map(([e,t])=>`L${e.replace("level","")}: ${t}`).join(", ");t.addWarning(`⚠️ Warlock issue: Level ${r} ${i} has unexpected pact magic slots. Found: ${l.join(", ")}, Expected: ${e}`)}else{const e=/<spellslots(\d+)><max type="number">(\d+)<\/max>/g,n=[...a.matchAll(e)].filter(e=>"0"!==e[2]).map(e=>`L${e[1]}: ${e[2]}`);n.length>0?t.addError(`❌ Warlock error: Level ${r} ${i} has regular spell slots instead of pact magic (${n.join(", ")})`):t.addError(`❌ Warlock error: Level ${r} ${i} has no spell slots generated`)}}})),Kn.data("modernizationStatus",()=>({showStatus:!1,features:[{name:"Build System",status:"completed",description:"TypeScript + Vite + Tailwind CSS"},{name:"Feature Flags",status:"completed",description:"Runtime feature toggles with admin panel"},{name:"Alpine.js Framework",status:"completed",description:"Modern reactive UI components"},{name:"Character Converter",status:"in_progress",description:"Modern replacement for legacy converter"},{name:"Dependency Injection",status:"completed",description:"Decoupled service architecture with IoC container"},{name:"Character Parser",status:"completed",description:"Modernized parsing with services and level scaling"},{name:"Error Handling",status:"completed",description:"Comprehensive error management and validation"},{name:"Performance Metrics",status:"completed",description:"Conversion performance tracking and optimization"}],getOverallProgress(){const e=this.features.filter(e=>"completed"===e.status).length+.5*this.features.filter(e=>"in_progress"===e.status).length;return Math.round(e/this.features.length*100)},getStatusColor(e){switch(e){case"completed":return"text-green-400";case"in_progress":return"text-yellow-400";case"pending":return"text-red-400";default:return"text-gray-400"}},getStatusIcon(e){switch(e){case"completed":return"fas fa-check";case"in_progress":return"fas fa-clock";case"pending":return"fas fa-times";default:return"fas fa-question"}}})),document.addEventListener("keydown",e=>{if(e.ctrlKey&&e.shiftKey&&"M"===e.key){e.preventDefault();const t=document.querySelector('[x-data*="modernizationStatus"]');if(t){const e=Kn.$data(t);e.showStatus=!e.showStatus}}}),Kn.data("featureFlagAdmin",()=>({flags:{},overrides:{},showAdmin:!1,init(){this.refreshFlags(),document.addEventListener("keydown",e=>{e.ctrlKey&&e.shiftKey&&"F"===e.key&&(e.preventDefault(),this.showAdmin=!this.showAdmin)})},toggleFlag(e){const t=this.getFlagStatus(e);"overridden"===t?Yn.clearOverride(e):"enabled"===t?Yn.disable(e):Yn.enable(e),this.refreshFlags(),window.dispatchEvent(new CustomEvent("featureFlagsChanged",{detail:{flagKey:e,newStatus:this.getFlagStatus(e)}}))},clearOverride(e){Yn.clearOverride(e),this.refreshFlags(),window.dispatchEvent(new CustomEvent("featureFlagsChanged",{detail:{flagKey:e,newStatus:this.getFlagStatus(e)}}))},clearAllOverrides(){Yn.clearAllOverrides(),this.refreshFlags(),window.dispatchEvent(new CustomEvent("featureFlagsChanged",{detail:{action:"clearAll"}}))},refreshFlags(){this.flags=Yn.getAllFlags(),this.overrides=Yn.getOverrides()},getFlagStatus(e){return this.overrides.hasOwnProperty(e)?"overridden":Yn.isEnabled(e)?"enabled":"disabled"},getFlagDisplayClass(e){const t="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium";switch(this.getFlagStatus(e)){case"enabled":return`${t} bg-green-800 text-green-200`;case"disabled":return`${t} bg-red-800 text-red-200`;case"overridden":return`${t} bg-yellow-800 text-yellow-200`;default:return`${t} bg-gray-800 text-gray-200`}}})),console.log("D&D Beyond to Fantasy Grounds Converter v2.0 - Development Build"),console.log("Modern refactor in progress..."),"undefined"!=typeof window&&(window.featureFlags=Yn,window.characterFetcher=Qn,window.characterConverterFacade=kr,window.gameConfigService=er,window.ObjectSearch=tr,window.StringSanitizer=nr,window.SafeAccess=rr,window.AbilityScoreUtils=sr,window.AbilityScoreProcessor=or,window.SpellSlotCalculator=fr),document.addEventListener("DOMContentLoaded",async()=>{console.log("Modern converter initialized"),console.log("Feature flags loaded:",Object.keys(Yn.getAllFlags()));try{await er.loadConfigs(),console.log("Game configuration loaded successfully")}catch(error){console.warn("Failed to load game configuration, using fallbacks:",error)}Kn.start(),console.log("Alpine.js started"),Yn.isEnabled("performance_metrics")&&(console.log("Performance metrics enabled"),console.log("Active feature flags:",Object.entries(Yn.getAllFlags()).filter(([e])=>Yn.isEnabled(e)).map(([e])=>e)))})}}});
